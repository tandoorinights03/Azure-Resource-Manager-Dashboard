/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CostManagementClient } from "@azure/arm-costmanagement";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountQuery.json
 */
function billingAccountQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/70664866";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingAccountQuery.json
 */
function billingAccountQueryMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountQueryGrouping.json
 */
function billingAccountQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/70664866";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingAccountQueryGrouping.json
 */
function billingAccountQueryGroupingMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingProfileQuery.json
 */
function billingProfileQueryMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingProfileQueryGrouping.json
 */
function billingProfileQueryGroupingMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCACustomerQuery.json
 */
function customerQueryMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCACustomerQueryGrouping.json
 */
function customerQueryGroupingMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentQuery.json
 */
function departmentQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/departments/123";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentQueryGrouping.json
 */
function departmentQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/departments/123";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountQuery.json
 */
function enrollmentAccountQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountQueryGrouping.json
 */
function enrollmentAccountQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "Daily",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCAInvoiceSectionQuery.json
 */
function invoiceSectionQueryMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCAInvoiceSectionQueryGrouping.json
 */
function invoiceSectionQueryGroupingMca() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ManagementGroupQuery.json
 */
function managementGroupQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Management/managementGroups/MyMgId";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ManagementGroupQueryGrouping.json
 */
function managementGroupQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Management/managementGroups/MyMgId";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ResourceGroupQuery.json
 */
function resourceGroupQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ResourceGroupQueryGrouping.json
 */
function resourceGroupQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "Daily",
                grouping: [{ name: "ResourceType", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/SubscriptionQuery.json
 */
function subscriptionQueryLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const parameters = {
            type: "Usage",
            dataset: {
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            timeframe: "MonthToDate"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Query the usage data for scope defined.
 *
 * @summary Query the usage data for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/SubscriptionQueryGrouping.json
 */
function subscriptionQueryGroupingLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "PreTaxCost", function: "Sum" } },
                granularity: "None",
                grouping: [{ name: "ResourceGroup", type: "Dimension" }]
            },
            timeframe: "TheLastMonth"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.query.usage(scope, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        billingAccountQueryLegacy();
        billingAccountQueryMca();
        billingAccountQueryGroupingLegacy();
        billingAccountQueryGroupingMca();
        billingProfileQueryMca();
        billingProfileQueryGroupingMca();
        customerQueryMca();
        customerQueryGroupingMca();
        departmentQueryLegacy();
        departmentQueryGroupingLegacy();
        enrollmentAccountQueryLegacy();
        enrollmentAccountQueryGroupingLegacy();
        invoiceSectionQueryMca();
        invoiceSectionQueryGroupingMca();
        managementGroupQueryLegacy();
        managementGroupQueryGroupingLegacy();
        resourceGroupQueryLegacy();
        resourceGroupQueryGroupingLegacy();
        subscriptionQueryLegacy();
        subscriptionQueryGroupingLegacy();
    });
}
main().catch(console.error);
//# sourceMappingURL=queryUsageSample.js.map