/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CostManagementClient } from "@azure/arm-costmanagement";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountForecast.json
 */
function billingAccountForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingProfileForecast.json
 */
function billingProfileForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentForecast.json
 */
function departmentForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/departments/123";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountForecast.json
 */
function enrollmentAccountForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/enrollmentAccounts/456";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/InvoiceSectionForecast.json
 */
function invoiceSectionForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ResourceGroupForecast.json
 */
function resourceGroupForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the forecast charges for scope defined.
 *
 * @summary Lists the forecast charges for scope defined.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/SubscriptionForecast.json
 */
function subscriptionForecast() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const parameters = {
            type: "Usage",
            dataset: {
                aggregation: { totalCost: { name: "Cost", function: "Sum" } },
                filter: {
                    and: [
                        {
                            or: [
                                {
                                    dimensions: {
                                        name: "ResourceLocation",
                                        operator: "In",
                                        values: ["East US", "West Europe"]
                                    }
                                },
                                {
                                    tags: {
                                        name: "Environment",
                                        operator: "In",
                                        values: ["UAT", "Prod"]
                                    }
                                }
                            ]
                        },
                        {
                            dimensions: {
                                name: "ResourceGroup",
                                operator: "In",
                                values: ["API"]
                            }
                        }
                    ]
                },
                granularity: "Daily"
            },
            includeActualCost: false,
            includeFreshPartialCost: false,
            timePeriod: {
                from: new Date("2022-08-01T00:00:00+00:00"),
                to: new Date("2022-08-31T23:59:59+00:00")
            },
            timeframe: "Custom"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.forecast.usage(scope, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        billingAccountForecast();
        billingProfileForecast();
        departmentForecast();
        enrollmentAccountForecast();
        invoiceSectionForecast();
        resourceGroupForecast();
        subscriptionForecast();
    });
}
main().catch(console.error);
//# sourceMappingURL=forecastUsageSample.js.map