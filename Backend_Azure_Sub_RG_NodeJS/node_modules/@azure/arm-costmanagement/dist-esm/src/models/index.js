/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link Origin} that the service accepts. */
export var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
export var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (KnownActionType = {}));
/** Known values of {@link ReportType} that the service accepts. */
export var KnownReportType;
(function (KnownReportType) {
    /** Usage */
    KnownReportType["Usage"] = "Usage";
})(KnownReportType || (KnownReportType = {}));
/** Known values of {@link ReportTimeframeType} that the service accepts. */
export var KnownReportTimeframeType;
(function (KnownReportTimeframeType) {
    /** WeekToDate */
    KnownReportTimeframeType["WeekToDate"] = "WeekToDate";
    /** MonthToDate */
    KnownReportTimeframeType["MonthToDate"] = "MonthToDate";
    /** YearToDate */
    KnownReportTimeframeType["YearToDate"] = "YearToDate";
    /** Custom */
    KnownReportTimeframeType["Custom"] = "Custom";
})(KnownReportTimeframeType || (KnownReportTimeframeType = {}));
/** Known values of {@link ReportGranularityType} that the service accepts. */
export var KnownReportGranularityType;
(function (KnownReportGranularityType) {
    /** Daily */
    KnownReportGranularityType["Daily"] = "Daily";
    /** Monthly */
    KnownReportGranularityType["Monthly"] = "Monthly";
})(KnownReportGranularityType || (KnownReportGranularityType = {}));
/** Known values of {@link FunctionType} that the service accepts. */
export var KnownFunctionType;
(function (KnownFunctionType) {
    /** Sum */
    KnownFunctionType["Sum"] = "Sum";
})(KnownFunctionType || (KnownFunctionType = {}));
/** Known values of {@link QueryColumnType} that the service accepts. */
export var KnownQueryColumnType;
(function (KnownQueryColumnType) {
    /** The tag associated with the cost data. */
    KnownQueryColumnType["TagKey"] = "TagKey";
    /** The dimension of cost data. */
    KnownQueryColumnType["Dimension"] = "Dimension";
})(KnownQueryColumnType || (KnownQueryColumnType = {}));
/** Known values of {@link ReportConfigSortingType} that the service accepts. */
export var KnownReportConfigSortingType;
(function (KnownReportConfigSortingType) {
    /** Ascending */
    KnownReportConfigSortingType["Ascending"] = "Ascending";
    /** Descending */
    KnownReportConfigSortingType["Descending"] = "Descending";
})(KnownReportConfigSortingType || (KnownReportConfigSortingType = {}));
/** Known values of {@link OperatorType} that the service accepts. */
export var KnownOperatorType;
(function (KnownOperatorType) {
    /** In */
    KnownOperatorType["In"] = "In";
    /** Contains */
    KnownOperatorType["Contains"] = "Contains";
})(KnownOperatorType || (KnownOperatorType = {}));
/** Known values of {@link ChartType} that the service accepts. */
export var KnownChartType;
(function (KnownChartType) {
    /** Area */
    KnownChartType["Area"] = "Area";
    /** Line */
    KnownChartType["Line"] = "Line";
    /** StackedColumn */
    KnownChartType["StackedColumn"] = "StackedColumn";
    /** GroupedColumn */
    KnownChartType["GroupedColumn"] = "GroupedColumn";
    /** Table */
    KnownChartType["Table"] = "Table";
})(KnownChartType || (KnownChartType = {}));
/** Known values of {@link AccumulatedType} that the service accepts. */
export var KnownAccumulatedType;
(function (KnownAccumulatedType) {
    /** True */
    KnownAccumulatedType["True"] = "true";
    /** False */
    KnownAccumulatedType["False"] = "false";
})(KnownAccumulatedType || (KnownAccumulatedType = {}));
/** Known values of {@link MetricType} that the service accepts. */
export var KnownMetricType;
(function (KnownMetricType) {
    /** ActualCost */
    KnownMetricType["ActualCost"] = "ActualCost";
    /** AmortizedCost */
    KnownMetricType["AmortizedCost"] = "AmortizedCost";
    /** Ahub */
    KnownMetricType["Ahub"] = "AHUB";
})(KnownMetricType || (KnownMetricType = {}));
/** Known values of {@link KpiType} that the service accepts. */
export var KnownKpiType;
(function (KnownKpiType) {
    /** Forecast */
    KnownKpiType["Forecast"] = "Forecast";
    /** Budget */
    KnownKpiType["Budget"] = "Budget";
})(KnownKpiType || (KnownKpiType = {}));
/** Known values of {@link PivotType} that the service accepts. */
export var KnownPivotType;
(function (KnownPivotType) {
    /** Dimension */
    KnownPivotType["Dimension"] = "Dimension";
    /** TagKey */
    KnownPivotType["TagKey"] = "TagKey";
})(KnownPivotType || (KnownPivotType = {}));
/** Known values of {@link AlertType} that the service accepts. */
export var KnownAlertType;
(function (KnownAlertType) {
    /** Budget */
    KnownAlertType["Budget"] = "Budget";
    /** Invoice */
    KnownAlertType["Invoice"] = "Invoice";
    /** Credit */
    KnownAlertType["Credit"] = "Credit";
    /** Quota */
    KnownAlertType["Quota"] = "Quota";
    /** General */
    KnownAlertType["General"] = "General";
    /** XCloud */
    KnownAlertType["XCloud"] = "xCloud";
    /** BudgetForecast */
    KnownAlertType["BudgetForecast"] = "BudgetForecast";
})(KnownAlertType || (KnownAlertType = {}));
/** Known values of {@link AlertCategory} that the service accepts. */
export var KnownAlertCategory;
(function (KnownAlertCategory) {
    /** Cost */
    KnownAlertCategory["Cost"] = "Cost";
    /** Usage */
    KnownAlertCategory["Usage"] = "Usage";
    /** Billing */
    KnownAlertCategory["Billing"] = "Billing";
    /** System */
    KnownAlertCategory["System"] = "System";
})(KnownAlertCategory || (KnownAlertCategory = {}));
/** Known values of {@link AlertCriteria} that the service accepts. */
export var KnownAlertCriteria;
(function (KnownAlertCriteria) {
    /** CostThresholdExceeded */
    KnownAlertCriteria["CostThresholdExceeded"] = "CostThresholdExceeded";
    /** UsageThresholdExceeded */
    KnownAlertCriteria["UsageThresholdExceeded"] = "UsageThresholdExceeded";
    /** CreditThresholdApproaching */
    KnownAlertCriteria["CreditThresholdApproaching"] = "CreditThresholdApproaching";
    /** CreditThresholdReached */
    KnownAlertCriteria["CreditThresholdReached"] = "CreditThresholdReached";
    /** QuotaThresholdApproaching */
    KnownAlertCriteria["QuotaThresholdApproaching"] = "QuotaThresholdApproaching";
    /** QuotaThresholdReached */
    KnownAlertCriteria["QuotaThresholdReached"] = "QuotaThresholdReached";
    /** MultiCurrency */
    KnownAlertCriteria["MultiCurrency"] = "MultiCurrency";
    /** ForecastCostThresholdExceeded */
    KnownAlertCriteria["ForecastCostThresholdExceeded"] = "ForecastCostThresholdExceeded";
    /** ForecastUsageThresholdExceeded */
    KnownAlertCriteria["ForecastUsageThresholdExceeded"] = "ForecastUsageThresholdExceeded";
    /** InvoiceDueDateApproaching */
    KnownAlertCriteria["InvoiceDueDateApproaching"] = "InvoiceDueDateApproaching";
    /** InvoiceDueDateReached */
    KnownAlertCriteria["InvoiceDueDateReached"] = "InvoiceDueDateReached";
    /** CrossCloudNewDataAvailable */
    KnownAlertCriteria["CrossCloudNewDataAvailable"] = "CrossCloudNewDataAvailable";
    /** CrossCloudCollectionError */
    KnownAlertCriteria["CrossCloudCollectionError"] = "CrossCloudCollectionError";
    /** GeneralThresholdError */
    KnownAlertCriteria["GeneralThresholdError"] = "GeneralThresholdError";
})(KnownAlertCriteria || (KnownAlertCriteria = {}));
/** Known values of {@link AlertSource} that the service accepts. */
export var KnownAlertSource;
(function (KnownAlertSource) {
    /** Preset */
    KnownAlertSource["Preset"] = "Preset";
    /** User */
    KnownAlertSource["User"] = "User";
})(KnownAlertSource || (KnownAlertSource = {}));
/** Known values of {@link AlertTimeGrainType} that the service accepts. */
export var KnownAlertTimeGrainType;
(function (KnownAlertTimeGrainType) {
    /** None */
    KnownAlertTimeGrainType["None"] = "None";
    /** Monthly */
    KnownAlertTimeGrainType["Monthly"] = "Monthly";
    /** Quarterly */
    KnownAlertTimeGrainType["Quarterly"] = "Quarterly";
    /** Annually */
    KnownAlertTimeGrainType["Annually"] = "Annually";
    /** BillingMonth */
    KnownAlertTimeGrainType["BillingMonth"] = "BillingMonth";
    /** BillingQuarter */
    KnownAlertTimeGrainType["BillingQuarter"] = "BillingQuarter";
    /** BillingAnnual */
    KnownAlertTimeGrainType["BillingAnnual"] = "BillingAnnual";
})(KnownAlertTimeGrainType || (KnownAlertTimeGrainType = {}));
/** Known values of {@link AlertOperator} that the service accepts. */
export var KnownAlertOperator;
(function (KnownAlertOperator) {
    /** None */
    KnownAlertOperator["None"] = "None";
    /** EqualTo */
    KnownAlertOperator["EqualTo"] = "EqualTo";
    /** GreaterThan */
    KnownAlertOperator["GreaterThan"] = "GreaterThan";
    /** GreaterThanOrEqualTo */
    KnownAlertOperator["GreaterThanOrEqualTo"] = "GreaterThanOrEqualTo";
    /** LessThan */
    KnownAlertOperator["LessThan"] = "LessThan";
    /** LessThanOrEqualTo */
    KnownAlertOperator["LessThanOrEqualTo"] = "LessThanOrEqualTo";
})(KnownAlertOperator || (KnownAlertOperator = {}));
/** Known values of {@link AlertStatus} that the service accepts. */
export var KnownAlertStatus;
(function (KnownAlertStatus) {
    /** None */
    KnownAlertStatus["None"] = "None";
    /** Active */
    KnownAlertStatus["Active"] = "Active";
    /** Overridden */
    KnownAlertStatus["Overridden"] = "Overridden";
    /** Resolved */
    KnownAlertStatus["Resolved"] = "Resolved";
    /** Dismissed */
    KnownAlertStatus["Dismissed"] = "Dismissed";
})(KnownAlertStatus || (KnownAlertStatus = {}));
/** Known values of {@link ExternalCloudProviderType} that the service accepts. */
export var KnownExternalCloudProviderType;
(function (KnownExternalCloudProviderType) {
    /** ExternalSubscriptions */
    KnownExternalCloudProviderType["ExternalSubscriptions"] = "externalSubscriptions";
    /** ExternalBillingAccounts */
    KnownExternalCloudProviderType["ExternalBillingAccounts"] = "externalBillingAccounts";
})(KnownExternalCloudProviderType || (KnownExternalCloudProviderType = {}));
/** Known values of {@link ForecastType} that the service accepts. */
export var KnownForecastType;
(function (KnownForecastType) {
    /** Usage */
    KnownForecastType["Usage"] = "Usage";
    /** ActualCost */
    KnownForecastType["ActualCost"] = "ActualCost";
    /** AmortizedCost */
    KnownForecastType["AmortizedCost"] = "AmortizedCost";
})(KnownForecastType || (KnownForecastType = {}));
/** Known values of {@link ForecastTimeframe} that the service accepts. */
export var KnownForecastTimeframe;
(function (KnownForecastTimeframe) {
    /** Custom */
    KnownForecastTimeframe["Custom"] = "Custom";
})(KnownForecastTimeframe || (KnownForecastTimeframe = {}));
/** Known values of {@link GranularityType} that the service accepts. */
export var KnownGranularityType;
(function (KnownGranularityType) {
    /** Daily */
    KnownGranularityType["Daily"] = "Daily";
})(KnownGranularityType || (KnownGranularityType = {}));
/** Known values of {@link FunctionName} that the service accepts. */
export var KnownFunctionName;
(function (KnownFunctionName) {
    /** PreTaxCostUSD */
    KnownFunctionName["PreTaxCostUSD"] = "PreTaxCostUSD";
    /** Cost */
    KnownFunctionName["Cost"] = "Cost";
    /** CostUSD */
    KnownFunctionName["CostUSD"] = "CostUSD";
    /** PreTaxCost */
    KnownFunctionName["PreTaxCost"] = "PreTaxCost";
})(KnownFunctionName || (KnownFunctionName = {}));
/** Known values of {@link ForecastOperatorType} that the service accepts. */
export var KnownForecastOperatorType;
(function (KnownForecastOperatorType) {
    /** In */
    KnownForecastOperatorType["In"] = "In";
})(KnownForecastOperatorType || (KnownForecastOperatorType = {}));
/** Known values of {@link ExportType} that the service accepts. */
export var KnownExportType;
(function (KnownExportType) {
    /** Usage */
    KnownExportType["Usage"] = "Usage";
    /** ActualCost */
    KnownExportType["ActualCost"] = "ActualCost";
    /** AmortizedCost */
    KnownExportType["AmortizedCost"] = "AmortizedCost";
})(KnownExportType || (KnownExportType = {}));
/** Known values of {@link TimeframeType} that the service accepts. */
export var KnownTimeframeType;
(function (KnownTimeframeType) {
    /** MonthToDate */
    KnownTimeframeType["MonthToDate"] = "MonthToDate";
    /** BillingMonthToDate */
    KnownTimeframeType["BillingMonthToDate"] = "BillingMonthToDate";
    /** TheLastMonth */
    KnownTimeframeType["TheLastMonth"] = "TheLastMonth";
    /** TheLastBillingMonth */
    KnownTimeframeType["TheLastBillingMonth"] = "TheLastBillingMonth";
    /** WeekToDate */
    KnownTimeframeType["WeekToDate"] = "WeekToDate";
    /** Custom */
    KnownTimeframeType["Custom"] = "Custom";
})(KnownTimeframeType || (KnownTimeframeType = {}));
/** Known values of {@link QueryOperatorType} that the service accepts. */
export var KnownQueryOperatorType;
(function (KnownQueryOperatorType) {
    /** In */
    KnownQueryOperatorType["In"] = "In";
})(KnownQueryOperatorType || (KnownQueryOperatorType = {}));
/** Known values of {@link OperationStatusType} that the service accepts. */
export var KnownOperationStatusType;
(function (KnownOperationStatusType) {
    /** Running */
    KnownOperationStatusType["Running"] = "Running";
    /** Completed */
    KnownOperationStatusType["Completed"] = "Completed";
    /** Failed */
    KnownOperationStatusType["Failed"] = "Failed";
})(KnownOperationStatusType || (KnownOperationStatusType = {}));
/** Known values of {@link ReservationReportSchema} that the service accepts. */
export var KnownReservationReportSchema;
(function (KnownReservationReportSchema) {
    /** InstanceFlexibilityGroup */
    KnownReservationReportSchema["InstanceFlexibilityGroup"] = "InstanceFlexibilityGroup";
    /** InstanceFlexibilityRatio */
    KnownReservationReportSchema["InstanceFlexibilityRatio"] = "InstanceFlexibilityRatio";
    /** InstanceId */
    KnownReservationReportSchema["InstanceId"] = "InstanceId";
    /** Kind */
    KnownReservationReportSchema["Kind"] = "Kind";
    /** ReservationId */
    KnownReservationReportSchema["ReservationId"] = "ReservationId";
    /** ReservationOrderId */
    KnownReservationReportSchema["ReservationOrderId"] = "ReservationOrderId";
    /** ReservedHours */
    KnownReservationReportSchema["ReservedHours"] = "ReservedHours";
    /** SkuName */
    KnownReservationReportSchema["SkuName"] = "SkuName";
    /** TotalReservedQuantity */
    KnownReservationReportSchema["TotalReservedQuantity"] = "TotalReservedQuantity";
    /** UsageDate */
    KnownReservationReportSchema["UsageDate"] = "UsageDate";
    /** UsedHours */
    KnownReservationReportSchema["UsedHours"] = "UsedHours";
})(KnownReservationReportSchema || (KnownReservationReportSchema = {}));
/** Known values of {@link StatusType} that the service accepts. */
export var KnownStatusType;
(function (KnownStatusType) {
    /** Active */
    KnownStatusType["Active"] = "Active";
    /** Inactive */
    KnownStatusType["Inactive"] = "Inactive";
})(KnownStatusType || (KnownStatusType = {}));
/** Known values of {@link RecurrenceType} that the service accepts. */
export var KnownRecurrenceType;
(function (KnownRecurrenceType) {
    /** Daily */
    KnownRecurrenceType["Daily"] = "Daily";
    /** Weekly */
    KnownRecurrenceType["Weekly"] = "Weekly";
    /** Monthly */
    KnownRecurrenceType["Monthly"] = "Monthly";
    /** Annually */
    KnownRecurrenceType["Annually"] = "Annually";
})(KnownRecurrenceType || (KnownRecurrenceType = {}));
/** Known values of {@link FormatType} that the service accepts. */
export var KnownFormatType;
(function (KnownFormatType) {
    /** Csv */
    KnownFormatType["Csv"] = "Csv";
})(KnownFormatType || (KnownFormatType = {}));
/** Known values of {@link ExecutionType} that the service accepts. */
export var KnownExecutionType;
(function (KnownExecutionType) {
    /** OnDemand */
    KnownExecutionType["OnDemand"] = "OnDemand";
    /** Scheduled */
    KnownExecutionType["Scheduled"] = "Scheduled";
})(KnownExecutionType || (KnownExecutionType = {}));
/** Known values of {@link ExecutionStatus} that the service accepts. */
export var KnownExecutionStatus;
(function (KnownExecutionStatus) {
    /** Queued */
    KnownExecutionStatus["Queued"] = "Queued";
    /** InProgress */
    KnownExecutionStatus["InProgress"] = "InProgress";
    /** Completed */
    KnownExecutionStatus["Completed"] = "Completed";
    /** Failed */
    KnownExecutionStatus["Failed"] = "Failed";
    /** Timeout */
    KnownExecutionStatus["Timeout"] = "Timeout";
    /** NewDataNotAvailable */
    KnownExecutionStatus["NewDataNotAvailable"] = "NewDataNotAvailable";
    /** DataNotAvailable */
    KnownExecutionStatus["DataNotAvailable"] = "DataNotAvailable";
})(KnownExecutionStatus || (KnownExecutionStatus = {}));
/** Known values of {@link CostDetailsMetricType} that the service accepts. */
export var KnownCostDetailsMetricType;
(function (KnownCostDetailsMetricType) {
    /** Actual cost data. */
    KnownCostDetailsMetricType["ActualCostCostDetailsMetricType"] = "ActualCost";
    /** Amortized cost data. */
    KnownCostDetailsMetricType["AmortizedCostCostDetailsMetricType"] = "AmortizedCost";
})(KnownCostDetailsMetricType || (KnownCostDetailsMetricType = {}));
/** Known values of {@link CostDetailsStatusType} that the service accepts. */
export var KnownCostDetailsStatusType;
(function (KnownCostDetailsStatusType) {
    /** Operation is Completed. */
    KnownCostDetailsStatusType["CompletedCostDetailsStatusType"] = "Completed";
    /** Operation is Completed and no cost data found. */
    KnownCostDetailsStatusType["NoDataFoundCostDetailsStatusType"] = "NoDataFound";
    /** Operation Failed. */
    KnownCostDetailsStatusType["FailedCostDetailsStatusType"] = "Failed";
})(KnownCostDetailsStatusType || (KnownCostDetailsStatusType = {}));
/** Known values of {@link CostDetailsDataFormat} that the service accepts. */
export var KnownCostDetailsDataFormat;
(function (KnownCostDetailsDataFormat) {
    /** Csv data format. */
    KnownCostDetailsDataFormat["CsvCostDetailsDataFormat"] = "Csv";
})(KnownCostDetailsDataFormat || (KnownCostDetailsDataFormat = {}));
/** Known values of {@link GenerateDetailedCostReportMetricType} that the service accepts. */
export var KnownGenerateDetailedCostReportMetricType;
(function (KnownGenerateDetailedCostReportMetricType) {
    /** ActualCost */
    KnownGenerateDetailedCostReportMetricType["ActualCost"] = "ActualCost";
    /** AmortizedCost */
    KnownGenerateDetailedCostReportMetricType["AmortizedCost"] = "AmortizedCost";
})(KnownGenerateDetailedCostReportMetricType || (KnownGenerateDetailedCostReportMetricType = {}));
/** Known values of {@link ReportOperationStatusType} that the service accepts. */
export var KnownReportOperationStatusType;
(function (KnownReportOperationStatusType) {
    /** InProgress */
    KnownReportOperationStatusType["InProgress"] = "InProgress";
    /** Completed */
    KnownReportOperationStatusType["Completed"] = "Completed";
    /** Failed */
    KnownReportOperationStatusType["Failed"] = "Failed";
    /** Queued */
    KnownReportOperationStatusType["Queued"] = "Queued";
    /** NoDataFound */
    KnownReportOperationStatusType["NoDataFound"] = "NoDataFound";
    /** ReadyToDownload */
    KnownReportOperationStatusType["ReadyToDownload"] = "ReadyToDownload";
    /** TimedOut */
    KnownReportOperationStatusType["TimedOut"] = "TimedOut";
})(KnownReportOperationStatusType || (KnownReportOperationStatusType = {}));
/** Known values of {@link FileFormat} that the service accepts. */
export var KnownFileFormat;
(function (KnownFileFormat) {
    /** Csv */
    KnownFileFormat["Csv"] = "Csv";
})(KnownFileFormat || (KnownFileFormat = {}));
/** Known values of {@link ScheduleFrequency} that the service accepts. */
export var KnownScheduleFrequency;
(function (KnownScheduleFrequency) {
    /** Cost analysis data will be emailed every day. */
    KnownScheduleFrequency["Daily"] = "Daily";
    /** Cost analysis data will be emailed every week. */
    KnownScheduleFrequency["Weekly"] = "Weekly";
    /** Cost analysis data will be emailed every month. */
    KnownScheduleFrequency["Monthly"] = "Monthly";
})(KnownScheduleFrequency || (KnownScheduleFrequency = {}));
/** Known values of {@link DaysOfWeek} that the service accepts. */
export var KnownDaysOfWeek;
(function (KnownDaysOfWeek) {
    /** Monday */
    KnownDaysOfWeek["Monday"] = "Monday";
    /** Tuesday */
    KnownDaysOfWeek["Tuesday"] = "Tuesday";
    /** Wednesday */
    KnownDaysOfWeek["Wednesday"] = "Wednesday";
    /** Thursday */
    KnownDaysOfWeek["Thursday"] = "Thursday";
    /** Friday */
    KnownDaysOfWeek["Friday"] = "Friday";
    /** Saturday */
    KnownDaysOfWeek["Saturday"] = "Saturday";
    /** Sunday */
    KnownDaysOfWeek["Sunday"] = "Sunday";
})(KnownDaysOfWeek || (KnownDaysOfWeek = {}));
/** Known values of {@link WeeksOfMonth} that the service accepts. */
export var KnownWeeksOfMonth;
(function (KnownWeeksOfMonth) {
    /** First */
    KnownWeeksOfMonth["First"] = "First";
    /** Second */
    KnownWeeksOfMonth["Second"] = "Second";
    /** Third */
    KnownWeeksOfMonth["Third"] = "Third";
    /** Fourth */
    KnownWeeksOfMonth["Fourth"] = "Fourth";
    /** Last */
    KnownWeeksOfMonth["Last"] = "Last";
})(KnownWeeksOfMonth || (KnownWeeksOfMonth = {}));
/** Known values of {@link ScheduledActionStatus} that the service accepts. */
export var KnownScheduledActionStatus;
(function (KnownScheduledActionStatus) {
    /** Scheduled action is saved but will not be run. */
    KnownScheduledActionStatus["Disabled"] = "Disabled";
    /** Scheduled action is saved and will be run. */
    KnownScheduledActionStatus["Enabled"] = "Enabled";
    /** Scheduled action is expired. */
    KnownScheduledActionStatus["Expired"] = "Expired";
})(KnownScheduledActionStatus || (KnownScheduledActionStatus = {}));
/** Known values of {@link ScheduledActionKind} that the service accepts. */
export var KnownScheduledActionKind;
(function (KnownScheduledActionKind) {
    /** Cost analysis data will be emailed. */
    KnownScheduledActionKind["Email"] = "Email";
    /** Cost anomaly information will be emailed. Available only on subscription scope at daily frequency. If no anomaly is detected on the resource, an email won't be sent. */
    KnownScheduledActionKind["InsightAlert"] = "InsightAlert";
})(KnownScheduledActionKind || (KnownScheduledActionKind = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export var KnownCheckNameAvailabilityReason;
(function (KnownCheckNameAvailabilityReason) {
    /** Invalid */
    KnownCheckNameAvailabilityReason["Invalid"] = "Invalid";
    /** AlreadyExists */
    KnownCheckNameAvailabilityReason["AlreadyExists"] = "AlreadyExists";
})(KnownCheckNameAvailabilityReason || (KnownCheckNameAvailabilityReason = {}));
/** Known values of {@link LookBackPeriod} that the service accepts. */
export var KnownLookBackPeriod;
(function (KnownLookBackPeriod) {
    /** 7 days used to look back. */
    KnownLookBackPeriod["Last7Days"] = "Last7Days";
    /** 30 days used to look back. */
    KnownLookBackPeriod["Last30Days"] = "Last30Days";
    /** 60 days used to look back. */
    KnownLookBackPeriod["Last60Days"] = "Last60Days";
})(KnownLookBackPeriod || (KnownLookBackPeriod = {}));
/** Known values of {@link Grain} that the service accepts. */
export var KnownGrain;
(function (KnownGrain) {
    /** Hourly grain corresponds to value per hour. */
    KnownGrain["Hourly"] = "Hourly";
    /** Hourly grain corresponds to value per day. */
    KnownGrain["Daily"] = "Daily";
    /** Hourly grain corresponds to value per month. */
    KnownGrain["Monthly"] = "Monthly";
})(KnownGrain || (KnownGrain = {}));
/** Known values of {@link Term} that the service accepts. */
export var KnownTerm;
(function (KnownTerm) {
    /** Benefit term is 1 year. */
    KnownTerm["P1Y"] = "P1Y";
    /** Benefit term is 3 years. */
    KnownTerm["P3Y"] = "P3Y";
})(KnownTerm || (KnownTerm = {}));
/** Known values of {@link Scope} that the service accepts. */
export var KnownScope;
(function (KnownScope) {
    /** Single scope recommendation. */
    KnownScope["Single"] = "Single";
    /** Shared scope recommendation. */
    KnownScope["Shared"] = "Shared";
})(KnownScope || (KnownScope = {}));
/** Known values of {@link BenefitKind} that the service accepts. */
export var KnownBenefitKind;
(function (KnownBenefitKind) {
    /** Benefit is IncludedQuantity. */
    KnownBenefitKind["IncludedQuantity"] = "IncludedQuantity";
    /** Benefit is Reservation. */
    KnownBenefitKind["Reservation"] = "Reservation";
    /** Benefit is SavingsPlan. */
    KnownBenefitKind["SavingsPlan"] = "SavingsPlan";
})(KnownBenefitKind || (KnownBenefitKind = {}));
/** Known values of {@link GrainParameter} that the service accepts. */
export var KnownGrainParameter;
(function (KnownGrainParameter) {
    /** Hourly grain corresponds to value per hour. */
    KnownGrainParameter["Hourly"] = "Hourly";
    /** Hourly grain corresponds to value per day. */
    KnownGrainParameter["Daily"] = "Daily";
    /** Hourly grain corresponds to value per month. */
    KnownGrainParameter["Monthly"] = "Monthly";
})(KnownGrainParameter || (KnownGrainParameter = {}));
//# sourceMappingURL=index.js.map