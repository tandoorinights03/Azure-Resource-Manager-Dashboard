/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CostManagementClient } from "@azure/arm-costmanagement";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountDimensionsList.json
 */
function billingAccountDimensionsListLegacy() {
    var _a, e_1, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingAccountDimensionsList.json
 */
function billingAccountDimensionsListMca() {
    var _a, e_2, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountDimensionsListExpandAndTop.json
 */
function billingAccountDimensionsListExpandAndTopLegacy() {
    var _a, e_3, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingAccountDimensionsListExpandAndTop.json
 */
function billingAccountDimensionsListExpandAndTopMca() {
    var _a, e_4, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_4) throw e_4.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/BillingAccountDimensionsListWithFilter.json
 */
function billingAccountDimensionsListWithFilterLegacy() {
    var _a, e_5, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_5) throw e_5.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingAccountDimensionsListWithFilter.json
 */
function billingAccountDimensionsListWithFilterMca() {
    var _a, e_6, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_6) throw e_6.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingProfileDimensionsList.json
 */
function billingProfileDimensionsListMca() {
    var _a, e_7, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_7) throw e_7.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingProfileDimensionsListExpandAndTop.json
 */
function billingProfileDimensionsListExpandAndTopMca() {
    var _a, e_8, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_8) throw e_8.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCABillingProfileDimensionsListWithFilter.json
 */
function billingProfileDimensionsListWithFilterMca() {
    var _a, e_9, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_9) throw e_9.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCACustomerDimensionsList.json
 */
function customerDimensionsListMca() {
    var _a, e_10, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_10) throw e_10.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCACustomerDimensionsListExpandAndTop.json
 */
function customerDimensionsListExpandAndTopMca() {
    var _a, e_11, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_11) throw e_11.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCACustomerDimensionsListWithFilter.json
 */
function customerDimensionsListWithFilterMca() {
    var _a, e_12, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_12) throw e_12.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentDimensionsList.json
 */
function departmentDimensionsListLegacy() {
    var _a, e_13, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/departments/123";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_13) throw e_13.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentDimensionsListExpandAndTop.json
 */
function departmentDimensionsListExpandAndTopLegacy() {
    var _a, e_14, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/departments/123";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_14) throw e_14.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/DepartmentDimensionsListWithFilter.json
 */
function departmentDimensionsListWithFilterLegacy() {
    var _a, e_15, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/departments/123";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_15_1) { e_15 = { error: e_15_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_15) throw e_15.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountDimensionsList.json
 */
function enrollmentAccountDimensionsListLegacy() {
    var _a, e_16, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_16_1) { e_16 = { error: e_16_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_16) throw e_16.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountDimensionsListExpandAndTop.json
 */
function enrollmentAccountDimensionsListExpandAndTopLegacy() {
    var _a, e_17, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_17_1) { e_17 = { error: e_17_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_17) throw e_17.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/EnrollmentAccountDimensionsListWithFilter.json
 */
function enrollmentAccountDimensionsListWithFilterLegacy() {
    var _a, e_18, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_18) throw e_18.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCAInvoiceSectionDimensionsList.json
 */
function invoiceSectionDimensionsListMca() {
    var _a, e_19, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_19_1) { e_19 = { error: e_19_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_19) throw e_19.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCAInvoiceSectionDimensionsListExpandAndTop.json
 */
function invoiceSectionDimensionsListExpandAndTopMca() {
    var _a, e_20, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_20_1) { e_20 = { error: e_20_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_20) throw e_20.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/MCAInvoiceSectionDimensionsListWithFilter.json
 */
function invoiceSectionDimensionsListWithFilterMca() {
    var _a, e_21, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/9876";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_21_1) { e_21 = { error: e_21_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_21) throw e_21.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ManagementGroupDimensionsList.json
 */
function managementGroupDimensionsListLegacy() {
    var _a, e_22, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Management/managementGroups/MyMgId";
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_22_1) { e_22 = { error: e_22_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_22) throw e_22.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ManagementGroupDimensionsListExpandAndTop.json
 */
function managementGroupDimensionsListExpandAndTopLegacy() {
    var _a, e_23, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Management/managementGroups/MyMgId";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_23_1) { e_23 = { error: e_23_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_23) throw e_23.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ManagementGroupDimensionsListWithFilter.json
 */
function managementGroupDimensionsListWithFilterLegacy() {
    var _a, e_24, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Management/managementGroups/MyMgId";
        const filter = "properties/category eq 'resourceId'";
        const expand = "properties/data";
        const top = 5;
        const options = { filter, expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_24_1) { e_24 = { error: e_24_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_24) throw e_24.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/ResourceGroupDimensionsList.json
 */
function resourceGroupDimensionsListLegacy() {
    var _a, e_25, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/system.orlando";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_25_1) { e_25 = { error: e_25_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_25) throw e_25.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the dimensions by the defined scope.
 *
 * @summary Lists the dimensions by the defined scope.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/SubscriptionDimensionsList.json
 */
function subscriptionDimensionsListLegacy() {
    var _a, e_26, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const expand = "properties/data";
        const top = 5;
        const options = { expand, top };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const resArray = new Array();
        try {
            for (var _d = true, _e = __asyncValues(client.dimensions.list(scope, options)), _f; _f = yield _e.next(), _a = _f.done, !_a;) {
                _c = _f.value;
                _d = false;
                try {
                    let item = _c;
                    resArray.push(item);
                }
                finally {
                    _d = true;
                }
            }
        }
        catch (e_26_1) { e_26 = { error: e_26_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
            }
            finally { if (e_26) throw e_26.error; }
        }
        console.log(resArray);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        billingAccountDimensionsListLegacy();
        billingAccountDimensionsListMca();
        billingAccountDimensionsListExpandAndTopLegacy();
        billingAccountDimensionsListExpandAndTopMca();
        billingAccountDimensionsListWithFilterLegacy();
        billingAccountDimensionsListWithFilterMca();
        billingProfileDimensionsListMca();
        billingProfileDimensionsListExpandAndTopMca();
        billingProfileDimensionsListWithFilterMca();
        customerDimensionsListMca();
        customerDimensionsListExpandAndTopMca();
        customerDimensionsListWithFilterMca();
        departmentDimensionsListLegacy();
        departmentDimensionsListExpandAndTopLegacy();
        departmentDimensionsListWithFilterLegacy();
        enrollmentAccountDimensionsListLegacy();
        enrollmentAccountDimensionsListExpandAndTopLegacy();
        enrollmentAccountDimensionsListWithFilterLegacy();
        invoiceSectionDimensionsListMca();
        invoiceSectionDimensionsListExpandAndTopMca();
        invoiceSectionDimensionsListWithFilterMca();
        managementGroupDimensionsListLegacy();
        managementGroupDimensionsListExpandAndTopLegacy();
        managementGroupDimensionsListWithFilterLegacy();
        resourceGroupDimensionsListLegacy();
        subscriptionDimensionsListLegacy();
    });
}
main().catch(console.error);
//# sourceMappingURL=dimensionsListSample.js.map