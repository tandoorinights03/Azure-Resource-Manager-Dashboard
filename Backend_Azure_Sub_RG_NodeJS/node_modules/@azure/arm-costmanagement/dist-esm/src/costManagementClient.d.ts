import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Views, Alerts, Forecast, Dimensions, Query, GenerateReservationDetailsReport, Exports, GenerateCostDetailsReport, GenerateDetailedCostReport, GenerateDetailedCostReportOperationResults, GenerateDetailedCostReportOperationStatus, PriceSheet, ScheduledActions, BenefitRecommendations, BenefitUtilizationSummaries } from "./operationsInterfaces";
import { CostManagementClientOptionalParams } from "./models";
export declare class CostManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the CostManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, options?: CostManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    views: Views;
    alerts: Alerts;
    forecast: Forecast;
    dimensions: Dimensions;
    query: Query;
    generateReservationDetailsReport: GenerateReservationDetailsReport;
    exports: Exports;
    generateCostDetailsReport: GenerateCostDetailsReport;
    generateDetailedCostReport: GenerateDetailedCostReport;
    generateDetailedCostReportOperationResults: GenerateDetailedCostReportOperationResults;
    generateDetailedCostReportOperationStatus: GenerateDetailedCostReportOperationStatus;
    priceSheet: PriceSheet;
    scheduledActions: ScheduledActions;
    benefitRecommendations: BenefitRecommendations;
    benefitUtilizationSummaries: BenefitUtilizationSummaries;
}
//# sourceMappingURL=costManagementClient.d.ts.map