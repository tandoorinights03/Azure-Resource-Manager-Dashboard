{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/operations/views.ts","../src/operations/alerts.ts","../src/operations/forecast.ts","../src/operations/dimensions.ts","../src/operations/query.ts","../src/lroImpl.ts","../src/operations/generateReservationDetailsReport.ts","../src/operations/exports.ts","../src/operations/generateCostDetailsReport.ts","../src/operations/generateDetailedCostReport.ts","../src/operations/generateDetailedCostReportOperationResults.ts","../src/operations/generateDetailedCostReportOperationStatus.ts","../src/operations/priceSheet.ts","../src/operations/scheduledActions.ts","../src/operations/benefitRecommendations.ts","../src/operations/benefitUtilizationSummaries.ts","../src/costManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type BenefitRecommendationPropertiesUnion =\n  | BenefitRecommendationProperties\n  | SingleScopeBenefitRecommendationProperties\n  | SharedScopeBenefitRecommendationProperties;\nexport type BenefitUtilizationSummaryUnion =\n  | BenefitUtilizationSummary\n  | IncludedQuantityUtilizationSummary\n  | SavingsPlanUtilizationSummary;\n\n/** Result of listing cost management operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of cost management operations supported by the Microsoft.CostManagement resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: CostManagementOperation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Details of a REST API operation, returned from the Resource Provider Operations API */\nexport interface Operation {\n  /**\n   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDataAction?: boolean;\n  /** Localized display information for this particular operation. */\n  display?: OperationDisplay;\n  /**\n   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: Origin;\n  /**\n   * Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionType?: ActionType;\n}\n\n/** Localized display information for this particular operation. */\nexport interface OperationDisplay {\n  /**\n   * The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface ErrorResponse {\n  /** The details of the error. */\n  error?: ErrorDetails;\n}\n\n/** The details of the error. */\nexport interface ErrorDetails {\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of listing views. It contains a list of available views. */\nexport interface ViewListResult {\n  /**\n   * The list of views.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: View[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The start and end date for pulling data for the report. */\nexport interface ReportConfigTimePeriod {\n  /** The start date to pull data from. */\n  from: Date;\n  /** The end date to pull data to. */\n  to: Date;\n}\n\n/** The definition of data present in the report. */\nexport interface ReportConfigDataset {\n  /** The granularity of rows in the report. */\n  granularity?: ReportGranularityType;\n  /** Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided. */\n  configuration?: ReportConfigDatasetConfiguration;\n  /** Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses. */\n  aggregation?: { [propertyName: string]: ReportConfigAggregation };\n  /** Array of group by expression to use in the report. Report can have up to 2 group by clauses. */\n  grouping?: ReportConfigGrouping[];\n  /** Array of order by expression to use in the report. */\n  sorting?: ReportConfigSorting[];\n  /** Has filter expression to use in the report. */\n  filter?: ReportConfigFilter;\n}\n\n/** The configuration of dataset in the report. */\nexport interface ReportConfigDatasetConfiguration {\n  /** Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns. */\n  columns?: string[];\n}\n\n/** The aggregation expression to be used in the report. */\nexport interface ReportConfigAggregation {\n  /** The name of the column to aggregate. */\n  name: string;\n  /** The name of the aggregation function to use. */\n  function: FunctionType;\n}\n\n/** The group by expression to be used in the report. */\nexport interface ReportConfigGrouping {\n  /** Has type of the column to group. */\n  type: QueryColumnType;\n  /** The name of the column to group. This version supports subscription lowest possible grain. */\n  name: string;\n}\n\n/** The order by expression to be used in the report. */\nexport interface ReportConfigSorting {\n  /** Direction of sort. */\n  direction?: ReportConfigSortingType;\n  /** The name of the column to sort. */\n  name: string;\n}\n\n/** The filter expression to be used in the report. */\nexport interface ReportConfigFilter {\n  /** The logical \"AND\" expression. Must have at least 2 items. */\n  and?: ReportConfigFilter[];\n  /** The logical \"OR\" expression. Must have at least 2 items. */\n  or?: ReportConfigFilter[];\n  /** Has comparison expression for a dimension */\n  dimensions?: ReportConfigComparisonExpression;\n  /** Has comparison expression for a tag */\n  tags?: ReportConfigComparisonExpression;\n}\n\n/** The comparison expression to be used in the report. */\nexport interface ReportConfigComparisonExpression {\n  /** The name of the column to use in comparison. */\n  name: string;\n  /** The operator to use for comparison. */\n  operator: OperatorType;\n  /** Array of values to use for comparison */\n  values: string[];\n}\n\n/** Each KPI must contain a 'type' and 'enabled' key. */\nexport interface KpiProperties {\n  /** KPI type (Forecast, Budget). */\n  type?: KpiType;\n  /** ID of resource related to metric (budget). */\n  id?: string;\n  /** show the KPI in the UI? */\n  enabled?: boolean;\n}\n\n/** Each pivot must contain a 'type' and 'name'. */\nexport interface PivotProperties {\n  /** Data type to show in view. */\n  type?: PivotType;\n  /** Data field to show in view. */\n  name?: string;\n}\n\n/** The Resource model definition. */\nexport interface CostManagementProxyResource {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not. */\n  eTag?: string;\n}\n\n/** Result of alerts. */\nexport interface AlertsResult {\n  /**\n   * List of alerts.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Alert[];\n  /**\n   * URL to get the next set of alerts results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** defines the type of alert */\nexport interface AlertPropertiesDefinition {\n  /** type of alert */\n  type?: AlertType;\n  /** Alert category */\n  category?: AlertCategory;\n  /** Criteria that triggered alert */\n  criteria?: AlertCriteria;\n}\n\n/** Alert details */\nexport interface AlertPropertiesDetails {\n  /** Type of timegrain cadence */\n  timeGrainType?: AlertTimeGrainType;\n  /** datetime of periodStartDate */\n  periodStartDate?: string;\n  /** notificationId that triggered this alert */\n  triggeredBy?: string;\n  /** array of resourceGroups to filter by */\n  resourceGroupFilter?: any[];\n  /** array of resources to filter by */\n  resourceFilter?: any[];\n  /** array of meters to filter by */\n  meterFilter?: any[];\n  /** tags to filter by */\n  tagFilter?: Record<string, unknown>;\n  /** notification threshold percentage as a decimal which activated this alert */\n  threshold?: number;\n  /** operator used to compare currentSpend with amount */\n  operator?: AlertOperator;\n  /** budget threshold amount */\n  amount?: number;\n  /** unit of currency being used */\n  unit?: string;\n  /** current spend */\n  currentSpend?: number;\n  /** list of emails to contact */\n  contactEmails?: string[];\n  /** list of action groups to broadcast to */\n  contactGroups?: string[];\n  /** list of contact roles */\n  contactRoles?: string[];\n  /** overriding alert */\n  overridingAlert?: string;\n  /** department name */\n  departmentName?: string;\n  /** company name */\n  companyName?: string;\n  /** enrollment number */\n  enrollmentNumber?: string;\n  /** datetime of enrollmentStartDate */\n  enrollmentStartDate?: string;\n  /** datetime of enrollmentEndDate */\n  enrollmentEndDate?: string;\n  /** invoicing threshold */\n  invoicingThreshold?: number;\n}\n\n/** The request payload to update an alert */\nexport interface DismissAlertPayload {\n  /** defines the type of alert */\n  definition?: AlertPropertiesDefinition;\n  /** Alert description */\n  description?: string;\n  /** Source of alert */\n  source?: AlertSource;\n  /** Alert details */\n  details?: AlertPropertiesDetails;\n  /** related budget */\n  costEntityId?: string;\n  /** alert status */\n  status?: AlertStatus;\n  /** dateTime in which alert was created */\n  creationTime?: string;\n  /** dateTime in which alert was closed */\n  closeTime?: string;\n  /** dateTime in which alert was last modified */\n  modificationTime?: string;\n  /** User who last modified the alert */\n  statusModificationUserName?: string;\n  /** dateTime in which the alert status was last modified */\n  statusModificationTime?: string;\n}\n\n/** The definition of a forecast. */\nexport interface ForecastDefinition {\n  /** The type of the forecast. */\n  type: ForecastType;\n  /** The time frame for pulling data for the forecast. If custom, then a specific time period must be provided. */\n  timeframe: ForecastTimeframe;\n  /** Has time period for pulling data for the forecast. */\n  timePeriod?: ForecastTimePeriod;\n  /** Has definition for data in this forecast. */\n  dataset: ForecastDataset;\n  /** A boolean determining if actualCost will be included. */\n  includeActualCost?: boolean;\n  /** A boolean determining if FreshPartialCost will be included. */\n  includeFreshPartialCost?: boolean;\n}\n\n/** Has time period for pulling data for the forecast. */\nexport interface ForecastTimePeriod {\n  /** The start date to pull data from. */\n  from: Date;\n  /** The end date to pull data to. */\n  to: Date;\n}\n\n/** The definition of data present in the forecast. */\nexport interface ForecastDataset {\n  /** The granularity of rows in the forecast. */\n  granularity?: GranularityType;\n  /** Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided. */\n  configuration?: ForecastDatasetConfiguration;\n  /** Dictionary of aggregation expression to use in the forecast. The key of each item in the dictionary is the alias for the aggregated column. forecast can have up to 2 aggregation clauses. */\n  aggregation: { [propertyName: string]: ForecastAggregation };\n  /** Has filter expression to use in the forecast. */\n  filter?: ForecastFilter;\n}\n\n/** The configuration of dataset in the forecast. */\nexport interface ForecastDatasetConfiguration {\n  /** Array of column names to be included in the forecast. Any valid forecast column name is allowed. If not provided, then forecast includes all columns. */\n  columns?: string[];\n}\n\n/** The aggregation expression to be used in the forecast. */\nexport interface ForecastAggregation {\n  /** The name of the column to aggregate. */\n  name: FunctionName;\n  /** The name of the aggregation function to use. */\n  function: FunctionType;\n}\n\n/** The filter expression to be used in the export. */\nexport interface ForecastFilter {\n  /** The logical \"AND\" expression. Must have at least 2 items. */\n  and?: ForecastFilter[];\n  /** The logical \"OR\" expression. Must have at least 2 items. */\n  or?: ForecastFilter[];\n  /** Has comparison expression for a dimension */\n  dimensions?: ForecastComparisonExpression;\n  /** Has comparison expression for a tag */\n  tags?: ForecastComparisonExpression;\n}\n\n/** The comparison expression to be used in the forecast. */\nexport interface ForecastComparisonExpression {\n  /** The name of the column to use in comparison. */\n  name: string;\n  /** The operator to use for comparison. */\n  operator: ForecastOperatorType;\n  /** Array of values to use for comparison */\n  values: string[];\n}\n\n/** Forecast column properties */\nexport interface ForecastColumn {\n  /** The name of column. */\n  name?: string;\n  /** The type of column. */\n  type?: string;\n}\n\n/** The Resource model definition. */\nexport interface CostManagementResource {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Location of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * SKU of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: string;\n  /**\n   * ETag of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eTag?: string;\n  /**\n   * Resource tags.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n}\n\n/** Result of listing dimensions. It contains a list of available dimensions. */\nexport interface DimensionsListResult {\n  /**\n   * The list of dimensions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Dimension[];\n}\n\n/** The definition of a query. */\nexport interface QueryDefinition {\n  /** The type of the query. */\n  type: ExportType;\n  /** The time frame for pulling data for the query. If custom, then a specific time period must be provided. */\n  timeframe: TimeframeType;\n  /** Has time period for pulling data for the query. */\n  timePeriod?: QueryTimePeriod;\n  /** Has definition for data in this query. */\n  dataset: QueryDataset;\n}\n\n/** The start and end date for pulling data for the query. */\nexport interface QueryTimePeriod {\n  /** The start date to pull data from. */\n  from: Date;\n  /** The end date to pull data to. */\n  to: Date;\n}\n\n/** The definition of data present in the query. */\nexport interface QueryDataset {\n  /** The granularity of rows in the query. */\n  granularity?: GranularityType;\n  /** Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided. */\n  configuration?: QueryDatasetConfiguration;\n  /** Dictionary of aggregation expression to use in the query. The key of each item in the dictionary is the alias for the aggregated column. Query can have up to 2 aggregation clauses. */\n  aggregation?: { [propertyName: string]: QueryAggregation };\n  /** Array of group by expression to use in the query. Query can have up to 2 group by clauses. */\n  grouping?: QueryGrouping[];\n  /** The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter. */\n  filter?: QueryFilter;\n}\n\n/** The configuration of dataset in the query. */\nexport interface QueryDatasetConfiguration {\n  /** Array of column names to be included in the query. Any valid query column name is allowed. If not provided, then query includes all columns. */\n  columns?: string[];\n}\n\n/** The aggregation expression to be used in the query. */\nexport interface QueryAggregation {\n  /** The name of the column to aggregate. */\n  name: string;\n  /** The name of the aggregation function to use. */\n  function: FunctionType;\n}\n\n/** The group by expression to be used in the query. */\nexport interface QueryGrouping {\n  /** Has type of the column to group. */\n  type: QueryColumnType;\n  /** The name of the column to group. */\n  name: string;\n}\n\n/** The filter expression to be used in the export. */\nexport interface QueryFilter {\n  /** The logical \"AND\" expression. Must have at least 2 items. */\n  and?: QueryFilter[];\n  /** The logical \"OR\" expression. Must have at least 2 items. */\n  or?: QueryFilter[];\n  /** Has comparison expression for a dimension */\n  dimensions?: QueryComparisonExpression;\n  /** Has comparison expression for a tag */\n  tags?: QueryComparisonExpression;\n}\n\n/** The comparison expression to be used in the query. */\nexport interface QueryComparisonExpression {\n  /** The name of the column to use in comparison. */\n  name: string;\n  /** The operator to use for comparison. */\n  operator: QueryOperatorType;\n  /** Array of values to use for comparison */\n  values: string[];\n}\n\n/** QueryColumn properties */\nexport interface QueryColumn {\n  /** The name of column. */\n  name?: string;\n  /** The type of column. */\n  type?: string;\n}\n\n/** The status of the long running operation. */\nexport interface OperationStatus {\n  /** The status of the long running operation. */\n  status?: OperationStatusType;\n  /** The CSV file from the reportUrl blob link consists of reservation usage data with the following schema at daily granularity */\n  reportUrl?: ReservationReportSchema;\n  /** The time at which report URL becomes invalid. */\n  validUntil?: Date;\n}\n\n/** Result of listing exports. It contains a list of available exports in the scope provided. */\nexport interface ExportListResult {\n  /**\n   * The list of exports.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Export[];\n}\n\n/** The schedule associated with the export. */\nexport interface ExportSchedule {\n  /** The status of the export's schedule. If 'Inactive', the export's schedule is paused. */\n  status?: StatusType;\n  /** The schedule recurrence. */\n  recurrence?: RecurrenceType;\n  /** Has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date. */\n  recurrencePeriod?: ExportRecurrencePeriod;\n}\n\n/** The start and end date for recurrence schedule. */\nexport interface ExportRecurrencePeriod {\n  /** The start date of recurrence. */\n  from: Date;\n  /** The end date of recurrence. */\n  to?: Date;\n}\n\n/** The common properties of the export. */\nexport interface CommonExportProperties {\n  /** The format of the export being delivered. Currently only 'Csv' is supported. */\n  format?: FormatType;\n  /** Has delivery information for the export. */\n  deliveryInfo: ExportDeliveryInfo;\n  /** Has the definition for the export. */\n  definition: ExportDefinition;\n  /** If requested, has the most recent run history for the export. */\n  runHistory?: ExportExecutionListResult;\n  /** If set to true, exported data will be partitioned by size and placed in a blob directory together with a manifest file. Note: this option is currently available only for Microsoft Customer Agreement commerce scopes. */\n  partitionData?: boolean;\n  /**\n   * If the export has an active schedule, provides an estimate of the next run time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextRunTimeEstimate?: Date;\n}\n\n/** The delivery information associated with a export. */\nexport interface ExportDeliveryInfo {\n  /** Has destination for the export being delivered. */\n  destination: ExportDeliveryDestination;\n}\n\n/** This represents the blob storage account location where exports of costs will be delivered. There are two ways to configure the destination. The approach recommended for most customers is to specify the resourceId of the storage account. This requires a one-time registration of the account's subscription with the Microsoft.CostManagementExports resource provider in order to give Cost Management services access to the storage. When creating an export in the Azure portal this registration is performed automatically but API users may need to register the subscription explicitly (for more information see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services ). Another way to configure the destination is available ONLY to Partners with a Microsoft Partner Agreement plan who are global admins of their billing account. These Partners, instead of specifying the resourceId of a storage account, can specify the storage account name along with a SAS token for the account. This allows exports of costs to a storage account in any tenant. The SAS token should be created for the blob service with Service/Container/Object resource types and with Read/Write/Delete/List/Add/Create permissions (for more information see https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/export-cost-data-storage-account-sas-key ). */\nexport interface ExportDeliveryDestination {\n  /** The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount are specified. */\n  resourceId?: string;\n  /** The name of the container where exports will be uploaded. If the container does not exist it will be created. */\n  container: string;\n  /** The name of the directory where exports will be uploaded. */\n  rootFolderPath?: string;\n  /** A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be specified. */\n  sasToken?: string;\n  /** The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken can be specified instead of resourceId. */\n  storageAccount?: string;\n}\n\n/** The definition of an export. */\nexport interface ExportDefinition {\n  /** The type of the export. Note that 'Usage' is equivalent to 'ActualCost' and is applicable to exports that do not yet provide data for charges or amortization for service reservations. */\n  type: ExportType;\n  /** The time frame for pulling data for the export. If custom, then a specific time period must be provided. */\n  timeframe: TimeframeType;\n  /** Has time period for pulling data for the export. */\n  timePeriod?: ExportTimePeriod;\n  /** The definition for data in the export. */\n  dataSet?: ExportDataset;\n}\n\n/** The date range for data in the export. This should only be specified with timeFrame set to 'Custom'. The maximum date range is 3 months. */\nexport interface ExportTimePeriod {\n  /** The start date for export data. */\n  from: Date;\n  /** The end date for export data. */\n  to: Date;\n}\n\n/** The definition for data in the export. */\nexport interface ExportDataset {\n  /** The granularity of rows in the export. Currently only 'Daily' is supported. */\n  granularity?: GranularityType;\n  /** The export dataset configuration. */\n  configuration?: ExportDatasetConfiguration;\n}\n\n/** The export dataset configuration. Allows columns to be selected for the export. If not provided then the export will include all available columns. */\nexport interface ExportDatasetConfiguration {\n  /** Array of column names to be included in the export. If not provided then the export will include all available columns. The available columns can vary by customer channel (see examples). */\n  columns?: string[];\n}\n\n/** Result of listing the run history of an export. */\nexport interface ExportExecutionListResult {\n  /**\n   * A list of export runs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ExportRun[];\n}\n\n/** The definition of a cost detailed report. */\nexport interface GenerateCostDetailsReportRequestDefinition {\n  /** The type of the detailed report. By default ActualCost is provided */\n  metric?: CostDetailsMetricType;\n  /** The specific date range of cost details requested for the report. This parameter cannot be used alongside either the invoiceId or billingPeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost. API only allows data to be pulled for 1 month or less and no older than 13 months. If no timePeriod or billingPeriod or invoiceId is provided the API defaults to the open month time period */\n  timePeriod?: CostDetailsTimePeriod;\n  /** This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost. */\n  billingPeriod?: string;\n  /** This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost. */\n  invoiceId?: string;\n}\n\n/** The start and end date for pulling data for the cost detailed report. API only allows data to be pulled for 1 month or less and no older than 13 months. */\nexport interface CostDetailsTimePeriod {\n  /** The start date to pull data from. example format 2020-03-15 */\n  start: string;\n  /** The end date to pull data to. example format 2020-03-15 */\n  end: string;\n}\n\n/** The result of the long running operation for cost details Api. */\nexport interface CostDetailsOperationResults {\n  /** The id of the long running operation. */\n  id?: string;\n  /** The name of the long running operation. */\n  name?: string;\n  /** The type of the long running operation. */\n  type?: string;\n  /** The status of the cost details operation */\n  status?: CostDetailsStatusType;\n  /** The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. */\n  validTill?: Date;\n  /** The details of the error. */\n  error?: ErrorDetails;\n  /** The Manifest version. */\n  manifestVersion?: string;\n  /** The data format of the report */\n  dataFormat?: CostDetailsDataFormat;\n  /** The total number of bytes in all blobs. */\n  byteCount?: number;\n  /** The total number of blobs. */\n  blobCount?: number;\n  /** Is the data in compressed format. */\n  compressData?: boolean;\n  /** List of blob information generated by this operation. */\n  blobs?: BlobInfo[];\n  /** The request scope of the request. */\n  requestScope?: string;\n  /** The request payload body provided in Cost Details call */\n  requestBody?: GenerateCostDetailsReportRequestDefinition;\n}\n\n/** The blob information generated by this operation. */\nexport interface BlobInfo {\n  /** Link to the blob to download file. */\n  blobLink?: string;\n  /** Bytes in the blob. */\n  byteCount?: number;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 400 Bad Request - Invalid Request Payload. Request payload provided is not in a json format or had an invalid member not accepted in the request payload.\n *\n *  * 400 Bad Request - Invalid request payload:  can only have either timePeriod or invoiceId or billingPeriod. API only allows data to be pulled for either timePeriod or invoiceId or billingPeriod. Customer should provide only one of these parameters.\n *\n *  * 400 Bad Request - Start date must be after . API only allows data to be pulled no older than 13 months from now.\n *\n *  * 400 Bad Request - The maximum allowed date range is 1 months. API only allows data to be pulled for 1 month or less.\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface GenerateCostDetailsReportErrorResponse {\n  /** The details of the error. */\n  error?: ErrorDetails;\n}\n\n/** The definition of a cost detailed report. */\nexport interface GenerateDetailedCostReportDefinition {\n  /** The type of the detailed report. By default ActualCost is provided */\n  metric?: GenerateDetailedCostReportMetricType;\n  /** Has time period for pulling data for the cost detailed report. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided. */\n  timePeriod?: GenerateDetailedCostReportTimePeriod;\n  /** Billing period in YearMonth(e.g. 202008) format. Only for legacy enterprise customers can use this. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided. */\n  billingPeriod?: string;\n  /** Invoice ID for Pay-as-you-go and Microsoft Customer Agreement scopes. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided. */\n  invoiceId?: string;\n  /** Customer ID for Microsoft Customer Agreement scopes (Invoice Id is also required for this). */\n  customerId?: string;\n}\n\n/** The start and end date for pulling data for the cost detailed report. */\nexport interface GenerateDetailedCostReportTimePeriod {\n  /** The start date to pull data from. example format 2020-03-15 */\n  start: string;\n  /** The end date to pull data to. example format 2020-03-15 */\n  end: string;\n}\n\n/** The result of the long running operation for cost detailed report. */\nexport interface GenerateDetailedCostReportOperationResult {\n  /** The ARM resource id of the long running operation. */\n  id?: string;\n  /** The name of the long running operation. */\n  name?: string;\n  /** The type of the long running operation. */\n  type?: string;\n  /**\n   * The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiryTime?: Date;\n  /** The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. */\n  validTill?: Date;\n  /** The URL to download the generated report. */\n  downloadUrl?: string;\n}\n\n/** The URL to download the generated report. */\nexport interface DownloadURL {\n  /**\n   * The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiryTime?: Date;\n  /** The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. */\n  validTill?: Date;\n  /** The URL to download the generated report. */\n  downloadUrl?: string;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 413 Request Entity Too Large - Request is throttled. The amount of data required to fulfill the request exceeds the maximum size permitted of 2Gb. Please utilize our Exports feature instead.\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface GenerateDetailedCostReportErrorResponse {\n  /** The details of the error. */\n  error?: ErrorDetails;\n}\n\n/** The status of the long running operation for cost detailed report. */\nexport interface GenerateDetailedCostReportOperationStatuses {\n  /** The ID of the long running operation. */\n  id?: string;\n  /** The name of the long running operation. */\n  name?: string;\n  /** The status of the long running operation. */\n  status?: Status;\n  /** The startTime of the operation. */\n  startTime?: string;\n  /** The endTime of the operation. */\n  endTime?: string;\n  /** The type of the long running operation. */\n  type?: string;\n  /** The details of the error. */\n  error?: ErrorDetails;\n  /**\n   * The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiryTime?: Date;\n  /** The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z. */\n  validTill?: Date;\n  /** The URL to download the generated report. */\n  downloadUrl?: string;\n}\n\n/** The status of the long running operation. */\nexport interface Status {\n  /** The status of the long running operation. */\n  status?: ReportOperationStatusType;\n}\n\n/** Scheduled actions list result. It contains a list of scheduled actions. */\nexport interface ScheduledActionListResult {\n  /**\n   * The list of scheduled actions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ScheduledAction[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Destination of the view data. This is optional. Currently only CSV format is supported. */\nexport interface FileDestination {\n  /** Destination of the view data. Currently only CSV format is supported. */\n  fileFormats?: FileFormat[];\n}\n\n/** The properties of the scheduled action notification. */\nexport interface NotificationProperties {\n  /** Array of email addresses. */\n  to: string[];\n  /** Locale of the email. */\n  language?: string;\n  /** Optional message to be added in the email. Length is limited to 250 characters. */\n  message?: string;\n  /** Regional format used for formatting date/time and currency values in the email. */\n  regionalFormat?: string;\n  /** Subject of the email. Length is limited to 70 characters. */\n  subject: string;\n}\n\n/** The properties of the schedule. */\nexport interface ScheduleProperties {\n  /** Frequency of the schedule. */\n  frequency: ScheduleFrequency;\n  /** UTC time at which cost analysis data will be emailed. */\n  hourOfDay?: number;\n  /** Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly. */\n  daysOfWeek?: DaysOfWeek[];\n  /** Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek. */\n  weeksOfMonth?: WeeksOfMonth[];\n  /** UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek. */\n  dayOfMonth?: number;\n  /** The start date and time of the scheduled action (UTC). */\n  startDate: Date;\n  /** The end date and time of the scheduled action (UTC). */\n  endDate: Date;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface ErrorResponseWithNestedDetails {\n  /** The details of the error. */\n  error?: ErrorDetailsWithNestedDetails;\n}\n\n/** The check availability request body. */\nexport interface CheckNameAvailabilityRequest {\n  /** The name of the resource for which availability needs to be checked. */\n  name?: string;\n  /** The resource type. */\n  type?: string;\n}\n\n/** The check availability result. */\nexport interface CheckNameAvailabilityResponse {\n  /** Indicates if the resource name is available. */\n  nameAvailable?: boolean;\n  /** The reason why the given name is not available. */\n  reason?: CheckNameAvailabilityReason;\n  /** Detailed reason why the given name is available. */\n  message?: string;\n}\n\n/** Result of listing benefit recommendations. */\nexport interface BenefitRecommendationsListResult {\n  /**\n   * The list of benefit recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BenefitRecommendationModel[];\n  /**\n   * The link (URL) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of the benefit recommendations. */\nexport interface BenefitRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Single\" | \"Shared\";\n  /**\n   * The first usage date used for looking back for computing the recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firstConsumptionDate?: Date;\n  /**\n   * The last usage date used for looking back for computing the recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastConsumptionDate?: Date;\n  /** The number of days of usage evaluated for computing the recommendations. */\n  lookBackPeriod?: LookBackPeriod;\n  /**\n   * The total hours for which the cost is covered. Its equal to number of records in a property 'properties/usage/charges'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalHours?: number;\n  /** On-demand charges between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations. */\n  usage?: RecommendationUsageDetails;\n  /**\n   * ARM SKU name. 'Compute_Savings_Plan' for SavingsPlan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /** Term period of the benefit. For example, P1Y or P3Y. */\n  term?: Term;\n  /** Grain of the proposed commitment amount. Supported values: 'Hourly' */\n  commitmentGranularity?: Grain;\n  /**\n   * An ISO 4217 currency code identifier for the costs and savings amounts.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currencyCode?: string;\n  /**\n   * The current cost without benefit, corresponds to 'totalHours' in the look-back period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costWithoutBenefit?: number;\n  /** The details of the proposed recommendation. */\n  recommendationDetails?: AllSavingsBenefitDetails;\n  /**\n   * The list of all benefit recommendations with the recommendation details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allRecommendationDetails?: AllSavingsList;\n}\n\n/** On-demand charges between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations. */\nexport interface RecommendationUsageDetails {\n  /** The grain of the usage. Supported values: 'Hourly' */\n  usageGrain?: Grain;\n  /**\n   * On-demand charges for each hour between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly charges?: number[];\n}\n\n/** Benefit recommendation details. */\nexport interface AllSavingsBenefitDetails {\n  /**\n   * The difference between total cost and benefit cost for the 'totalHours' in the look-back period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly overageCost?: number;\n  /**\n   * The estimated cost with benefit for the 'totalHours' in the look-back period. It's equal to (commitmentAmount * totalHours)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitCost?: number;\n  /**\n   * Total cost, which is sum of benefit cost and overage cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalCost?: number;\n  /**\n   * The amount saved for the 'totalHours' in the look-back period, by purchasing the recommended quantity of the benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly savingsAmount?: number;\n  /**\n   * The savings in percentage for the 'totalHours' in the look-back period, by purchasing the recommended quantity of benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly savingsPercentage?: number;\n  /**\n   * Estimated benefit coverage percentage for the 'totalHours' in the look-back period, with this commitment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly coveragePercentage?: number;\n  /**\n   * The commitment amount at the commitmentGranularity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly commitmentAmount?: number;\n  /**\n   * Estimated average utilization percentage for the 'totalHours' in the look-back period, with this commitment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly averageUtilizationPercentage?: number;\n  /**\n   * Estimated unused portion of the 'benefitCost'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly wastageCost?: number;\n}\n\n/** The list of all benefit recommendations with the recommendation details. */\nexport interface AllSavingsList {\n  /**\n   * The list of benefit recommendations with the recommendation details..\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AllSavingsBenefitDetails[];\n  /**\n   * The link (URL) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of benefit utilization summaries. */\nexport interface BenefitUtilizationSummariesListResult {\n  /**\n   * The list of benefit utilization summaries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BenefitUtilizationSummaryUnion[];\n  /**\n   * The link (URL) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of a benefit utilization summary. */\nexport interface BenefitUtilizationSummaryProperties {\n  /**\n   * ARM SKU name. For example, 'Compute_Savings_Plan' for savings plan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /**\n   * The benefit ID is the identifier of the benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitId?: string;\n  /**\n   * The benefit order ID is the identifier for a benefit purchase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitOrderId?: string;\n  /** The benefit type. Supported values: 'SavingsPlan'. */\n  benefitType?: BenefitKind;\n  /**\n   * Date corresponding to the utilization summary record. If the grain of data is monthly, value for this field will be first day of the month.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageDate?: Date;\n}\n\n/** A Cost management REST API operation. */\nexport interface CostManagementOperation extends Operation {\n  /**\n   * Operation id: {provider}/{resource}/{operation}.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** The details of the error. */\nexport interface ErrorDetailsWithNestedDetails extends ErrorDetails {\n  /**\n   * The additional details of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetailsWithNestedDetails[];\n}\n\n/** States and configurations of Cost Analysis. */\nexport interface View extends CostManagementProxyResource {\n  /** User input name of the view. Required. */\n  displayName?: string;\n  /** Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope. */\n  scope?: string;\n  /**\n   * Date the user created this view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Date when the user last modified this view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedOn?: Date;\n  /**\n   * Date range of the current view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dateRange?: string;\n  /**\n   * Currency of the current view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /** Chart type of the main view in Cost Analysis. Required. */\n  chart?: ChartType;\n  /** Show costs accumulated over time. */\n  accumulated?: AccumulatedType;\n  /** Metric to use when displaying costs. */\n  metric?: MetricType;\n  /** List of KPIs to show in Cost Analysis UI. */\n  kpis?: KpiProperties[];\n  /** Configuration of 3 sub-views in the Cost Analysis UI. */\n  pivots?: PivotProperties[];\n  /** The type of the report. Usage represents actual usage, forecast represents forecasted data and UsageAndForecast represents both usage and forecasted data. Actual usage and forecasted data can be differentiated based on dates. */\n  typePropertiesQueryType?: ReportType;\n  /** The time frame for pulling data for the report. If custom, then a specific time period must be provided. */\n  timeframe?: ReportTimeframeType;\n  /** Has time period for pulling data for the report. */\n  timePeriod?: ReportConfigTimePeriod;\n  /** Has definition for data in this report config. */\n  dataSet?: ReportConfigDataset;\n  /** If true, report includes monetary commitment. */\n  includeMonetaryCommitment?: boolean;\n}\n\n/** An individual alert. */\nexport interface Alert extends CostManagementProxyResource {\n  /** defines the type of alert */\n  definition?: AlertPropertiesDefinition;\n  /** Alert description */\n  description?: string;\n  /** Source of alert */\n  source?: AlertSource;\n  /** Alert details */\n  details?: AlertPropertiesDetails;\n  /** related budget */\n  costEntityId?: string;\n  /** alert status */\n  status?: AlertStatus;\n  /** dateTime in which alert was created */\n  creationTime?: string;\n  /** dateTime in which alert was closed */\n  closeTime?: string;\n  /** dateTime in which alert was last modified */\n  modificationTime?: string;\n  /** User who last modified the alert */\n  statusModificationUserName?: string;\n  /** dateTime in which the alert status was last modified */\n  statusModificationTime?: string;\n}\n\n/** An export run. */\nexport interface ExportRun extends CostManagementProxyResource {\n  /** The type of the export run. */\n  executionType?: ExecutionType;\n  /** The last known status of the export run. */\n  status?: ExecutionStatus;\n  /** The identifier for the entity that triggered the export. For on-demand runs it is the user email. For scheduled runs it is 'System'. */\n  submittedBy?: string;\n  /** The time when export was queued to be run. */\n  submittedTime?: Date;\n  /** The time when export was picked up to be run. */\n  processingStartTime?: Date;\n  /** The time when the export run finished. */\n  processingEndTime?: Date;\n  /** The name of the exported file. */\n  fileName?: string;\n  /** The export settings that were in effect for this run. */\n  runSettings?: CommonExportProperties;\n  /** The details of any error. */\n  error?: ErrorDetails;\n}\n\n/** An export resource. */\nexport interface Export extends CostManagementProxyResource {\n  /** The format of the export being delivered. Currently only 'Csv' is supported. */\n  format?: FormatType;\n  /** Has delivery information for the export. */\n  deliveryInfo?: ExportDeliveryInfo;\n  /** Has the definition for the export. */\n  definition?: ExportDefinition;\n  /** If requested, has the most recent run history for the export. */\n  runHistory?: ExportExecutionListResult;\n  /** If set to true, exported data will be partitioned by size and placed in a blob directory together with a manifest file. Note: this option is currently available only for Microsoft Customer Agreement commerce scopes. */\n  partitionData?: boolean;\n  /**\n   * If the export has an active schedule, provides an estimate of the next run time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextRunTimeEstimate?: Date;\n  /** Has schedule information for the export. */\n  schedule?: ExportSchedule;\n}\n\n/** Result of forecast. It contains all columns listed under groupings and aggregation. */\nexport interface ForecastResult extends CostManagementResource {\n  /** The link (url) to the next page of results. */\n  nextLink?: string;\n  /** Array of columns */\n  columns?: ForecastColumn[];\n  /** Array of rows */\n  rows?: any[][];\n}\n\n/** List of Dimension. */\nexport interface Dimension extends CostManagementResource {\n  /**\n   * Dimension description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Filter enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly filterEnabled?: boolean;\n  /**\n   * Grouping enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupingEnabled?: boolean;\n  /** Dimension data. */\n  data?: string[];\n  /**\n   * Total number of data for the dimension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly total?: number;\n  /**\n   * Dimension category.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly category?: string;\n  /**\n   * Usage start.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageStart?: Date;\n  /**\n   * Usage end.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageEnd?: Date;\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of query. It contains all columns listed under groupings and aggregation. */\nexport interface QueryResult extends CostManagementResource {\n  /** The link (url) to the next page of results. */\n  nextLink?: string;\n  /** Array of columns */\n  columns?: QueryColumn[];\n  /** Array of rows */\n  rows?: any[][];\n}\n\n/** The properties of the export. */\nexport interface ExportProperties extends CommonExportProperties {\n  /** Has schedule information for the export. */\n  schedule?: ExportSchedule;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The benefit resource model definition. */\nexport interface BenefitResource extends Resource {\n  /** Reservation or SavingsPlan. */\n  kind?: BenefitKind;\n}\n\n/** Benefit utilization summary resource. */\nexport interface BenefitUtilizationSummary extends Resource {\n  /** Supported values: 'SavingsPlan'. */\n  kind: BenefitKind;\n}\n\n/** The properties of the benefit recommendations when scope is 'Single'. */\nexport interface SingleScopeBenefitRecommendationProperties\n  extends BenefitRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Single\";\n  /**\n   * The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope and 'ResourceGroup' request scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGroup?: string;\n}\n\n/** The properties of the benefit recommendation when scope is 'Shared'. */\nexport interface SharedScopeBenefitRecommendationProperties\n  extends BenefitRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Shared\";\n}\n\n/** Included Quantity utilization summary properties. */\nexport interface IncludedQuantityUtilizationSummaryProperties\n  extends BenefitUtilizationSummaryProperties {\n  /**\n   * This is the utilized percentage for the benefit ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly utilizationPercentage?: number;\n}\n\n/** Savings plan utilization summary properties. */\nexport interface SavingsPlanUtilizationSummaryProperties\n  extends BenefitUtilizationSummaryProperties {\n  /**\n   * This is the average hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the avgUtilizationPercentage value will be equal to the average of the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly avgUtilizationPercentage?: number;\n  /**\n   * This is the minimum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the minUtilizationPercentage value will be equal to the smallest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the lowest utilization percentage was 10% at hour 4, then the value for the minUtilizationPercentage in the response will be 10%.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minUtilizationPercentage?: number;\n  /**\n   * This is the maximum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the maxUtilizationPercentage value will be equal to the largest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the largest utilization percentage was 90% at hour 5, then the value for the maxUtilizationPercentage in the response will be 90%.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxUtilizationPercentage?: number;\n}\n\n/** The Resource model definition. */\nexport interface ScheduledActionProxyResource extends ProxyResource {\n  /**\n   * Resource Etag. For update calls, eTag is optional and can be specified to achieve optimistic concurrency. Fetch the resource's eTag by doing a 'GET' call first and then including the latest eTag as part of the request body or 'If-Match' header while performing the update. For create calls, eTag is not required.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eTag?: string;\n  /** Kind of the scheduled action. */\n  kind?: ScheduledActionKind;\n  /**\n   * Kind of the scheduled action.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** benefit plan recommendation details. */\nexport interface BenefitRecommendationModel extends BenefitResource {\n  /** The properties of the benefit recommendations. */\n  properties?: BenefitRecommendationPropertiesUnion;\n}\n\n/** Included Quantity utilization summary resource. */\nexport interface IncludedQuantityUtilizationSummary\n  extends BenefitUtilizationSummary {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"IncludedQuantity\";\n  /**\n   * ARM SKU name. For example, 'Compute_Savings_Plan' for savings plan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /**\n   * The benefit ID is the identifier of the benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitId?: string;\n  /**\n   * The benefit order ID is the identifier for a benefit purchase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitOrderId?: string;\n  /** The benefit type. Supported values: 'SavingsPlan'. */\n  benefitType?: BenefitKind;\n  /**\n   * Date corresponding to the utilization summary record. If the grain of data is monthly, value for this field will be first day of the month.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageDate?: Date;\n  /**\n   * This is the utilized percentage for the benefit ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly utilizationPercentage?: number;\n}\n\n/** Savings plan utilization summary resource. */\nexport interface SavingsPlanUtilizationSummary\n  extends BenefitUtilizationSummary {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"SavingsPlan\";\n  /**\n   * ARM SKU name. For example, 'Compute_Savings_Plan' for savings plan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /**\n   * The benefit ID is the identifier of the benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitId?: string;\n  /**\n   * The benefit order ID is the identifier for a benefit purchase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitOrderId?: string;\n  /** The benefit type. Supported values: 'SavingsPlan'. */\n  benefitType?: BenefitKind;\n  /**\n   * Date corresponding to the utilization summary record. If the grain of data is monthly, value for this field will be first day of the month.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageDate?: Date;\n  /**\n   * This is the average hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the avgUtilizationPercentage value will be equal to the average of the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly avgUtilizationPercentage?: number;\n  /**\n   * This is the minimum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the minUtilizationPercentage value will be equal to the smallest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the lowest utilization percentage was 10% at hour 4, then the value for the minUtilizationPercentage in the response will be 10%.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minUtilizationPercentage?: number;\n  /**\n   * This is the maximum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2022-10-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the maxUtilizationPercentage value will be equal to the largest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the largest utilization percentage was 90% at hour 5, then the value for the maxUtilizationPercentage in the response will be 90%.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxUtilizationPercentage?: number;\n}\n\n/** Scheduled action definition. */\nexport interface ScheduledAction extends ScheduledActionProxyResource {\n  /** Scheduled action name. */\n  displayName?: string;\n  /** Destination format of the view data. This is optional. */\n  fileDestination?: FileDestination;\n  /** Notification properties based on scheduled action kind. */\n  notification?: NotificationProperties;\n  /** Email address of the point of contact that should get the unsubscribe requests and notification emails. */\n  notificationEmail?: string;\n  /** Schedule of the scheduled action. */\n  schedule?: ScheduleProperties;\n  /** Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope. */\n  scope?: string;\n  /** Status of the scheduled action. */\n  status?: ScheduledActionStatus;\n  /** Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample' */\n  viewId?: string;\n}\n\n/** Defines headers for GenerateReservationDetailsReport_byBillingAccountId operation. */\nexport interface GenerateReservationDetailsReportByBillingAccountIdHeaders {\n  /** The URL to check the status of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for GenerateReservationDetailsReport_byBillingProfileId operation. */\nexport interface GenerateReservationDetailsReportByBillingProfileIdHeaders {\n  /** The URL to check the status of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for GenerateCostDetailsReport_createOperation operation. */\nexport interface GenerateCostDetailsReportCreateOperationHeaders {\n  /** The URL to check the result of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for GenerateDetailedCostReport_createOperation operation. */\nexport interface GenerateDetailedCostReportCreateOperationHeaders {\n  /** The URL to check the result of the asynchronous operation. */\n  location?: string;\n  /** The URL to check the status of the asynchronous operation. */\n  azureConsumptionAsyncOperation?: string;\n  /** The URL to check the status of the asynchronous operation. */\n  azureAsyncOperation?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for PriceSheet_download operation. */\nexport interface PriceSheetDownloadHeaders {\n  /** GET this URL to retrieve the status of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: string;\n  /** The operation entity Id GUID. */\n  oDataEntityId?: string;\n}\n\n/** Defines headers for PriceSheet_downloadByBillingProfile operation. */\nexport interface PriceSheetDownloadByBillingProfileHeaders {\n  /** GET this URL to retrieve the status of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: string;\n  /** The operation entity Id GUID. */\n  oDataEntityId?: string;\n}\n\n/** Known values of {@link Origin} that the service accepts. */\nexport enum KnownOrigin {\n  /** User */\n  User = \"user\",\n  /** System */\n  System = \"system\",\n  /** UserSystem */\n  UserSystem = \"user,system\"\n}\n\n/**\n * Defines values for Origin. \\\n * {@link KnownOrigin} can be used interchangeably with Origin,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **system** \\\n * **user,system**\n */\nexport type Origin = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** Internal */\n  Internal = \"Internal\"\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internal**\n */\nexport type ActionType = string;\n\n/** Known values of {@link ReportType} that the service accepts. */\nexport enum KnownReportType {\n  /** Usage */\n  Usage = \"Usage\"\n}\n\n/**\n * Defines values for ReportType. \\\n * {@link KnownReportType} can be used interchangeably with ReportType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Usage**\n */\nexport type ReportType = string;\n\n/** Known values of {@link ReportTimeframeType} that the service accepts. */\nexport enum KnownReportTimeframeType {\n  /** WeekToDate */\n  WeekToDate = \"WeekToDate\",\n  /** MonthToDate */\n  MonthToDate = \"MonthToDate\",\n  /** YearToDate */\n  YearToDate = \"YearToDate\",\n  /** Custom */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for ReportTimeframeType. \\\n * {@link KnownReportTimeframeType} can be used interchangeably with ReportTimeframeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **WeekToDate** \\\n * **MonthToDate** \\\n * **YearToDate** \\\n * **Custom**\n */\nexport type ReportTimeframeType = string;\n\n/** Known values of {@link ReportGranularityType} that the service accepts. */\nexport enum KnownReportGranularityType {\n  /** Daily */\n  Daily = \"Daily\",\n  /** Monthly */\n  Monthly = \"Monthly\"\n}\n\n/**\n * Defines values for ReportGranularityType. \\\n * {@link KnownReportGranularityType} can be used interchangeably with ReportGranularityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily** \\\n * **Monthly**\n */\nexport type ReportGranularityType = string;\n\n/** Known values of {@link FunctionType} that the service accepts. */\nexport enum KnownFunctionType {\n  /** Sum */\n  Sum = \"Sum\"\n}\n\n/**\n * Defines values for FunctionType. \\\n * {@link KnownFunctionType} can be used interchangeably with FunctionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Sum**\n */\nexport type FunctionType = string;\n\n/** Known values of {@link QueryColumnType} that the service accepts. */\nexport enum KnownQueryColumnType {\n  /** The tag associated with the cost data. */\n  TagKey = \"TagKey\",\n  /** The dimension of cost data. */\n  Dimension = \"Dimension\"\n}\n\n/**\n * Defines values for QueryColumnType. \\\n * {@link KnownQueryColumnType} can be used interchangeably with QueryColumnType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TagKey**: The tag associated with the cost data. \\\n * **Dimension**: The dimension of cost data.\n */\nexport type QueryColumnType = string;\n\n/** Known values of {@link ReportConfigSortingType} that the service accepts. */\nexport enum KnownReportConfigSortingType {\n  /** Ascending */\n  Ascending = \"Ascending\",\n  /** Descending */\n  Descending = \"Descending\"\n}\n\n/**\n * Defines values for ReportConfigSortingType. \\\n * {@link KnownReportConfigSortingType} can be used interchangeably with ReportConfigSortingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Ascending** \\\n * **Descending**\n */\nexport type ReportConfigSortingType = string;\n\n/** Known values of {@link OperatorType} that the service accepts. */\nexport enum KnownOperatorType {\n  /** In */\n  In = \"In\",\n  /** Contains */\n  Contains = \"Contains\"\n}\n\n/**\n * Defines values for OperatorType. \\\n * {@link KnownOperatorType} can be used interchangeably with OperatorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **In** \\\n * **Contains**\n */\nexport type OperatorType = string;\n\n/** Known values of {@link ChartType} that the service accepts. */\nexport enum KnownChartType {\n  /** Area */\n  Area = \"Area\",\n  /** Line */\n  Line = \"Line\",\n  /** StackedColumn */\n  StackedColumn = \"StackedColumn\",\n  /** GroupedColumn */\n  GroupedColumn = \"GroupedColumn\",\n  /** Table */\n  Table = \"Table\"\n}\n\n/**\n * Defines values for ChartType. \\\n * {@link KnownChartType} can be used interchangeably with ChartType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Area** \\\n * **Line** \\\n * **StackedColumn** \\\n * **GroupedColumn** \\\n * **Table**\n */\nexport type ChartType = string;\n\n/** Known values of {@link AccumulatedType} that the service accepts. */\nexport enum KnownAccumulatedType {\n  /** True */\n  True = \"true\",\n  /** False */\n  False = \"false\"\n}\n\n/**\n * Defines values for AccumulatedType. \\\n * {@link KnownAccumulatedType} can be used interchangeably with AccumulatedType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **true** \\\n * **false**\n */\nexport type AccumulatedType = string;\n\n/** Known values of {@link MetricType} that the service accepts. */\nexport enum KnownMetricType {\n  /** ActualCost */\n  ActualCost = \"ActualCost\",\n  /** AmortizedCost */\n  AmortizedCost = \"AmortizedCost\",\n  /** Ahub */\n  Ahub = \"AHUB\"\n}\n\n/**\n * Defines values for MetricType. \\\n * {@link KnownMetricType} can be used interchangeably with MetricType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActualCost** \\\n * **AmortizedCost** \\\n * **AHUB**\n */\nexport type MetricType = string;\n\n/** Known values of {@link KpiType} that the service accepts. */\nexport enum KnownKpiType {\n  /** Forecast */\n  Forecast = \"Forecast\",\n  /** Budget */\n  Budget = \"Budget\"\n}\n\n/**\n * Defines values for KpiType. \\\n * {@link KnownKpiType} can be used interchangeably with KpiType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Forecast** \\\n * **Budget**\n */\nexport type KpiType = string;\n\n/** Known values of {@link PivotType} that the service accepts. */\nexport enum KnownPivotType {\n  /** Dimension */\n  Dimension = \"Dimension\",\n  /** TagKey */\n  TagKey = \"TagKey\"\n}\n\n/**\n * Defines values for PivotType. \\\n * {@link KnownPivotType} can be used interchangeably with PivotType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dimension** \\\n * **TagKey**\n */\nexport type PivotType = string;\n\n/** Known values of {@link AlertType} that the service accepts. */\nexport enum KnownAlertType {\n  /** Budget */\n  Budget = \"Budget\",\n  /** Invoice */\n  Invoice = \"Invoice\",\n  /** Credit */\n  Credit = \"Credit\",\n  /** Quota */\n  Quota = \"Quota\",\n  /** General */\n  General = \"General\",\n  /** XCloud */\n  XCloud = \"xCloud\",\n  /** BudgetForecast */\n  BudgetForecast = \"BudgetForecast\"\n}\n\n/**\n * Defines values for AlertType. \\\n * {@link KnownAlertType} can be used interchangeably with AlertType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Budget** \\\n * **Invoice** \\\n * **Credit** \\\n * **Quota** \\\n * **General** \\\n * **xCloud** \\\n * **BudgetForecast**\n */\nexport type AlertType = string;\n\n/** Known values of {@link AlertCategory} that the service accepts. */\nexport enum KnownAlertCategory {\n  /** Cost */\n  Cost = \"Cost\",\n  /** Usage */\n  Usage = \"Usage\",\n  /** Billing */\n  Billing = \"Billing\",\n  /** System */\n  System = \"System\"\n}\n\n/**\n * Defines values for AlertCategory. \\\n * {@link KnownAlertCategory} can be used interchangeably with AlertCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cost** \\\n * **Usage** \\\n * **Billing** \\\n * **System**\n */\nexport type AlertCategory = string;\n\n/** Known values of {@link AlertCriteria} that the service accepts. */\nexport enum KnownAlertCriteria {\n  /** CostThresholdExceeded */\n  CostThresholdExceeded = \"CostThresholdExceeded\",\n  /** UsageThresholdExceeded */\n  UsageThresholdExceeded = \"UsageThresholdExceeded\",\n  /** CreditThresholdApproaching */\n  CreditThresholdApproaching = \"CreditThresholdApproaching\",\n  /** CreditThresholdReached */\n  CreditThresholdReached = \"CreditThresholdReached\",\n  /** QuotaThresholdApproaching */\n  QuotaThresholdApproaching = \"QuotaThresholdApproaching\",\n  /** QuotaThresholdReached */\n  QuotaThresholdReached = \"QuotaThresholdReached\",\n  /** MultiCurrency */\n  MultiCurrency = \"MultiCurrency\",\n  /** ForecastCostThresholdExceeded */\n  ForecastCostThresholdExceeded = \"ForecastCostThresholdExceeded\",\n  /** ForecastUsageThresholdExceeded */\n  ForecastUsageThresholdExceeded = \"ForecastUsageThresholdExceeded\",\n  /** InvoiceDueDateApproaching */\n  InvoiceDueDateApproaching = \"InvoiceDueDateApproaching\",\n  /** InvoiceDueDateReached */\n  InvoiceDueDateReached = \"InvoiceDueDateReached\",\n  /** CrossCloudNewDataAvailable */\n  CrossCloudNewDataAvailable = \"CrossCloudNewDataAvailable\",\n  /** CrossCloudCollectionError */\n  CrossCloudCollectionError = \"CrossCloudCollectionError\",\n  /** GeneralThresholdError */\n  GeneralThresholdError = \"GeneralThresholdError\"\n}\n\n/**\n * Defines values for AlertCriteria. \\\n * {@link KnownAlertCriteria} can be used interchangeably with AlertCriteria,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CostThresholdExceeded** \\\n * **UsageThresholdExceeded** \\\n * **CreditThresholdApproaching** \\\n * **CreditThresholdReached** \\\n * **QuotaThresholdApproaching** \\\n * **QuotaThresholdReached** \\\n * **MultiCurrency** \\\n * **ForecastCostThresholdExceeded** \\\n * **ForecastUsageThresholdExceeded** \\\n * **InvoiceDueDateApproaching** \\\n * **InvoiceDueDateReached** \\\n * **CrossCloudNewDataAvailable** \\\n * **CrossCloudCollectionError** \\\n * **GeneralThresholdError**\n */\nexport type AlertCriteria = string;\n\n/** Known values of {@link AlertSource} that the service accepts. */\nexport enum KnownAlertSource {\n  /** Preset */\n  Preset = \"Preset\",\n  /** User */\n  User = \"User\"\n}\n\n/**\n * Defines values for AlertSource. \\\n * {@link KnownAlertSource} can be used interchangeably with AlertSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Preset** \\\n * **User**\n */\nexport type AlertSource = string;\n\n/** Known values of {@link AlertTimeGrainType} that the service accepts. */\nexport enum KnownAlertTimeGrainType {\n  /** None */\n  None = \"None\",\n  /** Monthly */\n  Monthly = \"Monthly\",\n  /** Quarterly */\n  Quarterly = \"Quarterly\",\n  /** Annually */\n  Annually = \"Annually\",\n  /** BillingMonth */\n  BillingMonth = \"BillingMonth\",\n  /** BillingQuarter */\n  BillingQuarter = \"BillingQuarter\",\n  /** BillingAnnual */\n  BillingAnnual = \"BillingAnnual\"\n}\n\n/**\n * Defines values for AlertTimeGrainType. \\\n * {@link KnownAlertTimeGrainType} can be used interchangeably with AlertTimeGrainType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Monthly** \\\n * **Quarterly** \\\n * **Annually** \\\n * **BillingMonth** \\\n * **BillingQuarter** \\\n * **BillingAnnual**\n */\nexport type AlertTimeGrainType = string;\n\n/** Known values of {@link AlertOperator} that the service accepts. */\nexport enum KnownAlertOperator {\n  /** None */\n  None = \"None\",\n  /** EqualTo */\n  EqualTo = \"EqualTo\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqualTo */\n  GreaterThanOrEqualTo = \"GreaterThanOrEqualTo\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** LessThanOrEqualTo */\n  LessThanOrEqualTo = \"LessThanOrEqualTo\"\n}\n\n/**\n * Defines values for AlertOperator. \\\n * {@link KnownAlertOperator} can be used interchangeably with AlertOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **EqualTo** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqualTo** \\\n * **LessThan** \\\n * **LessThanOrEqualTo**\n */\nexport type AlertOperator = string;\n\n/** Known values of {@link AlertStatus} that the service accepts. */\nexport enum KnownAlertStatus {\n  /** None */\n  None = \"None\",\n  /** Active */\n  Active = \"Active\",\n  /** Overridden */\n  Overridden = \"Overridden\",\n  /** Resolved */\n  Resolved = \"Resolved\",\n  /** Dismissed */\n  Dismissed = \"Dismissed\"\n}\n\n/**\n * Defines values for AlertStatus. \\\n * {@link KnownAlertStatus} can be used interchangeably with AlertStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Active** \\\n * **Overridden** \\\n * **Resolved** \\\n * **Dismissed**\n */\nexport type AlertStatus = string;\n\n/** Known values of {@link ExternalCloudProviderType} that the service accepts. */\nexport enum KnownExternalCloudProviderType {\n  /** ExternalSubscriptions */\n  ExternalSubscriptions = \"externalSubscriptions\",\n  /** ExternalBillingAccounts */\n  ExternalBillingAccounts = \"externalBillingAccounts\"\n}\n\n/**\n * Defines values for ExternalCloudProviderType. \\\n * {@link KnownExternalCloudProviderType} can be used interchangeably with ExternalCloudProviderType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **externalSubscriptions** \\\n * **externalBillingAccounts**\n */\nexport type ExternalCloudProviderType = string;\n\n/** Known values of {@link ForecastType} that the service accepts. */\nexport enum KnownForecastType {\n  /** Usage */\n  Usage = \"Usage\",\n  /** ActualCost */\n  ActualCost = \"ActualCost\",\n  /** AmortizedCost */\n  AmortizedCost = \"AmortizedCost\"\n}\n\n/**\n * Defines values for ForecastType. \\\n * {@link KnownForecastType} can be used interchangeably with ForecastType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Usage** \\\n * **ActualCost** \\\n * **AmortizedCost**\n */\nexport type ForecastType = string;\n\n/** Known values of {@link ForecastTimeframe} that the service accepts. */\nexport enum KnownForecastTimeframe {\n  /** Custom */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for ForecastTimeframe. \\\n * {@link KnownForecastTimeframe} can be used interchangeably with ForecastTimeframe,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Custom**\n */\nexport type ForecastTimeframe = string;\n\n/** Known values of {@link GranularityType} that the service accepts. */\nexport enum KnownGranularityType {\n  /** Daily */\n  Daily = \"Daily\"\n}\n\n/**\n * Defines values for GranularityType. \\\n * {@link KnownGranularityType} can be used interchangeably with GranularityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily**\n */\nexport type GranularityType = string;\n\n/** Known values of {@link FunctionName} that the service accepts. */\nexport enum KnownFunctionName {\n  /** PreTaxCostUSD */\n  PreTaxCostUSD = \"PreTaxCostUSD\",\n  /** Cost */\n  Cost = \"Cost\",\n  /** CostUSD */\n  CostUSD = \"CostUSD\",\n  /** PreTaxCost */\n  PreTaxCost = \"PreTaxCost\"\n}\n\n/**\n * Defines values for FunctionName. \\\n * {@link KnownFunctionName} can be used interchangeably with FunctionName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PreTaxCostUSD** \\\n * **Cost** \\\n * **CostUSD** \\\n * **PreTaxCost**\n */\nexport type FunctionName = string;\n\n/** Known values of {@link ForecastOperatorType} that the service accepts. */\nexport enum KnownForecastOperatorType {\n  /** In */\n  In = \"In\"\n}\n\n/**\n * Defines values for ForecastOperatorType. \\\n * {@link KnownForecastOperatorType} can be used interchangeably with ForecastOperatorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **In**\n */\nexport type ForecastOperatorType = string;\n\n/** Known values of {@link ExportType} that the service accepts. */\nexport enum KnownExportType {\n  /** Usage */\n  Usage = \"Usage\",\n  /** ActualCost */\n  ActualCost = \"ActualCost\",\n  /** AmortizedCost */\n  AmortizedCost = \"AmortizedCost\"\n}\n\n/**\n * Defines values for ExportType. \\\n * {@link KnownExportType} can be used interchangeably with ExportType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Usage** \\\n * **ActualCost** \\\n * **AmortizedCost**\n */\nexport type ExportType = string;\n\n/** Known values of {@link TimeframeType} that the service accepts. */\nexport enum KnownTimeframeType {\n  /** MonthToDate */\n  MonthToDate = \"MonthToDate\",\n  /** BillingMonthToDate */\n  BillingMonthToDate = \"BillingMonthToDate\",\n  /** TheLastMonth */\n  TheLastMonth = \"TheLastMonth\",\n  /** TheLastBillingMonth */\n  TheLastBillingMonth = \"TheLastBillingMonth\",\n  /** WeekToDate */\n  WeekToDate = \"WeekToDate\",\n  /** Custom */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for TimeframeType. \\\n * {@link KnownTimeframeType} can be used interchangeably with TimeframeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MonthToDate** \\\n * **BillingMonthToDate** \\\n * **TheLastMonth** \\\n * **TheLastBillingMonth** \\\n * **WeekToDate** \\\n * **Custom**\n */\nexport type TimeframeType = string;\n\n/** Known values of {@link QueryOperatorType} that the service accepts. */\nexport enum KnownQueryOperatorType {\n  /** In */\n  In = \"In\"\n}\n\n/**\n * Defines values for QueryOperatorType. \\\n * {@link KnownQueryOperatorType} can be used interchangeably with QueryOperatorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **In**\n */\nexport type QueryOperatorType = string;\n\n/** Known values of {@link OperationStatusType} that the service accepts. */\nexport enum KnownOperationStatusType {\n  /** Running */\n  Running = \"Running\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for OperationStatusType. \\\n * {@link KnownOperationStatusType} can be used interchangeably with OperationStatusType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Running** \\\n * **Completed** \\\n * **Failed**\n */\nexport type OperationStatusType = string;\n\n/** Known values of {@link ReservationReportSchema} that the service accepts. */\nexport enum KnownReservationReportSchema {\n  /** InstanceFlexibilityGroup */\n  InstanceFlexibilityGroup = \"InstanceFlexibilityGroup\",\n  /** InstanceFlexibilityRatio */\n  InstanceFlexibilityRatio = \"InstanceFlexibilityRatio\",\n  /** InstanceId */\n  InstanceId = \"InstanceId\",\n  /** Kind */\n  Kind = \"Kind\",\n  /** ReservationId */\n  ReservationId = \"ReservationId\",\n  /** ReservationOrderId */\n  ReservationOrderId = \"ReservationOrderId\",\n  /** ReservedHours */\n  ReservedHours = \"ReservedHours\",\n  /** SkuName */\n  SkuName = \"SkuName\",\n  /** TotalReservedQuantity */\n  TotalReservedQuantity = \"TotalReservedQuantity\",\n  /** UsageDate */\n  UsageDate = \"UsageDate\",\n  /** UsedHours */\n  UsedHours = \"UsedHours\"\n}\n\n/**\n * Defines values for ReservationReportSchema. \\\n * {@link KnownReservationReportSchema} can be used interchangeably with ReservationReportSchema,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InstanceFlexibilityGroup** \\\n * **InstanceFlexibilityRatio** \\\n * **InstanceId** \\\n * **Kind** \\\n * **ReservationId** \\\n * **ReservationOrderId** \\\n * **ReservedHours** \\\n * **SkuName** \\\n * **TotalReservedQuantity** \\\n * **UsageDate** \\\n * **UsedHours**\n */\nexport type ReservationReportSchema = string;\n\n/** Known values of {@link StatusType} that the service accepts. */\nexport enum KnownStatusType {\n  /** Active */\n  Active = \"Active\",\n  /** Inactive */\n  Inactive = \"Inactive\"\n}\n\n/**\n * Defines values for StatusType. \\\n * {@link KnownStatusType} can be used interchangeably with StatusType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Active** \\\n * **Inactive**\n */\nexport type StatusType = string;\n\n/** Known values of {@link RecurrenceType} that the service accepts. */\nexport enum KnownRecurrenceType {\n  /** Daily */\n  Daily = \"Daily\",\n  /** Weekly */\n  Weekly = \"Weekly\",\n  /** Monthly */\n  Monthly = \"Monthly\",\n  /** Annually */\n  Annually = \"Annually\"\n}\n\n/**\n * Defines values for RecurrenceType. \\\n * {@link KnownRecurrenceType} can be used interchangeably with RecurrenceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily** \\\n * **Weekly** \\\n * **Monthly** \\\n * **Annually**\n */\nexport type RecurrenceType = string;\n\n/** Known values of {@link FormatType} that the service accepts. */\nexport enum KnownFormatType {\n  /** Csv */\n  Csv = \"Csv\"\n}\n\n/**\n * Defines values for FormatType. \\\n * {@link KnownFormatType} can be used interchangeably with FormatType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv**\n */\nexport type FormatType = string;\n\n/** Known values of {@link ExecutionType} that the service accepts. */\nexport enum KnownExecutionType {\n  /** OnDemand */\n  OnDemand = \"OnDemand\",\n  /** Scheduled */\n  Scheduled = \"Scheduled\"\n}\n\n/**\n * Defines values for ExecutionType. \\\n * {@link KnownExecutionType} can be used interchangeably with ExecutionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OnDemand** \\\n * **Scheduled**\n */\nexport type ExecutionType = string;\n\n/** Known values of {@link ExecutionStatus} that the service accepts. */\nexport enum KnownExecutionStatus {\n  /** Queued */\n  Queued = \"Queued\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Timeout */\n  Timeout = \"Timeout\",\n  /** NewDataNotAvailable */\n  NewDataNotAvailable = \"NewDataNotAvailable\",\n  /** DataNotAvailable */\n  DataNotAvailable = \"DataNotAvailable\"\n}\n\n/**\n * Defines values for ExecutionStatus. \\\n * {@link KnownExecutionStatus} can be used interchangeably with ExecutionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Queued** \\\n * **InProgress** \\\n * **Completed** \\\n * **Failed** \\\n * **Timeout** \\\n * **NewDataNotAvailable** \\\n * **DataNotAvailable**\n */\nexport type ExecutionStatus = string;\n\n/** Known values of {@link CostDetailsMetricType} that the service accepts. */\nexport enum KnownCostDetailsMetricType {\n  /** Actual cost data. */\n  ActualCostCostDetailsMetricType = \"ActualCost\",\n  /** Amortized cost data. */\n  AmortizedCostCostDetailsMetricType = \"AmortizedCost\"\n}\n\n/**\n * Defines values for CostDetailsMetricType. \\\n * {@link KnownCostDetailsMetricType} can be used interchangeably with CostDetailsMetricType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActualCost**: Actual cost data. \\\n * **AmortizedCost**: Amortized cost data.\n */\nexport type CostDetailsMetricType = string;\n\n/** Known values of {@link CostDetailsStatusType} that the service accepts. */\nexport enum KnownCostDetailsStatusType {\n  /** Operation is Completed. */\n  CompletedCostDetailsStatusType = \"Completed\",\n  /** Operation is Completed and no cost data found. */\n  NoDataFoundCostDetailsStatusType = \"NoDataFound\",\n  /** Operation Failed. */\n  FailedCostDetailsStatusType = \"Failed\"\n}\n\n/**\n * Defines values for CostDetailsStatusType. \\\n * {@link KnownCostDetailsStatusType} can be used interchangeably with CostDetailsStatusType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Completed**: Operation is Completed. \\\n * **NoDataFound**: Operation is Completed and no cost data found. \\\n * **Failed**: Operation Failed.\n */\nexport type CostDetailsStatusType = string;\n\n/** Known values of {@link CostDetailsDataFormat} that the service accepts. */\nexport enum KnownCostDetailsDataFormat {\n  /** Csv data format. */\n  CsvCostDetailsDataFormat = \"Csv\"\n}\n\n/**\n * Defines values for CostDetailsDataFormat. \\\n * {@link KnownCostDetailsDataFormat} can be used interchangeably with CostDetailsDataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv**: Csv data format.\n */\nexport type CostDetailsDataFormat = string;\n\n/** Known values of {@link GenerateDetailedCostReportMetricType} that the service accepts. */\nexport enum KnownGenerateDetailedCostReportMetricType {\n  /** ActualCost */\n  ActualCost = \"ActualCost\",\n  /** AmortizedCost */\n  AmortizedCost = \"AmortizedCost\"\n}\n\n/**\n * Defines values for GenerateDetailedCostReportMetricType. \\\n * {@link KnownGenerateDetailedCostReportMetricType} can be used interchangeably with GenerateDetailedCostReportMetricType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActualCost** \\\n * **AmortizedCost**\n */\nexport type GenerateDetailedCostReportMetricType = string;\n\n/** Known values of {@link ReportOperationStatusType} that the service accepts. */\nexport enum KnownReportOperationStatusType {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Queued */\n  Queued = \"Queued\",\n  /** NoDataFound */\n  NoDataFound = \"NoDataFound\",\n  /** ReadyToDownload */\n  ReadyToDownload = \"ReadyToDownload\",\n  /** TimedOut */\n  TimedOut = \"TimedOut\"\n}\n\n/**\n * Defines values for ReportOperationStatusType. \\\n * {@link KnownReportOperationStatusType} can be used interchangeably with ReportOperationStatusType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Completed** \\\n * **Failed** \\\n * **Queued** \\\n * **NoDataFound** \\\n * **ReadyToDownload** \\\n * **TimedOut**\n */\nexport type ReportOperationStatusType = string;\n\n/** Known values of {@link FileFormat} that the service accepts. */\nexport enum KnownFileFormat {\n  /** Csv */\n  Csv = \"Csv\"\n}\n\n/**\n * Defines values for FileFormat. \\\n * {@link KnownFileFormat} can be used interchangeably with FileFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv**\n */\nexport type FileFormat = string;\n\n/** Known values of {@link ScheduleFrequency} that the service accepts. */\nexport enum KnownScheduleFrequency {\n  /** Cost analysis data will be emailed every day. */\n  Daily = \"Daily\",\n  /** Cost analysis data will be emailed every week. */\n  Weekly = \"Weekly\",\n  /** Cost analysis data will be emailed every month. */\n  Monthly = \"Monthly\"\n}\n\n/**\n * Defines values for ScheduleFrequency. \\\n * {@link KnownScheduleFrequency} can be used interchangeably with ScheduleFrequency,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily**: Cost analysis data will be emailed every day. \\\n * **Weekly**: Cost analysis data will be emailed every week. \\\n * **Monthly**: Cost analysis data will be emailed every month.\n */\nexport type ScheduleFrequency = string;\n\n/** Known values of {@link DaysOfWeek} that the service accepts. */\nexport enum KnownDaysOfWeek {\n  /** Monday */\n  Monday = \"Monday\",\n  /** Tuesday */\n  Tuesday = \"Tuesday\",\n  /** Wednesday */\n  Wednesday = \"Wednesday\",\n  /** Thursday */\n  Thursday = \"Thursday\",\n  /** Friday */\n  Friday = \"Friday\",\n  /** Saturday */\n  Saturday = \"Saturday\",\n  /** Sunday */\n  Sunday = \"Sunday\"\n}\n\n/**\n * Defines values for DaysOfWeek. \\\n * {@link KnownDaysOfWeek} can be used interchangeably with DaysOfWeek,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Monday** \\\n * **Tuesday** \\\n * **Wednesday** \\\n * **Thursday** \\\n * **Friday** \\\n * **Saturday** \\\n * **Sunday**\n */\nexport type DaysOfWeek = string;\n\n/** Known values of {@link WeeksOfMonth} that the service accepts. */\nexport enum KnownWeeksOfMonth {\n  /** First */\n  First = \"First\",\n  /** Second */\n  Second = \"Second\",\n  /** Third */\n  Third = \"Third\",\n  /** Fourth */\n  Fourth = \"Fourth\",\n  /** Last */\n  Last = \"Last\"\n}\n\n/**\n * Defines values for WeeksOfMonth. \\\n * {@link KnownWeeksOfMonth} can be used interchangeably with WeeksOfMonth,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **First** \\\n * **Second** \\\n * **Third** \\\n * **Fourth** \\\n * **Last**\n */\nexport type WeeksOfMonth = string;\n\n/** Known values of {@link ScheduledActionStatus} that the service accepts. */\nexport enum KnownScheduledActionStatus {\n  /** Scheduled action is saved but will not be run. */\n  Disabled = \"Disabled\",\n  /** Scheduled action is saved and will be run. */\n  Enabled = \"Enabled\",\n  /** Scheduled action is expired. */\n  Expired = \"Expired\"\n}\n\n/**\n * Defines values for ScheduledActionStatus. \\\n * {@link KnownScheduledActionStatus} can be used interchangeably with ScheduledActionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled**: Scheduled action is saved but will not be run. \\\n * **Enabled**: Scheduled action is saved and will be run. \\\n * **Expired**: Scheduled action is expired.\n */\nexport type ScheduledActionStatus = string;\n\n/** Known values of {@link ScheduledActionKind} that the service accepts. */\nexport enum KnownScheduledActionKind {\n  /** Cost analysis data will be emailed. */\n  Email = \"Email\",\n  /** Cost anomaly information will be emailed. Available only on subscription scope at daily frequency. If no anomaly is detected on the resource, an email won't be sent. */\n  InsightAlert = \"InsightAlert\"\n}\n\n/**\n * Defines values for ScheduledActionKind. \\\n * {@link KnownScheduledActionKind} can be used interchangeably with ScheduledActionKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Email**: Cost analysis data will be emailed. \\\n * **InsightAlert**: Cost anomaly information will be emailed. Available only on subscription scope at daily frequency. If no anomaly is detected on the resource, an email won't be sent.\n */\nexport type ScheduledActionKind = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */\nexport enum KnownCheckNameAvailabilityReason {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** AlreadyExists */\n  AlreadyExists = \"AlreadyExists\"\n}\n\n/**\n * Defines values for CheckNameAvailabilityReason. \\\n * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **AlreadyExists**\n */\nexport type CheckNameAvailabilityReason = string;\n\n/** Known values of {@link LookBackPeriod} that the service accepts. */\nexport enum KnownLookBackPeriod {\n  /** 7 days used to look back. */\n  Last7Days = \"Last7Days\",\n  /** 30 days used to look back. */\n  Last30Days = \"Last30Days\",\n  /** 60 days used to look back. */\n  Last60Days = \"Last60Days\"\n}\n\n/**\n * Defines values for LookBackPeriod. \\\n * {@link KnownLookBackPeriod} can be used interchangeably with LookBackPeriod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Last7Days**: 7 days used to look back. \\\n * **Last30Days**: 30 days used to look back. \\\n * **Last60Days**: 60 days used to look back.\n */\nexport type LookBackPeriod = string;\n\n/** Known values of {@link Grain} that the service accepts. */\nexport enum KnownGrain {\n  /** Hourly grain corresponds to value per hour. */\n  Hourly = \"Hourly\",\n  /** Hourly grain corresponds to value per day. */\n  Daily = \"Daily\",\n  /** Hourly grain corresponds to value per month. */\n  Monthly = \"Monthly\"\n}\n\n/**\n * Defines values for Grain. \\\n * {@link KnownGrain} can be used interchangeably with Grain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Hourly**: Hourly grain corresponds to value per hour. \\\n * **Daily**: Hourly grain corresponds to value per day. \\\n * **Monthly**: Hourly grain corresponds to value per month.\n */\nexport type Grain = string;\n\n/** Known values of {@link Term} that the service accepts. */\nexport enum KnownTerm {\n  /** Benefit term is 1 year. */\n  P1Y = \"P1Y\",\n  /** Benefit term is 3 years. */\n  P3Y = \"P3Y\"\n}\n\n/**\n * Defines values for Term. \\\n * {@link KnownTerm} can be used interchangeably with Term,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P1Y**: Benefit term is 1 year. \\\n * **P3Y**: Benefit term is 3 years.\n */\nexport type Term = string;\n\n/** Known values of {@link Scope} that the service accepts. */\nexport enum KnownScope {\n  /** Single scope recommendation. */\n  Single = \"Single\",\n  /** Shared scope recommendation. */\n  Shared = \"Shared\"\n}\n\n/**\n * Defines values for Scope. \\\n * {@link KnownScope} can be used interchangeably with Scope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Single**: Single scope recommendation. \\\n * **Shared**: Shared scope recommendation.\n */\nexport type Scope = string;\n\n/** Known values of {@link BenefitKind} that the service accepts. */\nexport enum KnownBenefitKind {\n  /** Benefit is IncludedQuantity. */\n  IncludedQuantity = \"IncludedQuantity\",\n  /** Benefit is Reservation. */\n  Reservation = \"Reservation\",\n  /** Benefit is SavingsPlan. */\n  SavingsPlan = \"SavingsPlan\"\n}\n\n/**\n * Defines values for BenefitKind. \\\n * {@link KnownBenefitKind} can be used interchangeably with BenefitKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IncludedQuantity**: Benefit is IncludedQuantity. \\\n * **Reservation**: Benefit is Reservation. \\\n * **SavingsPlan**: Benefit is SavingsPlan.\n */\nexport type BenefitKind = string;\n\n/** Known values of {@link GrainParameter} that the service accepts. */\nexport enum KnownGrainParameter {\n  /** Hourly grain corresponds to value per hour. */\n  Hourly = \"Hourly\",\n  /** Hourly grain corresponds to value per day. */\n  Daily = \"Daily\",\n  /** Hourly grain corresponds to value per month. */\n  Monthly = \"Monthly\"\n}\n\n/**\n * Defines values for GrainParameter. \\\n * {@link KnownGrainParameter} can be used interchangeably with GrainParameter,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Hourly**: Hourly grain corresponds to value per hour. \\\n * **Daily**: Hourly grain corresponds to value per day. \\\n * **Monthly**: Hourly grain corresponds to value per month.\n */\nexport type GrainParameter = string;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface ViewsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ViewsListResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface ViewsListByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByScope operation. */\nexport type ViewsListByScopeResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface ViewsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ViewsGetResponse = View;\n\n/** Optional parameters. */\nexport interface ViewsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ViewsCreateOrUpdateResponse = View;\n\n/** Optional parameters. */\nexport interface ViewsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ViewsGetByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByScope operation. */\nexport type ViewsGetByScopeResponse = View;\n\n/** Optional parameters. */\nexport interface ViewsCreateOrUpdateByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateByScope operation. */\nexport type ViewsCreateOrUpdateByScopeResponse = View;\n\n/** Optional parameters. */\nexport interface ViewsDeleteByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ViewsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ViewsListNextResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface ViewsListByScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByScopeNext operation. */\nexport type ViewsListByScopeNextResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface AlertsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AlertsListResponse = AlertsResult;\n\n/** Optional parameters. */\nexport interface AlertsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AlertsGetResponse = Alert;\n\n/** Optional parameters. */\nexport interface AlertsDismissOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the dismiss operation. */\nexport type AlertsDismissResponse = Alert;\n\n/** Optional parameters. */\nexport interface AlertsListExternalOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listExternal operation. */\nexport type AlertsListExternalResponse = AlertsResult;\n\n/** Optional parameters. */\nexport interface ForecastUsageOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. */\n  filter?: string;\n}\n\n/** Contains response data for the usage operation. */\nexport type ForecastUsageResponse = ForecastResult;\n\n/** Optional parameters. */\nexport interface ForecastExternalCloudProviderUsageOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. */\n  filter?: string;\n}\n\n/** Contains response data for the externalCloudProviderUsage operation. */\nexport type ForecastExternalCloudProviderUsageResponse = ForecastResult;\n\n/** Optional parameters. */\nexport interface DimensionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'. */\n  filter?: string;\n  /** May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions. */\n  expand?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the most recent N dimension data. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type DimensionsListResponse = DimensionsListResult;\n\n/** Optional parameters. */\nexport interface DimensionsByExternalCloudProviderTypeOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'. */\n  filter?: string;\n  /** May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions. */\n  expand?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the most recent N dimension data. */\n  top?: number;\n}\n\n/** Contains response data for the byExternalCloudProviderType operation. */\nexport type DimensionsByExternalCloudProviderTypeResponse = DimensionsListResult;\n\n/** Optional parameters. */\nexport interface QueryUsageOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the usage operation. */\nexport type QueryUsageResponse = QueryResult;\n\n/** Optional parameters. */\nexport interface QueryUsageByExternalCloudProviderTypeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the usageByExternalCloudProviderType operation. */\nexport type QueryUsageByExternalCloudProviderTypeResponse = QueryResult;\n\n/** Optional parameters. */\nexport interface GenerateReservationDetailsReportByBillingAccountIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the byBillingAccountId operation. */\nexport type GenerateReservationDetailsReportByBillingAccountIdResponse = OperationStatus;\n\n/** Optional parameters. */\nexport interface GenerateReservationDetailsReportByBillingProfileIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the byBillingProfileId operation. */\nexport type GenerateReservationDetailsReportByBillingProfileIdResponse = OperationStatus;\n\n/** Optional parameters. */\nexport interface ExportsListOptionalParams extends coreClient.OperationOptions {\n  /** May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last run of each export. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ExportsListResponse = ExportListResult;\n\n/** Optional parameters. */\nexport interface ExportsGetOptionalParams extends coreClient.OperationOptions {\n  /** May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last 10 runs of the export. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ExportsGetResponse = Export;\n\n/** Optional parameters. */\nexport interface ExportsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExportsCreateOrUpdateResponse = Export;\n\n/** Optional parameters. */\nexport interface ExportsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ExportsExecuteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ExportsGetExecutionHistoryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getExecutionHistory operation. */\nexport type ExportsGetExecutionHistoryResponse = ExportExecutionListResult;\n\n/** Optional parameters. */\nexport interface GenerateCostDetailsReportCreateOperationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOperation operation. */\nexport type GenerateCostDetailsReportCreateOperationResponse = CostDetailsOperationResults;\n\n/** Optional parameters. */\nexport interface GenerateCostDetailsReportGetOperationResultsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getOperationResults operation. */\nexport type GenerateCostDetailsReportGetOperationResultsResponse = CostDetailsOperationResults;\n\n/** Optional parameters. */\nexport interface GenerateDetailedCostReportCreateOperationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOperation operation. */\nexport type GenerateDetailedCostReportCreateOperationResponse = GenerateDetailedCostReportOperationResult;\n\n/** Optional parameters. */\nexport interface GenerateDetailedCostReportOperationResultsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type GenerateDetailedCostReportOperationResultsGetResponse = GenerateDetailedCostReportOperationResult;\n\n/** Optional parameters. */\nexport interface GenerateDetailedCostReportOperationStatusGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GenerateDetailedCostReportOperationStatusGetResponse = GenerateDetailedCostReportOperationStatuses;\n\n/** Optional parameters. */\nexport interface PriceSheetDownloadOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the download operation. */\nexport type PriceSheetDownloadResponse = DownloadURL;\n\n/** Optional parameters. */\nexport interface PriceSheetDownloadByBillingProfileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the downloadByBillingProfile operation. */\nexport type PriceSheetDownloadByBillingProfileResponse = DownloadURL;\n\n/** Optional parameters. */\nexport interface ScheduledActionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter scheduled actions by properties/viewId. Supported operator is 'eq'. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ScheduledActionsListResponse = ScheduledActionListResult;\n\n/** Optional parameters. */\nexport interface ScheduledActionsListByScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter scheduled actions by properties/viewId. Supported operator is 'eq'. */\n  filter?: string;\n}\n\n/** Contains response data for the listByScope operation. */\nexport type ScheduledActionsListByScopeResponse = ScheduledActionListResult;\n\n/** Optional parameters. */\nexport interface ScheduledActionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the Entity. Not required when creating an entity. Optional when updating an entity and can be specified to achieve optimistic concurrency. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ScheduledActionsCreateOrUpdateResponse = ScheduledAction;\n\n/** Optional parameters. */\nexport interface ScheduledActionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ScheduledActionsGetResponse = ScheduledAction;\n\n/** Optional parameters. */\nexport interface ScheduledActionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ScheduledActionsCreateOrUpdateByScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the Entity. Not required when creating an entity. Optional when updating an entity and can be specified to achieve optimistic concurrency. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdateByScope operation. */\nexport type ScheduledActionsCreateOrUpdateByScopeResponse = ScheduledAction;\n\n/** Optional parameters. */\nexport interface ScheduledActionsGetByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByScope operation. */\nexport type ScheduledActionsGetByScopeResponse = ScheduledAction;\n\n/** Optional parameters. */\nexport interface ScheduledActionsDeleteByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ScheduledActionsRunOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ScheduledActionsRunByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ScheduledActionsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type ScheduledActionsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;\n\n/** Optional parameters. */\nexport interface ScheduledActionsCheckNameAvailabilityByScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailabilityByScope operation. */\nexport type ScheduledActionsCheckNameAvailabilityByScopeResponse = CheckNameAvailabilityResponse;\n\n/** Optional parameters. */\nexport interface ScheduledActionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ScheduledActionsListNextResponse = ScheduledActionListResult;\n\n/** Optional parameters. */\nexport interface ScheduledActionsListByScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByScopeNext operation. */\nexport type ScheduledActionsListByScopeNextResponse = ScheduledActionListResult;\n\n/** Optional parameters. */\nexport interface BenefitRecommendationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Can be used to filter benefitRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Shared'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last60Days'; properties/term with allowed values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId; properties/resourceGroup */\n  filter?: string;\n  /** May be used to expand the properties by: properties/usage, properties/allRecommendationDetails */\n  expand?: string;\n  /** May be used to order the recommendations by: properties/armSkuName. For the savings plan, the results are in order by default. There is no need to use this clause. */\n  orderby?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type BenefitRecommendationsListResponse = BenefitRecommendationsListResult;\n\n/** Optional parameters. */\nexport interface BenefitRecommendationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BenefitRecommendationsListNextResponse = BenefitRecommendationsListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Grain. */\n  grainParameter?: GrainParameter;\n  /** Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. */\n  filter?: string;\n}\n\n/** Contains response data for the listByBillingAccountId operation. */\nexport type BenefitUtilizationSummariesListByBillingAccountIdResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Grain. */\n  grainParameter?: GrainParameter;\n  /** Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. */\n  filter?: string;\n}\n\n/** Contains response data for the listByBillingProfileId operation. */\nexport type BenefitUtilizationSummariesListByBillingProfileIdResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  extends coreClient.OperationOptions {\n  /** Supports filtering by properties/usageDate. */\n  filter?: string;\n  /** Grain. */\n  grainParameter?: GrainParameter;\n}\n\n/** Contains response data for the listBySavingsPlanOrder operation. */\nexport type BenefitUtilizationSummariesListBySavingsPlanOrderResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Supports filtering by properties/usageDate. */\n  filter?: string;\n  /** Grain. */\n  grainParameter?: GrainParameter;\n}\n\n/** Contains response data for the listBySavingsPlanId operation. */\nexport type BenefitUtilizationSummariesListBySavingsPlanIdResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListByBillingAccountIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingAccountIdNext operation. */\nexport type BenefitUtilizationSummariesListByBillingAccountIdNextResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListByBillingProfileIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfileIdNext operation. */\nexport type BenefitUtilizationSummariesListByBillingProfileIdNextResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListBySavingsPlanOrderNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySavingsPlanOrderNext operation. */\nexport type BenefitUtilizationSummariesListBySavingsPlanOrderNextResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface BenefitUtilizationSummariesListBySavingsPlanIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySavingsPlanIdNext operation. */\nexport type BenefitUtilizationSummariesListBySavingsPlanIdNextResponse = BenefitUtilizationSummariesListResult;\n\n/** Optional parameters. */\nexport interface CostManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CostManagementOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionType: {\n        serializedName: \"actionType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ViewListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ViewListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"View\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigTimePeriod\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigDataset: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigDataset\",\n    modelProperties: {\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigDatasetConfiguration\"\n        }\n      },\n      aggregation: {\n        serializedName: \"aggregation\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"ReportConfigAggregation\" }\n          }\n        }\n      },\n      grouping: {\n        constraints: {\n          MaxItems: 2\n        },\n        serializedName: \"grouping\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportConfigGrouping\"\n            }\n          }\n        }\n      },\n      sorting: {\n        serializedName: \"sorting\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportConfigSorting\"\n            }\n          }\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigFilter\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigDatasetConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigDatasetConfiguration\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigAggregation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigAggregation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigGrouping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigGrouping\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigSorting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigSorting\",\n    modelProperties: {\n      direction: {\n        serializedName: \"direction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigFilter\",\n    modelProperties: {\n      and: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"and\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportConfigFilter\"\n            }\n          }\n        }\n      },\n      or: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"or\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportConfigFilter\"\n            }\n          }\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigComparisonExpression\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigComparisonExpression\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportConfigComparisonExpression: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportConfigComparisonExpression\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        constraints: {\n          MinItems: 1\n        },\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KpiProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiProperties\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const PivotProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PivotProperties\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CostManagementProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CostManagementProxyResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlertsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlertsResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alert\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlertPropertiesDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlertPropertiesDefinition\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      criteria: {\n        serializedName: \"criteria\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlertPropertiesDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlertPropertiesDetails\",\n    modelProperties: {\n      timeGrainType: {\n        serializedName: \"timeGrainType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      periodStartDate: {\n        serializedName: \"periodStartDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      triggeredBy: {\n        serializedName: \"triggeredBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroupFilter: {\n        serializedName: \"resourceGroupFilter\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      resourceFilter: {\n        serializedName: \"resourceFilter\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      meterFilter: {\n        serializedName: \"meterFilter\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      tagFilter: {\n        serializedName: \"tagFilter\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      threshold: {\n        serializedName: \"threshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentSpend: {\n        serializedName: \"currentSpend\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contactEmails: {\n        serializedName: \"contactEmails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      contactGroups: {\n        serializedName: \"contactGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      contactRoles: {\n        serializedName: \"contactRoles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      overridingAlert: {\n        serializedName: \"overridingAlert\",\n        type: {\n          name: \"String\"\n        }\n      },\n      departmentName: {\n        serializedName: \"departmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      companyName: {\n        serializedName: \"companyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enrollmentNumber: {\n        serializedName: \"enrollmentNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enrollmentStartDate: {\n        serializedName: \"enrollmentStartDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enrollmentEndDate: {\n        serializedName: \"enrollmentEndDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      invoicingThreshold: {\n        serializedName: \"invoicingThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DismissAlertPayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DismissAlertPayload\",\n    modelProperties: {\n      definition: {\n        serializedName: \"properties.definition\",\n        type: {\n          name: \"Composite\",\n          className: \"AlertPropertiesDefinition\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"properties.details\",\n        type: {\n          name: \"Composite\",\n          className: \"AlertPropertiesDetails\"\n        }\n      },\n      costEntityId: {\n        serializedName: \"properties.costEntityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      closeTime: {\n        serializedName: \"properties.closeTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      modificationTime: {\n        serializedName: \"properties.modificationTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusModificationUserName: {\n        serializedName: \"properties.statusModificationUserName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusModificationTime: {\n        serializedName: \"properties.statusModificationTime\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastDefinition\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeframe: {\n        serializedName: \"timeframe\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastTimePeriod\"\n        }\n      },\n      dataset: {\n        serializedName: \"dataset\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastDataset\"\n        }\n      },\n      includeActualCost: {\n        serializedName: \"includeActualCost\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeFreshPartialCost: {\n        serializedName: \"includeFreshPartialCost\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastTimePeriod\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastDataset: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastDataset\",\n    modelProperties: {\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastDatasetConfiguration\"\n        }\n      },\n      aggregation: {\n        serializedName: \"aggregation\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"ForecastAggregation\" }\n          }\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastFilter\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastDatasetConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastDatasetConfiguration\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastAggregation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastAggregation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastFilter\",\n    modelProperties: {\n      and: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"and\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ForecastFilter\"\n            }\n          }\n        }\n      },\n      or: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"or\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ForecastFilter\"\n            }\n          }\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastComparisonExpression\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastComparisonExpression\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastComparisonExpression: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastComparisonExpression\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        constraints: {\n          MinItems: 1\n        },\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastColumn\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CostManagementResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CostManagementResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DimensionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DimensionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dimension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryDefinition\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeframe: {\n        serializedName: \"timeframe\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryTimePeriod\"\n        }\n      },\n      dataset: {\n        serializedName: \"dataset\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryDataset\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryTimePeriod\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDataset: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryDataset\",\n    modelProperties: {\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryDatasetConfiguration\"\n        }\n      },\n      aggregation: {\n        serializedName: \"aggregation\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"QueryAggregation\" } }\n        }\n      },\n      grouping: {\n        constraints: {\n          MaxItems: 2\n        },\n        serializedName: \"grouping\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryGrouping\"\n            }\n          }\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFilter\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDatasetConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryDatasetConfiguration\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryAggregation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryAggregation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryGrouping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryGrouping\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryFilter\",\n    modelProperties: {\n      and: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"and\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryFilter\"\n            }\n          }\n        }\n      },\n      or: {\n        constraints: {\n          MinItems: 2\n        },\n        serializedName: \"or\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryFilter\"\n            }\n          }\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryComparisonExpression\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryComparisonExpression\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryComparisonExpression: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryComparisonExpression\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        constraints: {\n          MinItems: 1\n        },\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryColumn\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reportUrl: {\n        serializedName: \"properties.reportUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validUntil: {\n        serializedName: \"properties.validUntil\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Export\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExportSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportSchedule\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurrence: {\n        serializedName: \"recurrence\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurrencePeriod: {\n        serializedName: \"recurrencePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportRecurrencePeriod\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportRecurrencePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportRecurrencePeriod\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommonExportProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommonExportProperties\",\n    modelProperties: {\n      format: {\n        serializedName: \"format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deliveryInfo: {\n        serializedName: \"deliveryInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDeliveryInfo\"\n        }\n      },\n      definition: {\n        serializedName: \"definition\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDefinition\"\n        }\n      },\n      runHistory: {\n        serializedName: \"runHistory\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportExecutionListResult\"\n        }\n      },\n      partitionData: {\n        serializedName: \"partitionData\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nextRunTimeEstimate: {\n        serializedName: \"nextRunTimeEstimate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDeliveryInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDeliveryInfo\",\n    modelProperties: {\n      destination: {\n        serializedName: \"destination\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDeliveryDestination\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDeliveryDestination: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDeliveryDestination\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      container: {\n        serializedName: \"container\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rootFolderPath: {\n        serializedName: \"rootFolderPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sasToken: {\n        serializedName: \"sasToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccount: {\n        serializedName: \"storageAccount\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDefinition\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeframe: {\n        serializedName: \"timeframe\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportTimePeriod\"\n        }\n      },\n      dataSet: {\n        serializedName: \"dataSet\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDataset\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportTimePeriod\",\n    modelProperties: {\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDataset: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDataset\",\n    modelProperties: {\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDatasetConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDatasetConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDatasetConfiguration\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExportExecutionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportExecutionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExportRun\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateCostDetailsReportRequestDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateCostDetailsReportRequestDefinition\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"CostDetailsTimePeriod\"\n        }\n      },\n      billingPeriod: {\n        serializedName: \"billingPeriod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceId: {\n        serializedName: \"invoiceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CostDetailsTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CostDetailsTimePeriod\",\n    modelProperties: {\n      start: {\n        serializedName: \"start\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      end: {\n        serializedName: \"end\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CostDetailsOperationResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CostDetailsOperationResults\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validTill: {\n        serializedName: \"validTill\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      },\n      manifestVersion: {\n        serializedName: \"manifest.manifestVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"manifest.dataFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      byteCount: {\n        serializedName: \"manifest.byteCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobCount: {\n        serializedName: \"manifest.blobCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      compressData: {\n        serializedName: \"manifest.compressData\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blobs: {\n        serializedName: \"manifest.blobs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobInfo\"\n            }\n          }\n        }\n      },\n      requestScope: {\n        serializedName: \"manifest.requestContext.requestScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestBody: {\n        serializedName: \"manifest.requestContext.requestBody\",\n        type: {\n          name: \"Composite\",\n          className: \"GenerateCostDetailsReportRequestDefinition\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInfo\",\n    modelProperties: {\n      blobLink: {\n        serializedName: \"blobLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      byteCount: {\n        serializedName: \"byteCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateCostDetailsReportErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateCostDetailsReportErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportDefinition\",\n    modelProperties: {\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"GenerateDetailedCostReportTimePeriod\"\n        }\n      },\n      billingPeriod: {\n        serializedName: \"billingPeriod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceId: {\n        serializedName: \"invoiceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customerId: {\n        serializedName: \"customerId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportTimePeriod\",\n    modelProperties: {\n      start: {\n        serializedName: \"start\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      end: {\n        serializedName: \"end\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportOperationResult\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"properties.expiryTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validTill: {\n        serializedName: \"properties.validTill\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      downloadUrl: {\n        serializedName: \"properties.downloadUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DownloadURL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DownloadURL\",\n    modelProperties: {\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validTill: {\n        serializedName: \"validTill\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      downloadUrl: {\n        serializedName: \"downloadUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportOperationStatuses: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportOperationStatuses\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"properties.expiryTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validTill: {\n        serializedName: \"properties.validTill\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      downloadUrl: {\n        serializedName: \"properties.downloadUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduledActionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduledActionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScheduledAction\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDestination: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileDestination\",\n    modelProperties: {\n      fileFormats: {\n        serializedName: \"fileFormats\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NotificationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotificationProperties\",\n    modelProperties: {\n      to: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 20\n        },\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\n                \"^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z]{2,}$\"\n              )\n            },\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      regionalFormat: {\n        serializedName: \"regionalFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subject: {\n        serializedName: \"subject\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduleProperties\",\n    modelProperties: {\n      frequency: {\n        serializedName: \"frequency\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hourOfDay: {\n        serializedName: \"hourOfDay\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      daysOfWeek: {\n        serializedName: \"daysOfWeek\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      weeksOfMonth: {\n        serializedName: \"weeksOfMonth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dayOfMonth: {\n        serializedName: \"dayOfMonth\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      startDate: {\n        serializedName: \"startDate\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDate: {\n        serializedName: \"endDate\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseWithNestedDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseWithNestedDetails\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetailsWithNestedDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResponse\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitRecommendationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitRecommendationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BenefitRecommendationModel\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitRecommendationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitRecommendationProperties\",\n    uberParent: \"BenefitRecommendationProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"scope\",\n      clientName: \"scope\"\n    },\n    modelProperties: {\n      firstConsumptionDate: {\n        serializedName: \"firstConsumptionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastConsumptionDate: {\n        serializedName: \"lastConsumptionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lookBackPeriod: {\n        serializedName: \"lookBackPeriod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalHours: {\n        serializedName: \"totalHours\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      usage: {\n        serializedName: \"usage\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendationUsageDetails\"\n        }\n      },\n      armSkuName: {\n        serializedName: \"armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"term\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commitmentGranularity: {\n        serializedName: \"commitmentGranularity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costWithoutBenefit: {\n        serializedName: \"costWithoutBenefit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recommendationDetails: {\n        serializedName: \"recommendationDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"AllSavingsBenefitDetails\"\n        }\n      },\n      allRecommendationDetails: {\n        serializedName: \"allRecommendationDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"AllSavingsList\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendationUsageDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendationUsageDetails\",\n    modelProperties: {\n      usageGrain: {\n        serializedName: \"usageGrain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      charges: {\n        serializedName: \"charges\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AllSavingsBenefitDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AllSavingsBenefitDetails\",\n    modelProperties: {\n      overageCost: {\n        serializedName: \"overageCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      benefitCost: {\n        serializedName: \"benefitCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalCost: {\n        serializedName: \"totalCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      savingsAmount: {\n        serializedName: \"savingsAmount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      savingsPercentage: {\n        serializedName: \"savingsPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      coveragePercentage: {\n        serializedName: \"coveragePercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      commitmentAmount: {\n        serializedName: \"commitmentAmount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      averageUtilizationPercentage: {\n        serializedName: \"averageUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      wastageCost: {\n        serializedName: \"wastageCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AllSavingsList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AllSavingsList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AllSavingsBenefitDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitUtilizationSummariesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitUtilizationSummariesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BenefitUtilizationSummary\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitUtilizationSummaryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitUtilizationSummaryProperties\",\n    modelProperties: {\n      armSkuName: {\n        serializedName: \"armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitId: {\n        serializedName: \"benefitId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitOrderId: {\n        serializedName: \"benefitOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitType: {\n        serializedName: \"benefitType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      usageDate: {\n        serializedName: \"usageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CostManagementOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CostManagementOperation\",\n    modelProperties: {\n      ...Operation.type.modelProperties,\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetailsWithNestedDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetailsWithNestedDetails\",\n    modelProperties: {\n      ...ErrorDetails.type.modelProperties,\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetailsWithNestedDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const View: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"View\",\n    modelProperties: {\n      ...CostManagementProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      modifiedOn: {\n        serializedName: \"properties.modifiedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dateRange: {\n        serializedName: \"properties.dateRange\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      chart: {\n        serializedName: \"properties.chart\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accumulated: {\n        serializedName: \"properties.accumulated\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metric: {\n        serializedName: \"properties.metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kpis: {\n        serializedName: \"properties.kpis\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiProperties\"\n            }\n          }\n        }\n      },\n      pivots: {\n        serializedName: \"properties.pivots\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PivotProperties\"\n            }\n          }\n        }\n      },\n      typePropertiesQueryType: {\n        serializedName: \"properties.query.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeframe: {\n        serializedName: \"properties.query.timeframe\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"properties.query.timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigTimePeriod\"\n        }\n      },\n      dataSet: {\n        serializedName: \"properties.query.dataSet\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportConfigDataset\"\n        }\n      },\n      includeMonetaryCommitment: {\n        serializedName: \"properties.query.includeMonetaryCommitment\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Alert: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Alert\",\n    modelProperties: {\n      ...CostManagementProxyResource.type.modelProperties,\n      definition: {\n        serializedName: \"properties.definition\",\n        type: {\n          name: \"Composite\",\n          className: \"AlertPropertiesDefinition\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"properties.details\",\n        type: {\n          name: \"Composite\",\n          className: \"AlertPropertiesDetails\"\n        }\n      },\n      costEntityId: {\n        serializedName: \"properties.costEntityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      closeTime: {\n        serializedName: \"properties.closeTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      modificationTime: {\n        serializedName: \"properties.modificationTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusModificationUserName: {\n        serializedName: \"properties.statusModificationUserName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusModificationTime: {\n        serializedName: \"properties.statusModificationTime\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportRun: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportRun\",\n    modelProperties: {\n      ...CostManagementProxyResource.type.modelProperties,\n      executionType: {\n        serializedName: \"properties.executionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      submittedBy: {\n        serializedName: \"properties.submittedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      submittedTime: {\n        serializedName: \"properties.submittedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      processingStartTime: {\n        serializedName: \"properties.processingStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      processingEndTime: {\n        serializedName: \"properties.processingEndTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fileName: {\n        serializedName: \"properties.fileName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runSettings: {\n        serializedName: \"properties.runSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"CommonExportProperties\"\n        }\n      },\n      error: {\n        serializedName: \"properties.error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const Export: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Export\",\n    modelProperties: {\n      ...CostManagementProxyResource.type.modelProperties,\n      format: {\n        serializedName: \"properties.format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deliveryInfo: {\n        serializedName: \"properties.deliveryInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDeliveryInfo\"\n        }\n      },\n      definition: {\n        serializedName: \"properties.definition\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportDefinition\"\n        }\n      },\n      runHistory: {\n        serializedName: \"properties.runHistory\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportExecutionListResult\"\n        }\n      },\n      partitionData: {\n        serializedName: \"properties.partitionData\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nextRunTimeEstimate: {\n        serializedName: \"properties.nextRunTimeEstimate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      schedule: {\n        serializedName: \"properties.schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportSchedule\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastResult\",\n    modelProperties: {\n      ...CostManagementResource.type.modelProperties,\n      nextLink: {\n        serializedName: \"properties.nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columns: {\n        serializedName: \"properties.columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ForecastColumn\"\n            }\n          }\n        }\n      },\n      rows: {\n        serializedName: \"properties.rows\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"any\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Dimension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dimension\",\n    modelProperties: {\n      ...CostManagementResource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filterEnabled: {\n        serializedName: \"properties.filterEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupingEnabled: {\n        serializedName: \"properties.groupingEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      data: {\n        serializedName: \"properties.data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      total: {\n        serializedName: \"properties.total\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      category: {\n        serializedName: \"properties.category\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageStart: {\n        serializedName: \"properties.usageStart\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      usageEnd: {\n        serializedName: \"properties.usageEnd\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      nextLink: {\n        serializedName: \"properties.nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryResult\",\n    modelProperties: {\n      ...CostManagementResource.type.modelProperties,\n      nextLink: {\n        serializedName: \"properties.nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columns: {\n        serializedName: \"properties.columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryColumn\"\n            }\n          }\n        }\n      },\n      rows: {\n        serializedName: \"properties.rows\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"any\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExportProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportProperties\",\n    modelProperties: {\n      ...CommonExportProperties.type.modelProperties,\n      schedule: {\n        serializedName: \"schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"ExportSchedule\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const BenefitResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitUtilizationSummary: coreClient.CompositeMapper = {\n  serializedName: \"BenefitUtilizationSummary\",\n  type: {\n    name: \"Composite\",\n    className: \"BenefitUtilizationSummary\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SingleScopeBenefitRecommendationProperties: coreClient.CompositeMapper = {\n  serializedName: \"Single\",\n  type: {\n    name: \"Composite\",\n    className: \"SingleScopeBenefitRecommendationProperties\",\n    uberParent: \"BenefitRecommendationProperties\",\n    polymorphicDiscriminator:\n      BenefitRecommendationProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...BenefitRecommendationProperties.type.modelProperties,\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedScopeBenefitRecommendationProperties: coreClient.CompositeMapper = {\n  serializedName: \"Shared\",\n  type: {\n    name: \"Composite\",\n    className: \"SharedScopeBenefitRecommendationProperties\",\n    uberParent: \"BenefitRecommendationProperties\",\n    polymorphicDiscriminator:\n      BenefitRecommendationProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...BenefitRecommendationProperties.type.modelProperties\n    }\n  }\n};\n\nexport const IncludedQuantityUtilizationSummaryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IncludedQuantityUtilizationSummaryProperties\",\n    modelProperties: {\n      ...BenefitUtilizationSummaryProperties.type.modelProperties,\n      utilizationPercentage: {\n        serializedName: \"utilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavingsPlanUtilizationSummaryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavingsPlanUtilizationSummaryProperties\",\n    modelProperties: {\n      ...BenefitUtilizationSummaryProperties.type.modelProperties,\n      avgUtilizationPercentage: {\n        serializedName: \"avgUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minUtilizationPercentage: {\n        serializedName: \"minUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUtilizationPercentage: {\n        serializedName: \"maxUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduledActionProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduledActionProxyResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      eTag: {\n        serializedName: \"eTag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const BenefitRecommendationModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BenefitRecommendationModel\",\n    modelProperties: {\n      ...BenefitResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BenefitRecommendationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const IncludedQuantityUtilizationSummary: coreClient.CompositeMapper = {\n  serializedName: \"IncludedQuantity\",\n  type: {\n    name: \"Composite\",\n    className: \"IncludedQuantityUtilizationSummary\",\n    uberParent: \"BenefitUtilizationSummary\",\n    polymorphicDiscriminator:\n      BenefitUtilizationSummary.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...BenefitUtilizationSummary.type.modelProperties,\n      armSkuName: {\n        serializedName: \"properties.armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitId: {\n        serializedName: \"properties.benefitId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitOrderId: {\n        serializedName: \"properties.benefitOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitType: {\n        serializedName: \"properties.benefitType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      usageDate: {\n        serializedName: \"properties.usageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      utilizationPercentage: {\n        serializedName: \"properties.utilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavingsPlanUtilizationSummary: coreClient.CompositeMapper = {\n  serializedName: \"SavingsPlan\",\n  type: {\n    name: \"Composite\",\n    className: \"SavingsPlanUtilizationSummary\",\n    uberParent: \"BenefitUtilizationSummary\",\n    polymorphicDiscriminator:\n      BenefitUtilizationSummary.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...BenefitUtilizationSummary.type.modelProperties,\n      armSkuName: {\n        serializedName: \"properties.armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitId: {\n        serializedName: \"properties.benefitId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitOrderId: {\n        serializedName: \"properties.benefitOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitType: {\n        serializedName: \"properties.benefitType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      usageDate: {\n        serializedName: \"properties.usageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      avgUtilizationPercentage: {\n        serializedName: \"properties.avgUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minUtilizationPercentage: {\n        serializedName: \"properties.minUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUtilizationPercentage: {\n        serializedName: \"properties.maxUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduledAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduledAction\",\n    modelProperties: {\n      ...ScheduledActionProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileDestination: {\n        serializedName: \"properties.fileDestination\",\n        type: {\n          name: \"Composite\",\n          className: \"FileDestination\"\n        }\n      },\n      notification: {\n        serializedName: \"properties.notification\",\n        type: {\n          name: \"Composite\",\n          className: \"NotificationProperties\"\n        }\n      },\n      notificationEmail: {\n        serializedName: \"properties.notificationEmail\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schedule: {\n        serializedName: \"properties.schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduleProperties\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      viewId: {\n        serializedName: \"properties.viewId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateReservationDetailsReportByBillingAccountIdHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateReservationDetailsReportByBillingAccountIdHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateReservationDetailsReportByBillingProfileIdHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateReservationDetailsReportByBillingProfileIdHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateCostDetailsReportCreateOperationHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateCostDetailsReportCreateOperationHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateDetailedCostReportCreateOperationHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateDetailedCostReportCreateOperationHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureConsumptionAsyncOperation: {\n        serializedName: \"azure-consumption-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PriceSheetDownloadHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PriceSheetDownloadHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oDataEntityId: {\n        serializedName: \"odata-entityid\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PriceSheetDownloadByBillingProfileHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PriceSheetDownloadByBillingProfileHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oDataEntityId: {\n        serializedName: \"odata-entityid\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  BenefitRecommendationProperties: BenefitRecommendationProperties,\n  \"Resource.BenefitUtilizationSummary\": BenefitUtilizationSummary,\n  \"BenefitRecommendationProperties.Single\": SingleScopeBenefitRecommendationProperties,\n  \"BenefitRecommendationProperties.Shared\": SharedScopeBenefitRecommendationProperties,\n  \"BenefitUtilizationSummary.IncludedQuantity\": IncludedQuantityUtilizationSummary,\n  \"BenefitUtilizationSummary.SavingsPlan\": SavingsPlanUtilizationSummary\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  View as ViewMapper,\n  DismissAlertPayload as DismissAlertPayloadMapper,\n  ForecastDefinition as ForecastDefinitionMapper,\n  QueryDefinition as QueryDefinitionMapper,\n  Export as ExportMapper,\n  GenerateCostDetailsReportRequestDefinition as GenerateCostDetailsReportRequestDefinitionMapper,\n  GenerateDetailedCostReportDefinition as GenerateDetailedCostReportDefinitionMapper,\n  ScheduledAction as ScheduledActionMapper,\n  CheckNameAvailabilityRequest as CheckNameAvailabilityRequestMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const scope: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const viewName: OperationURLParameter = {\n  parameterPath: \"viewName\",\n  mapper: {\n    serializedName: \"viewName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ViewMapper\n};\n\nexport const scope1: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const alertId: OperationURLParameter = {\n  parameterPath: \"alertId\",\n  mapper: {\n    serializedName: \"alertId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DismissAlertPayloadMapper\n};\n\nexport const externalCloudProviderType: OperationURLParameter = {\n  parameterPath: \"externalCloudProviderType\",\n  mapper: {\n    serializedName: \"externalCloudProviderType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const externalCloudProviderId: OperationURLParameter = {\n  parameterPath: \"externalCloudProviderId\",\n  mapper: {\n    serializedName: \"externalCloudProviderId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ForecastDefinitionMapper\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skiptoken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueryDefinitionMapper\n};\n\nexport const billingAccountId: OperationURLParameter = {\n  parameterPath: \"billingAccountId\",\n  mapper: {\n    serializedName: \"billingAccountId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startDate: OperationQueryParameter = {\n  parameterPath: \"startDate\",\n  mapper: {\n    serializedName: \"startDate\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endDate: OperationQueryParameter = {\n  parameterPath: \"endDate\",\n  mapper: {\n    serializedName: \"endDate\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingProfileId: OperationURLParameter = {\n  parameterPath: \"billingProfileId\",\n  mapper: {\n    serializedName: \"billingProfileId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const exportName: OperationURLParameter = {\n  parameterPath: \"exportName\",\n  mapper: {\n    serializedName: \"exportName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExportMapper\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GenerateCostDetailsReportRequestDefinitionMapper\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GenerateDetailedCostReportDefinitionMapper\n};\n\nexport const billingAccountName: OperationURLParameter = {\n  parameterPath: \"billingAccountName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\n        \"([A-Za-z0-9]+(-[A-Za-z0-9]+)+):([A-Za-z0-9]+(-[A-Za-z0-9]+)+)_[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n      )\n    },\n    serializedName: \"billingAccountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingProfileName: OperationURLParameter = {\n  parameterPath: \"billingProfileName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"([A-Za-z0-9]+(-[A-Za-z0-9]+)+)\")\n    },\n    serializedName: \"billingProfileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const invoiceName: OperationURLParameter = {\n  parameterPath: \"invoiceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"[A-Za-z0-9]+\")\n    },\n    serializedName: \"invoiceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const scheduledAction: OperationParameter = {\n  parameterPath: \"scheduledAction\",\n  mapper: ScheduledActionMapper\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const checkNameAvailabilityRequest: OperationParameter = {\n  parameterPath: \"checkNameAvailabilityRequest\",\n  mapper: CheckNameAvailabilityRequestMapper\n};\n\nexport const orderby: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderby\"],\n  mapper: {\n    serializedName: \"$orderby\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingScope: OperationURLParameter = {\n  parameterPath: \"billingScope\",\n  mapper: {\n    serializedName: \"billingScope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const grainParameter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"grainParameter\"],\n  mapper: {\n    serializedName: \"grainParameter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const savingsPlanOrderId: OperationURLParameter = {\n  parameterPath: \"savingsPlanOrderId\",\n  mapper: {\n    serializedName: \"savingsPlanOrderId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const savingsPlanId: OperationURLParameter = {\n  parameterPath: \"savingsPlanId\",\n  mapper: {\n    serializedName: \"savingsPlanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  CostManagementOperation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available cost management REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<CostManagementOperation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CostManagementOperation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<CostManagementOperation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available cost management REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Views } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  View,\n  ViewsListNextOptionalParams,\n  ViewsListOptionalParams,\n  ViewsListResponse,\n  ViewsListByScopeNextOptionalParams,\n  ViewsListByScopeOptionalParams,\n  ViewsListByScopeResponse,\n  ViewsGetOptionalParams,\n  ViewsGetResponse,\n  ViewsCreateOrUpdateOptionalParams,\n  ViewsCreateOrUpdateResponse,\n  ViewsDeleteOptionalParams,\n  ViewsGetByScopeOptionalParams,\n  ViewsGetByScopeResponse,\n  ViewsCreateOrUpdateByScopeOptionalParams,\n  ViewsCreateOrUpdateByScopeResponse,\n  ViewsDeleteByScopeOptionalParams,\n  ViewsListNextResponse,\n  ViewsListByScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Views operations. */\nexport class ViewsImpl implements Views {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Views class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all views by tenant and object.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ViewsListOptionalParams\n  ): PagedAsyncIterableIterator<View> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ViewsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<View[]> {\n    let result: ViewsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ViewsListOptionalParams\n  ): AsyncIterableIterator<View> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all views at the given scope.\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param options The options parameters.\n   */\n  public listByScope(\n    scope: string,\n    options?: ViewsListByScopeOptionalParams\n  ): PagedAsyncIterableIterator<View> {\n    const iter = this.listByScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listByScopePagingPage(\n    scope: string,\n    options?: ViewsListByScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<View[]> {\n    let result: ViewsListByScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByScopePagingAll(\n    scope: string,\n    options?: ViewsListByScopeOptionalParams\n  ): AsyncIterableIterator<View> {\n    for await (const page of this.listByScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all views by tenant and object.\n   * @param options The options parameters.\n   */\n  private _list(options?: ViewsListOptionalParams): Promise<ViewsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Lists all views at the given scope.\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param options The options parameters.\n   */\n  private _listByScope(\n    scope: string,\n    options?: ViewsListByScopeOptionalParams\n  ): Promise<ViewsListByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets the view by view name.\n   * @param viewName View name\n   * @param options The options parameters.\n   */\n  get(\n    viewName: string,\n    options?: ViewsGetOptionalParams\n  ): Promise<ViewsGetResponse> {\n    return this.client.sendOperationRequest(\n      { viewName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update a view. Update operation requires latest eTag to be set in the\n   * request. You may obtain the latest eTag by performing a get operation. Create operation does not\n   * require eTag.\n   * @param viewName View name\n   * @param parameters Parameters supplied to the CreateOrUpdate View operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    viewName: string,\n    parameters: View,\n    options?: ViewsCreateOrUpdateOptionalParams\n  ): Promise<ViewsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { viewName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a view.\n   * @param viewName View name\n   * @param options The options parameters.\n   */\n  delete(viewName: string, options?: ViewsDeleteOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest(\n      { viewName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the view for the defined scope by view name.\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param viewName View name\n   * @param options The options parameters.\n   */\n  getByScope(\n    scope: string,\n    viewName: string,\n    options?: ViewsGetByScopeOptionalParams\n  ): Promise<ViewsGetByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, viewName, options },\n      getByScopeOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update a view. Update operation requires latest eTag to be set in the\n   * request. You may obtain the latest eTag by performing a get operation. Create operation does not\n   * require eTag.\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param viewName View name\n   * @param parameters Parameters supplied to the CreateOrUpdate View operation.\n   * @param options The options parameters.\n   */\n  createOrUpdateByScope(\n    scope: string,\n    viewName: string,\n    parameters: View,\n    options?: ViewsCreateOrUpdateByScopeOptionalParams\n  ): Promise<ViewsCreateOrUpdateByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, viewName, parameters, options },\n      createOrUpdateByScopeOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a view.\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param viewName View name\n   * @param options The options parameters.\n   */\n  deleteByScope(\n    scope: string,\n    viewName: string,\n    options?: ViewsDeleteByScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, viewName, options },\n      deleteByScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ViewsListNextOptionalParams\n  ): Promise<ViewsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByScopeNext\n   * @param scope The scope associated with view operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for\n   *              Management Group scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope.\n   * @param nextLink The nextLink from the previous successful call to the ListByScope method.\n   * @param options The options parameters.\n   */\n  private _listByScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: ViewsListByScopeNextOptionalParams\n  ): Promise<ViewsListByScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listByScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/views\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/views\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.View\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.viewName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.View\n    },\n    201: {\n      bodyMapper: Mappers.View\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.viewName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.viewName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.View\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.viewName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.View\n    },\n    201: {\n      bodyMapper: Mappers.View\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.viewName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/views/{viewName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.viewName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Alerts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  AlertsListOptionalParams,\n  AlertsListResponse,\n  AlertsGetOptionalParams,\n  AlertsGetResponse,\n  DismissAlertPayload,\n  AlertsDismissOptionalParams,\n  AlertsDismissResponse,\n  ExternalCloudProviderType,\n  AlertsListExternalOptionalParams,\n  AlertsListExternalResponse\n} from \"../models\";\n\n/** Class containing Alerts operations. */\nexport class AlertsImpl implements Alerts {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Alerts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the alerts for scope defined.\n   * @param scope The scope associated with alerts operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param options The options parameters.\n   */\n  list(\n    scope: string,\n    options?: AlertsListOptionalParams\n  ): Promise<AlertsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the alert for the scope by alert ID.\n   * @param scope The scope associated with alerts operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param alertId Alert ID\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    alertId: string,\n    options?: AlertsGetOptionalParams\n  ): Promise<AlertsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, alertId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Dismisses the specified alert\n   * @param scope The scope associated with alerts operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param alertId Alert ID\n   * @param parameters Parameters supplied to the Dismiss Alert operation.\n   * @param options The options parameters.\n   */\n  dismiss(\n    scope: string,\n    alertId: string,\n    parameters: DismissAlertPayload,\n    options?: AlertsDismissOptionalParams\n  ): Promise<AlertsDismissResponse> {\n    return this.client.sendOperationRequest(\n      { scope, alertId, parameters, options },\n      dismissOperationSpec\n    );\n  }\n\n  /**\n   * Lists the Alerts for external cloud provider type defined.\n   * @param externalCloudProviderType The external cloud provider type associated with dimension/query\n   *                                  operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts'\n   *                                  for consolidated account.\n   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or\n   *                                '{externalBillingAccountId}' for consolidated account used with dimension/query operations.\n   * @param options The options parameters.\n   */\n  listExternal(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    options?: AlertsListExternalOptionalParams\n  ): Promise<AlertsListExternalResponse> {\n    return this.client.sendOperationRequest(\n      { externalCloudProviderType, externalCloudProviderId, options },\n      listExternalOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/alerts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AlertsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/alerts/{alertId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Alert\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.alertId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst dismissOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/alerts/{alertId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Alert\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.alertId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listExternalOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AlertsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.externalCloudProviderType,\n    Parameters.externalCloudProviderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Forecast } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  ForecastDefinition,\n  ForecastUsageOptionalParams,\n  ForecastUsageResponse,\n  ExternalCloudProviderType,\n  ForecastExternalCloudProviderUsageOptionalParams,\n  ForecastExternalCloudProviderUsageResponse\n} from \"../models\";\n\n/** Class containing Forecast operations. */\nexport class ForecastImpl implements Forecast {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Forecast class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the forecast charges for scope defined.\n   * @param scope The scope associated with forecast operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param parameters Parameters supplied to the CreateOrUpdate Forecast Config operation.\n   * @param options The options parameters.\n   */\n  usage(\n    scope: string,\n    parameters: ForecastDefinition,\n    options?: ForecastUsageOptionalParams\n  ): Promise<ForecastUsageResponse> {\n    return this.client.sendOperationRequest(\n      { scope, parameters, options },\n      usageOperationSpec\n    );\n  }\n\n  /**\n   * Lists the forecast charges for external cloud provider type defined.\n   * @param externalCloudProviderType The external cloud provider type associated with dimension/query\n   *                                  operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts'\n   *                                  for consolidated account.\n   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or\n   *                                '{externalBillingAccountId}' for consolidated account used with dimension/query operations.\n   * @param parameters Parameters supplied to the CreateOrUpdate Forecast Config operation.\n   * @param options The options parameters.\n   */\n  externalCloudProviderUsage(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    parameters: ForecastDefinition,\n    options?: ForecastExternalCloudProviderUsageOptionalParams\n  ): Promise<ForecastExternalCloudProviderUsageResponse> {\n    return this.client.sendOperationRequest(\n      {\n        externalCloudProviderType,\n        externalCloudProviderId,\n        parameters,\n        options\n      },\n      externalCloudProviderUsageOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst usageOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/forecast\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ForecastResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst externalCloudProviderUsageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ForecastResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.externalCloudProviderType,\n    Parameters.externalCloudProviderId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Dimensions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  Dimension,\n  DimensionsListOptionalParams,\n  DimensionsListResponse,\n  ExternalCloudProviderType,\n  DimensionsByExternalCloudProviderTypeOptionalParams,\n  DimensionsByExternalCloudProviderTypeResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Dimensions operations. */\nexport class DimensionsImpl implements Dimensions {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Dimensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the dimensions by the defined scope.\n   * @param scope The scope associated with dimension operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: DimensionsListOptionalParams\n  ): PagedAsyncIterableIterator<Dimension> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: DimensionsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Dimension[]> {\n    let result: DimensionsListResponse;\n    result = await this._list(scope, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: DimensionsListOptionalParams\n  ): AsyncIterableIterator<Dimension> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the dimensions by the external cloud provider type.\n   * @param externalCloudProviderType The external cloud provider type associated with dimension/query\n   *                                  operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts'\n   *                                  for consolidated account.\n   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or\n   *                                '{externalBillingAccountId}' for consolidated account used with dimension/query operations.\n   * @param options The options parameters.\n   */\n  public listByExternalCloudProviderType(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    options?: DimensionsByExternalCloudProviderTypeOptionalParams\n  ): PagedAsyncIterableIterator<Dimension> {\n    const iter = this.byExternalCloudProviderTypePagingAll(\n      externalCloudProviderType,\n      externalCloudProviderId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.byExternalCloudProviderTypePagingPage(\n          externalCloudProviderType,\n          externalCloudProviderId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *byExternalCloudProviderTypePagingPage(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    options?: DimensionsByExternalCloudProviderTypeOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Dimension[]> {\n    let result: DimensionsByExternalCloudProviderTypeResponse;\n    result = await this._byExternalCloudProviderType(\n      externalCloudProviderType,\n      externalCloudProviderId,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *byExternalCloudProviderTypePagingAll(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    options?: DimensionsByExternalCloudProviderTypeOptionalParams\n  ): AsyncIterableIterator<Dimension> {\n    for await (const page of this.byExternalCloudProviderTypePagingPage(\n      externalCloudProviderType,\n      externalCloudProviderId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the dimensions by the defined scope.\n   * @param scope The scope associated with dimension operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: DimensionsListOptionalParams\n  ): Promise<DimensionsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Lists the dimensions by the external cloud provider type.\n   * @param externalCloudProviderType The external cloud provider type associated with dimension/query\n   *                                  operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts'\n   *                                  for consolidated account.\n   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or\n   *                                '{externalBillingAccountId}' for consolidated account used with dimension/query operations.\n   * @param options The options parameters.\n   */\n  private _byExternalCloudProviderType(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    options?: DimensionsByExternalCloudProviderTypeOptionalParams\n  ): Promise<DimensionsByExternalCloudProviderTypeResponse> {\n    return this.client.sendOperationRequest(\n      { externalCloudProviderType, externalCloudProviderId, options },\n      byExternalCloudProviderTypeOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/dimensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DimensionsListResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand,\n    Parameters.skiptoken,\n    Parameters.top\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst byExternalCloudProviderTypeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DimensionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand,\n    Parameters.skiptoken,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.externalCloudProviderType,\n    Parameters.externalCloudProviderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Query } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  QueryDefinition,\n  QueryUsageOptionalParams,\n  QueryUsageResponse,\n  ExternalCloudProviderType,\n  QueryUsageByExternalCloudProviderTypeOptionalParams,\n  QueryUsageByExternalCloudProviderTypeResponse\n} from \"../models\";\n\n/** Class containing Query operations. */\nexport class QueryImpl implements Query {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Query class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Query the usage data for scope defined.\n   * @param scope The scope associated with query and export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param parameters Parameters supplied to the CreateOrUpdate Query Config operation.\n   * @param options The options parameters.\n   */\n  usage(\n    scope: string,\n    parameters: QueryDefinition,\n    options?: QueryUsageOptionalParams\n  ): Promise<QueryUsageResponse> {\n    return this.client.sendOperationRequest(\n      { scope, parameters, options },\n      usageOperationSpec\n    );\n  }\n\n  /**\n   * Query the usage data for external cloud provider type defined.\n   * @param externalCloudProviderType The external cloud provider type associated with dimension/query\n   *                                  operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts'\n   *                                  for consolidated account.\n   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or\n   *                                '{externalBillingAccountId}' for consolidated account used with dimension/query operations.\n   * @param parameters Parameters supplied to the CreateOrUpdate Query Config operation.\n   * @param options The options parameters.\n   */\n  usageByExternalCloudProviderType(\n    externalCloudProviderType: ExternalCloudProviderType,\n    externalCloudProviderId: string,\n    parameters: QueryDefinition,\n    options?: QueryUsageByExternalCloudProviderTypeOptionalParams\n  ): Promise<QueryUsageByExternalCloudProviderTypeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        externalCloudProviderType,\n        externalCloudProviderId,\n        parameters,\n        options\n      },\n      usageByExternalCloudProviderTypeOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst usageOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst usageByExternalCloudProviderTypeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.externalCloudProviderType,\n    Parameters.externalCloudProviderId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateReservationDetailsReport } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GenerateReservationDetailsReportByBillingAccountIdOptionalParams,\n  GenerateReservationDetailsReportByBillingAccountIdResponse,\n  GenerateReservationDetailsReportByBillingProfileIdOptionalParams,\n  GenerateReservationDetailsReportByBillingProfileIdResponse\n} from \"../models\";\n\n/** Class containing GenerateReservationDetailsReport operations. */\nexport class GenerateReservationDetailsReportImpl\n  implements GenerateReservationDetailsReport {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateReservationDetailsReport class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Generates the reservations details report for provided date range asynchronously based on enrollment\n   * id. The Reservation usage details can be viewed only by certain enterprise roles. For more details\n   * on the roles see,\n   * https://docs.microsoft.com/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role\n   * @param billingAccountId Enrollment ID (Legacy BillingAccount ID)\n   * @param startDate Start Date\n   * @param endDate End Date\n   * @param options The options parameters.\n   */\n  async beginByBillingAccountId(\n    billingAccountId: string,\n    startDate: string,\n    endDate: string,\n    options?: GenerateReservationDetailsReportByBillingAccountIdOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<\n        GenerateReservationDetailsReportByBillingAccountIdResponse\n      >,\n      GenerateReservationDetailsReportByBillingAccountIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateReservationDetailsReportByBillingAccountIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { billingAccountId, startDate, endDate, options },\n      spec: byBillingAccountIdOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateReservationDetailsReportByBillingAccountIdResponse,\n      OperationState<GenerateReservationDetailsReportByBillingAccountIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generates the reservations details report for provided date range asynchronously based on enrollment\n   * id. The Reservation usage details can be viewed only by certain enterprise roles. For more details\n   * on the roles see,\n   * https://docs.microsoft.com/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role\n   * @param billingAccountId Enrollment ID (Legacy BillingAccount ID)\n   * @param startDate Start Date\n   * @param endDate End Date\n   * @param options The options parameters.\n   */\n  async beginByBillingAccountIdAndWait(\n    billingAccountId: string,\n    startDate: string,\n    endDate: string,\n    options?: GenerateReservationDetailsReportByBillingAccountIdOptionalParams\n  ): Promise<GenerateReservationDetailsReportByBillingAccountIdResponse> {\n    const poller = await this.beginByBillingAccountId(\n      billingAccountId,\n      startDate,\n      endDate,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Generates the reservations details report for provided date range asynchronously by billing profile.\n   * The Reservation usage details can be viewed by only certain enterprise roles by default. For more\n   * details on the roles see,\n   * https://docs.microsoft.com/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param startDate Start Date\n   * @param endDate End Date\n   * @param options The options parameters.\n   */\n  async beginByBillingProfileId(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: GenerateReservationDetailsReportByBillingProfileIdOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<\n        GenerateReservationDetailsReportByBillingProfileIdResponse\n      >,\n      GenerateReservationDetailsReportByBillingProfileIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateReservationDetailsReportByBillingProfileIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { billingAccountId, billingProfileId, startDate, endDate, options },\n      spec: byBillingProfileIdOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateReservationDetailsReportByBillingProfileIdResponse,\n      OperationState<GenerateReservationDetailsReportByBillingProfileIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generates the reservations details report for provided date range asynchronously by billing profile.\n   * The Reservation usage details can be viewed by only certain enterprise roles by default. For more\n   * details on the roles see,\n   * https://docs.microsoft.com/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param startDate Start Date\n   * @param endDate End Date\n   * @param options The options parameters.\n   */\n  async beginByBillingProfileIdAndWait(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: GenerateReservationDetailsReportByBillingProfileIdOptionalParams\n  ): Promise<GenerateReservationDetailsReportByBillingProfileIdResponse> {\n    const poller = await this.beginByBillingProfileId(\n      billingAccountId,\n      billingProfileId,\n      startDate,\n      endDate,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst byBillingAccountIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    201: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    202: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    204: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startDate,\n    Parameters.endDate\n  ],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst byBillingProfileIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    201: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    202: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    204: {\n      bodyMapper: Mappers.OperationStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startDate,\n    Parameters.endDate\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Exports } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  ExportsListOptionalParams,\n  ExportsListResponse,\n  ExportsGetOptionalParams,\n  ExportsGetResponse,\n  Export,\n  ExportsCreateOrUpdateOptionalParams,\n  ExportsCreateOrUpdateResponse,\n  ExportsDeleteOptionalParams,\n  ExportsExecuteOptionalParams,\n  ExportsGetExecutionHistoryOptionalParams,\n  ExportsGetExecutionHistoryResponse\n} from \"../models\";\n\n/** Class containing Exports operations. */\nexport class ExportsImpl implements Exports {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Exports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to list all exports at the given scope.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param options The options parameters.\n   */\n  list(\n    scope: string,\n    options?: ExportsListOptionalParams\n  ): Promise<ExportsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get the export for the defined scope by export name.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    exportName: string,\n    options?: ExportsGetOptionalParams\n  ): Promise<ExportsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update a export. Update operation requires latest eTag to be set in the\n   * request. You may obtain the latest eTag by performing a get operation. Create operation does not\n   * require eTag.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param parameters Parameters supplied to the CreateOrUpdate Export operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    scope: string,\n    exportName: string,\n    parameters: Export,\n    options?: ExportsCreateOrUpdateOptionalParams\n  ): Promise<ExportsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a export.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    exportName: string,\n    options?: ExportsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * The operation to run an export.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  execute(\n    scope: string,\n    exportName: string,\n    options?: ExportsExecuteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      executeOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get the run history of an export for the defined scope and export name.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  getExecutionHistory(\n    scope: string,\n    exportName: string,\n    options?: ExportsGetExecutionHistoryOptionalParams\n  ): Promise<ExportsGetExecutionHistoryResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      getExecutionHistoryOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExportListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Export\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Export\n    },\n    201: {\n      bodyMapper: Mappers.Export\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst executeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getExecutionHistoryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/runHistory\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExportExecutionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateCostDetailsReport } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GenerateCostDetailsReportRequestDefinition,\n  GenerateCostDetailsReportCreateOperationOptionalParams,\n  GenerateCostDetailsReportCreateOperationResponse,\n  GenerateCostDetailsReportGetOperationResultsOptionalParams,\n  GenerateCostDetailsReportGetOperationResultsResponse\n} from \"../models\";\n\n/** Class containing GenerateCostDetailsReport operations. */\nexport class GenerateCostDetailsReportImpl\n  implements GenerateCostDetailsReport {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateCostDetailsReport class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * This API is the replacement for all previously release Usage Details APIs. Request to generate a\n   * cost details report for the provided date range, billing period (Only enterprise customers) or\n   * Invoice Id asynchronously at a certain scope. The initial call to request a report will return a 202\n   * with a 'Location' and 'Retry-After' header. The 'Location' header will provide the endpoint to poll\n   * to get the result of the report generation. The 'Retry-After' provides the duration to wait before\n   * polling for the generated report. A call to poll the report operation will provide a 202 response\n   * with a 'Location' header if the operation is still in progress. Once the report generation operation\n   * completes, the polling endpoint will provide a 200 response along with details on the report blob(s)\n   * that are available for download. The details on the file(s) available for download will be available\n   * in the polling response body. To Understand cost details (formerly known as usage details) fields\n   * found in files ,see\n   * https://learn.microsoft.com/azure/cost-management-billing/automate/understand-usage-details-fields\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create cost details operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperation(\n    scope: string,\n    parameters: GenerateCostDetailsReportRequestDefinition,\n    options?: GenerateCostDetailsReportCreateOperationOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GenerateCostDetailsReportCreateOperationResponse>,\n      GenerateCostDetailsReportCreateOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateCostDetailsReportCreateOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, parameters, options },\n      spec: createOperationOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateCostDetailsReportCreateOperationResponse,\n      OperationState<GenerateCostDetailsReportCreateOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This API is the replacement for all previously release Usage Details APIs. Request to generate a\n   * cost details report for the provided date range, billing period (Only enterprise customers) or\n   * Invoice Id asynchronously at a certain scope. The initial call to request a report will return a 202\n   * with a 'Location' and 'Retry-After' header. The 'Location' header will provide the endpoint to poll\n   * to get the result of the report generation. The 'Retry-After' provides the duration to wait before\n   * polling for the generated report. A call to poll the report operation will provide a 202 response\n   * with a 'Location' header if the operation is still in progress. Once the report generation operation\n   * completes, the polling endpoint will provide a 200 response along with details on the report blob(s)\n   * that are available for download. The details on the file(s) available for download will be available\n   * in the polling response body. To Understand cost details (formerly known as usage details) fields\n   * found in files ,see\n   * https://learn.microsoft.com/azure/cost-management-billing/automate/understand-usage-details-fields\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create cost details operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperationAndWait(\n    scope: string,\n    parameters: GenerateCostDetailsReportRequestDefinition,\n    options?: GenerateCostDetailsReportCreateOperationOptionalParams\n  ): Promise<GenerateCostDetailsReportCreateOperationResponse> {\n    const poller = await this.beginCreateOperation(scope, parameters, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the result of the specified operation. This link is provided in the CostDetails creation request\n   * response Location header.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param operationId The target operation Id.\n   * @param options The options parameters.\n   */\n  async beginGetOperationResults(\n    scope: string,\n    operationId: string,\n    options?: GenerateCostDetailsReportGetOperationResultsOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GenerateCostDetailsReportGetOperationResultsResponse>,\n      GenerateCostDetailsReportGetOperationResultsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateCostDetailsReportGetOperationResultsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, operationId, options },\n      spec: getOperationResultsOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateCostDetailsReportGetOperationResultsResponse,\n      OperationState<GenerateCostDetailsReportGetOperationResultsResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Get the result of the specified operation. This link is provided in the CostDetails creation request\n   * response Location header.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param operationId The target operation Id.\n   * @param options The options parameters.\n   */\n  async beginGetOperationResultsAndWait(\n    scope: string,\n    operationId: string,\n    options?: GenerateCostDetailsReportGetOperationResultsOptionalParams\n  ): Promise<GenerateCostDetailsReportGetOperationResultsResponse> {\n    const poller = await this.beginGetOperationResults(\n      scope,\n      operationId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/generateCostDetailsReport\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    201: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    202: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    204: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    default: {\n      bodyMapper: Mappers.GenerateCostDetailsReportErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationResultsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/costDetailsOperationResults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    201: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    202: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    204: {\n      bodyMapper: Mappers.CostDetailsOperationResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateDetailedCostReport } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GenerateDetailedCostReportDefinition,\n  GenerateDetailedCostReportCreateOperationOptionalParams,\n  GenerateDetailedCostReportCreateOperationResponse\n} from \"../models\";\n\n/** Class containing GenerateDetailedCostReport operations. */\nexport class GenerateDetailedCostReportImpl\n  implements GenerateDetailedCostReport {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateDetailedCostReport class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Generates the detailed cost report for provided date range, billing period(only enterprise\n   * customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header\n   * Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation\n   * will provide the status and if the operation is completed the blob file where generated detailed\n   * cost report is being stored.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create detailed cost report operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperation(\n    scope: string,\n    parameters: GenerateDetailedCostReportDefinition,\n    options?: GenerateDetailedCostReportCreateOperationOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GenerateDetailedCostReportCreateOperationResponse>,\n      GenerateDetailedCostReportCreateOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateDetailedCostReportCreateOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, parameters, options },\n      spec: createOperationOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateDetailedCostReportCreateOperationResponse,\n      OperationState<GenerateDetailedCostReportCreateOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generates the detailed cost report for provided date range, billing period(only enterprise\n   * customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header\n   * Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation\n   * will provide the status and if the operation is completed the blob file where generated detailed\n   * cost report is being stored.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create detailed cost report operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperationAndWait(\n    scope: string,\n    parameters: GenerateDetailedCostReportDefinition,\n    options?: GenerateDetailedCostReportCreateOperationOptionalParams\n  ): Promise<GenerateDetailedCostReportCreateOperationResponse> {\n    const poller = await this.beginCreateOperation(scope, parameters, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/generateDetailedCostReport\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.GenerateDetailedCostReportErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateDetailedCostReportOperationResults } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GenerateDetailedCostReportOperationResultsGetOptionalParams,\n  GenerateDetailedCostReportOperationResultsGetResponse\n} from \"../models\";\n\n/** Class containing GenerateDetailedCostReportOperationResults operations. */\nexport class GenerateDetailedCostReportOperationResultsImpl\n  implements GenerateDetailedCostReportOperationResults {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateDetailedCostReportOperationResults class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the result of the specified operation. The link with this operationId is provided as a response\n   * header of the initial request.\n   * @param operationId The target operation Id.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param options The options parameters.\n   */\n  async beginGet(\n    operationId: string,\n    scope: string,\n    options?: GenerateDetailedCostReportOperationResultsGetOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GenerateDetailedCostReportOperationResultsGetResponse>,\n      GenerateDetailedCostReportOperationResultsGetResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateDetailedCostReportOperationResultsGetResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { operationId, scope, options },\n      spec: getOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateDetailedCostReportOperationResultsGetResponse,\n      OperationState<GenerateDetailedCostReportOperationResultsGetResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets the result of the specified operation. The link with this operationId is provided as a response\n   * header of the initial request.\n   * @param operationId The target operation Id.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param options The options parameters.\n   */\n  async beginGetAndWait(\n    operationId: string,\n    scope: string,\n    options?: GenerateDetailedCostReportOperationResultsGetOptionalParams\n  ): Promise<GenerateDetailedCostReportOperationResultsGetResponse> {\n    const poller = await this.beginGet(operationId, scope, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/operationResults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateDetailedCostReportOperationStatus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  GenerateDetailedCostReportOperationStatusGetOptionalParams,\n  GenerateDetailedCostReportOperationStatusGetResponse\n} from \"../models\";\n\n/** Class containing GenerateDetailedCostReportOperationStatus operations. */\nexport class GenerateDetailedCostReportOperationStatusImpl\n  implements GenerateDetailedCostReportOperationStatus {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateDetailedCostReportOperationStatus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the status of the specified operation. This link is provided in the GenerateDetailedCostReport\n   * creation request response header.\n   * @param operationId The target operation Id.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param options The options parameters.\n   */\n  get(\n    operationId: string,\n    scope: string,\n    options?: GenerateDetailedCostReportOperationStatusGetOptionalParams\n  ): Promise<GenerateDetailedCostReportOperationStatusGetResponse> {\n    return this.client.sendOperationRequest(\n      { operationId, scope, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/operationStatus/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationStatuses\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PriceSheet } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  PriceSheetDownloadOptionalParams,\n  PriceSheetDownloadResponse,\n  PriceSheetDownloadByBillingProfileOptionalParams,\n  PriceSheetDownloadByBillingProfileResponse\n} from \"../models\";\n\n/** Class containing PriceSheet operations. */\nexport class PriceSheetImpl implements PriceSheet {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class PriceSheet class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a URL to download the pricesheet for an invoice. The operation is supported for billing\n   * accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.\n   * @param billingAccountName The ID that uniquely identifies a billing account.\n   * @param billingProfileName The ID that uniquely identifies a billing profile.\n   * @param invoiceName The ID that uniquely identifies an invoice.\n   * @param options The options parameters.\n   */\n  async beginDownload(\n    billingAccountName: string,\n    billingProfileName: string,\n    invoiceName: string,\n    options?: PriceSheetDownloadOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<PriceSheetDownloadResponse>,\n      PriceSheetDownloadResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PriceSheetDownloadResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { billingAccountName, billingProfileName, invoiceName, options },\n      spec: downloadOperationSpec\n    });\n    const poller = await createHttpPoller<\n      PriceSheetDownloadResponse,\n      OperationState<PriceSheetDownloadResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets a URL to download the pricesheet for an invoice. The operation is supported for billing\n   * accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.\n   * @param billingAccountName The ID that uniquely identifies a billing account.\n   * @param billingProfileName The ID that uniquely identifies a billing profile.\n   * @param invoiceName The ID that uniquely identifies an invoice.\n   * @param options The options parameters.\n   */\n  async beginDownloadAndWait(\n    billingAccountName: string,\n    billingProfileName: string,\n    invoiceName: string,\n    options?: PriceSheetDownloadOptionalParams\n  ): Promise<PriceSheetDownloadResponse> {\n    const poller = await this.beginDownload(\n      billingAccountName,\n      billingProfileName,\n      invoiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a URL to download the current month's pricesheet for a billing profile. The operation is\n   * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer\n   * Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview\n   * version will be updated from a single csv file to a Zip file containing multiple csv files, each\n   * with max 200k records.\n   * @param billingAccountName The ID that uniquely identifies a billing account.\n   * @param billingProfileName The ID that uniquely identifies a billing profile.\n   * @param options The options parameters.\n   */\n  async beginDownloadByBillingProfile(\n    billingAccountName: string,\n    billingProfileName: string,\n    options?: PriceSheetDownloadByBillingProfileOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<PriceSheetDownloadByBillingProfileResponse>,\n      PriceSheetDownloadByBillingProfileResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PriceSheetDownloadByBillingProfileResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { billingAccountName, billingProfileName, options },\n      spec: downloadByBillingProfileOperationSpec\n    });\n    const poller = await createHttpPoller<\n      PriceSheetDownloadByBillingProfileResponse,\n      OperationState<PriceSheetDownloadByBillingProfileResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets a URL to download the current month's pricesheet for a billing profile. The operation is\n   * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer\n   * Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview\n   * version will be updated from a single csv file to a Zip file containing multiple csv files, each\n   * with max 200k records.\n   * @param billingAccountName The ID that uniquely identifies a billing account.\n   * @param billingProfileName The ID that uniquely identifies a billing profile.\n   * @param options The options parameters.\n   */\n  async beginDownloadByBillingProfileAndWait(\n    billingAccountName: string,\n    billingProfileName: string,\n    options?: PriceSheetDownloadByBillingProfileOptionalParams\n  ): Promise<PriceSheetDownloadByBillingProfileResponse> {\n    const poller = await this.beginDownloadByBillingProfile(\n      billingAccountName,\n      billingProfileName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst downloadOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    201: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    202: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    204: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountName,\n    Parameters.billingProfileName,\n    Parameters.invoiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst downloadByBillingProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    201: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    202: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    204: {\n      bodyMapper: Mappers.DownloadURL\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountName,\n    Parameters.billingProfileName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ScheduledActions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  ScheduledAction,\n  ScheduledActionsListNextOptionalParams,\n  ScheduledActionsListOptionalParams,\n  ScheduledActionsListResponse,\n  ScheduledActionsListByScopeNextOptionalParams,\n  ScheduledActionsListByScopeOptionalParams,\n  ScheduledActionsListByScopeResponse,\n  ScheduledActionsCreateOrUpdateOptionalParams,\n  ScheduledActionsCreateOrUpdateResponse,\n  ScheduledActionsGetOptionalParams,\n  ScheduledActionsGetResponse,\n  ScheduledActionsDeleteOptionalParams,\n  ScheduledActionsCreateOrUpdateByScopeOptionalParams,\n  ScheduledActionsCreateOrUpdateByScopeResponse,\n  ScheduledActionsGetByScopeOptionalParams,\n  ScheduledActionsGetByScopeResponse,\n  ScheduledActionsDeleteByScopeOptionalParams,\n  ScheduledActionsRunOptionalParams,\n  ScheduledActionsRunByScopeOptionalParams,\n  CheckNameAvailabilityRequest,\n  ScheduledActionsCheckNameAvailabilityOptionalParams,\n  ScheduledActionsCheckNameAvailabilityResponse,\n  ScheduledActionsCheckNameAvailabilityByScopeOptionalParams,\n  ScheduledActionsCheckNameAvailabilityByScopeResponse,\n  ScheduledActionsListNextResponse,\n  ScheduledActionsListByScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ScheduledActions operations. */\nexport class ScheduledActionsImpl implements ScheduledActions {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class ScheduledActions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all private scheduled actions.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ScheduledActionsListOptionalParams\n  ): PagedAsyncIterableIterator<ScheduledAction> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ScheduledActionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ScheduledAction[]> {\n    let result: ScheduledActionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ScheduledActionsListOptionalParams\n  ): AsyncIterableIterator<ScheduledAction> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all shared scheduled actions within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param options The options parameters.\n   */\n  public listByScope(\n    scope: string,\n    options?: ScheduledActionsListByScopeOptionalParams\n  ): PagedAsyncIterableIterator<ScheduledAction> {\n    const iter = this.listByScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listByScopePagingPage(\n    scope: string,\n    options?: ScheduledActionsListByScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ScheduledAction[]> {\n    let result: ScheduledActionsListByScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByScopePagingAll(\n    scope: string,\n    options?: ScheduledActionsListByScopeOptionalParams\n  ): AsyncIterableIterator<ScheduledAction> {\n    for await (const page of this.listByScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all private scheduled actions.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ScheduledActionsListOptionalParams\n  ): Promise<ScheduledActionsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * List all shared scheduled actions within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param options The options parameters.\n   */\n  private _listByScope(\n    scope: string,\n    options?: ScheduledActionsListByScopeOptionalParams\n  ): Promise<ScheduledActionsListByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a private scheduled action.\n   * @param name Scheduled action name.\n   * @param scheduledAction Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    name: string,\n    scheduledAction: ScheduledAction,\n    options?: ScheduledActionsCreateOrUpdateOptionalParams\n  ): Promise<ScheduledActionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { name, scheduledAction, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get the private scheduled action by name.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  get(\n    name: string,\n    options?: ScheduledActionsGetOptionalParams\n  ): Promise<ScheduledActionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a private scheduled action.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  delete(\n    name: string,\n    options?: ScheduledActionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a shared scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param scheduledAction Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  createOrUpdateByScope(\n    scope: string,\n    name: string,\n    scheduledAction: ScheduledAction,\n    options?: ScheduledActionsCreateOrUpdateByScopeOptionalParams\n  ): Promise<ScheduledActionsCreateOrUpdateByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, name, scheduledAction, options },\n      createOrUpdateByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get the shared scheduled action from the given scope by name.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  getByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsGetByScopeOptionalParams\n  ): Promise<ScheduledActionsGetByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, name, options },\n      getByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Delete a scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  deleteByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsDeleteByScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, name, options },\n      deleteByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Processes a private scheduled action.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  run(\n    name: string,\n    options?: ScheduledActionsRunOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      runOperationSpec\n    );\n  }\n\n  /**\n   * Runs a shared scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  runByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsRunByScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, name, options },\n      runByScopeOperationSpec\n    );\n  }\n\n  /**\n   * Checks availability and correctness of the name for a scheduled action.\n   * @param checkNameAvailabilityRequest Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    checkNameAvailabilityRequest: CheckNameAvailabilityRequest,\n    options?: ScheduledActionsCheckNameAvailabilityOptionalParams\n  ): Promise<ScheduledActionsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { checkNameAvailabilityRequest, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Checks availability and correctness of the name for a scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param checkNameAvailabilityRequest Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  checkNameAvailabilityByScope(\n    scope: string,\n    checkNameAvailabilityRequest: CheckNameAvailabilityRequest,\n    options?: ScheduledActionsCheckNameAvailabilityByScopeOptionalParams\n  ): Promise<ScheduledActionsCheckNameAvailabilityByScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, checkNameAvailabilityRequest, options },\n      checkNameAvailabilityByScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ScheduledActionsListNextOptionalParams\n  ): Promise<ScheduledActionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByScopeNext\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param nextLink The nextLink from the previous successful call to the ListByScope method.\n   * @param options The options parameters.\n   */\n  private _listByScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: ScheduledActionsListByScopeNextOptionalParams\n  ): Promise<ScheduledActionsListByScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listByScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/scheduledActions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledActionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/scheduledActions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledActionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    201: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  requestBody: Parameters.scheduledAction,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    201: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  requestBody: Parameters.scheduledAction,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.name],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledAction\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst runOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/scheduledActions/{name}/execute\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst runByScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}/execute\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CostManagement/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  requestBody: Parameters.checkNameAvailabilityRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst checkNameAvailabilityByScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  requestBody: Parameters.checkNameAvailabilityRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledActionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduledActionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseWithNestedDetails\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BenefitRecommendations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  BenefitRecommendationModel,\n  BenefitRecommendationsListNextOptionalParams,\n  BenefitRecommendationsListOptionalParams,\n  BenefitRecommendationsListResponse,\n  BenefitRecommendationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BenefitRecommendations operations. */\nexport class BenefitRecommendationsImpl implements BenefitRecommendations {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class BenefitRecommendations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List of recommendations for purchasing savings plan.\n   * @param billingScope The scope associated with benefit recommendation operations. This includes\n   *                     '/subscriptions/{subscriptionId}/' for subscription scope,\n   *                     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *                     /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for enterprise agreement scope, and\n   *                     '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *                     for billing profile scope\n   * @param options The options parameters.\n   */\n  public list(\n    billingScope: string,\n    options?: BenefitRecommendationsListOptionalParams\n  ): PagedAsyncIterableIterator<BenefitRecommendationModel> {\n    const iter = this.listPagingAll(billingScope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(billingScope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    billingScope: string,\n    options?: BenefitRecommendationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitRecommendationModel[]> {\n    let result: BenefitRecommendationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(billingScope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(billingScope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    billingScope: string,\n    options?: BenefitRecommendationsListOptionalParams\n  ): AsyncIterableIterator<BenefitRecommendationModel> {\n    for await (const page of this.listPagingPage(billingScope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List of recommendations for purchasing savings plan.\n   * @param billingScope The scope associated with benefit recommendation operations. This includes\n   *                     '/subscriptions/{subscriptionId}/' for subscription scope,\n   *                     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *                     /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for enterprise agreement scope, and\n   *                     '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *                     for billing profile scope\n   * @param options The options parameters.\n   */\n  private _list(\n    billingScope: string,\n    options?: BenefitRecommendationsListOptionalParams\n  ): Promise<BenefitRecommendationsListResponse> {\n    return this.client.sendOperationRequest(\n      { billingScope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param billingScope The scope associated with benefit recommendation operations. This includes\n   *                     '/subscriptions/{subscriptionId}/' for subscription scope,\n   *                     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *                     /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for enterprise agreement scope, and\n   *                     '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *                     for billing profile scope\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    billingScope: string,\n    nextLink: string,\n    options?: BenefitRecommendationsListNextOptionalParams\n  ): Promise<BenefitRecommendationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingScope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{billingScope}/providers/Microsoft.CostManagement/benefitRecommendations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitRecommendationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand,\n    Parameters.orderby\n  ],\n  urlParameters: [Parameters.$host, Parameters.billingScope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitRecommendationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingScope\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BenefitUtilizationSummaries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CostManagementClient } from \"../costManagementClient\";\nimport {\n  BenefitUtilizationSummaryUnion,\n  BenefitUtilizationSummariesListByBillingAccountIdNextOptionalParams,\n  BenefitUtilizationSummariesListByBillingAccountIdOptionalParams,\n  BenefitUtilizationSummariesListByBillingAccountIdResponse,\n  BenefitUtilizationSummariesListByBillingProfileIdNextOptionalParams,\n  BenefitUtilizationSummariesListByBillingProfileIdOptionalParams,\n  BenefitUtilizationSummariesListByBillingProfileIdResponse,\n  BenefitUtilizationSummariesListBySavingsPlanOrderNextOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanOrderResponse,\n  BenefitUtilizationSummariesListBySavingsPlanIdNextOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanIdResponse,\n  BenefitUtilizationSummariesListByBillingAccountIdNextResponse,\n  BenefitUtilizationSummariesListByBillingProfileIdNextResponse,\n  BenefitUtilizationSummariesListBySavingsPlanOrderNextResponse,\n  BenefitUtilizationSummariesListBySavingsPlanIdNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BenefitUtilizationSummaries operations. */\nexport class BenefitUtilizationSummariesImpl\n  implements BenefitUtilizationSummaries {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class BenefitUtilizationSummaries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain\n   * values: 'Daily' and 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param options The options parameters.\n   */\n  public listByBillingAccountId(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listByBillingAccountIdPagingAll(\n      billingAccountId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingAccountIdPagingPage(\n          billingAccountId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingAccountIdPagingPage(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListByBillingAccountIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingAccountId(billingAccountId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingAccountIdNext(\n        billingAccountId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingAccountIdPagingAll(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listByBillingAccountIdPagingPage(\n      billingAccountId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and\n   * 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param options The options parameters.\n   */\n  public listByBillingProfileId(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listByBillingProfileIdPagingAll(\n      billingAccountId,\n      billingProfileId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingProfileIdPagingPage(\n          billingAccountId,\n          billingProfileId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingProfileIdPagingPage(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListByBillingProfileIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingProfileId(\n        billingAccountId,\n        billingProfileId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingProfileIdNext(\n        billingAccountId,\n        billingProfileId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingProfileIdPagingAll(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listByBillingProfileIdPagingPage(\n      billingAccountId,\n      billingProfileId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param options The options parameters.\n   */\n  public listBySavingsPlanOrder(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listBySavingsPlanOrderPagingAll(\n      savingsPlanOrderId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySavingsPlanOrderPagingPage(\n          savingsPlanOrderId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySavingsPlanOrderPagingPage(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListBySavingsPlanOrderResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySavingsPlanOrder(savingsPlanOrderId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySavingsPlanOrderNext(\n        savingsPlanOrderId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySavingsPlanOrderPagingAll(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listBySavingsPlanOrderPagingPage(\n      savingsPlanOrderId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param options The options parameters.\n   */\n  public listBySavingsPlanId(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listBySavingsPlanIdPagingAll(\n      savingsPlanOrderId,\n      savingsPlanId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySavingsPlanIdPagingPage(\n          savingsPlanOrderId,\n          savingsPlanId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySavingsPlanIdPagingPage(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListBySavingsPlanIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySavingsPlanId(\n        savingsPlanOrderId,\n        savingsPlanId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySavingsPlanIdNext(\n        savingsPlanOrderId,\n        savingsPlanId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySavingsPlanIdPagingAll(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listBySavingsPlanIdPagingPage(\n      savingsPlanOrderId,\n      savingsPlanId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain\n   * values: 'Daily' and 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountId(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingAccountIdResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      listByBillingAccountIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and\n   * 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileId(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingProfileIdResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, options },\n      listByBillingProfileIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanOrder(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanOrderResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, options },\n      listBySavingsPlanOrderOperationSpec\n    );\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanId(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanIdResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, savingsPlanId, options },\n      listBySavingsPlanIdOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingAccountIdNext\n   * @param billingAccountId Billing account ID\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingAccountId method.\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountIdNext(\n    billingAccountId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingAccountIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, nextLink, options },\n      listByBillingAccountIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingProfileIdNext\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingProfileId method.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileIdNext(\n    billingAccountId: string,\n    billingProfileId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingProfileIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, nextLink, options },\n      listByBillingProfileIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySavingsPlanOrderNext\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param nextLink The nextLink from the previous successful call to the ListBySavingsPlanOrder method.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanOrderNext(\n    savingsPlanOrderId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanOrderNextResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, nextLink, options },\n      listBySavingsPlanOrderNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySavingsPlanIdNext\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param nextLink The nextLink from the previous successful call to the ListBySavingsPlanId method.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanIdNext(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, savingsPlanId, nextLink, options },\n      listBySavingsPlanIdNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByBillingAccountIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.grainParameter,\n    Parameters.filter1\n  ],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.grainParameter,\n    Parameters.filter1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanOrderOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.grainParameter\n  ],\n  urlParameters: [Parameters.$host, Parameters.savingsPlanOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.grainParameter\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.savingsPlanOrderId,\n    Parameters.savingsPlanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanOrderNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.savingsPlanOrderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.savingsPlanOrderId,\n    Parameters.savingsPlanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  ViewsImpl,\n  AlertsImpl,\n  ForecastImpl,\n  DimensionsImpl,\n  QueryImpl,\n  GenerateReservationDetailsReportImpl,\n  ExportsImpl,\n  GenerateCostDetailsReportImpl,\n  GenerateDetailedCostReportImpl,\n  GenerateDetailedCostReportOperationResultsImpl,\n  GenerateDetailedCostReportOperationStatusImpl,\n  PriceSheetImpl,\n  ScheduledActionsImpl,\n  BenefitRecommendationsImpl,\n  BenefitUtilizationSummariesImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Views,\n  Alerts,\n  Forecast,\n  Dimensions,\n  Query,\n  GenerateReservationDetailsReport,\n  Exports,\n  GenerateCostDetailsReport,\n  GenerateDetailedCostReport,\n  GenerateDetailedCostReportOperationResults,\n  GenerateDetailedCostReportOperationStatus,\n  PriceSheet,\n  ScheduledActions,\n  BenefitRecommendations,\n  BenefitUtilizationSummaries\n} from \"./operationsInterfaces\";\nimport { CostManagementClientOptionalParams } from \"./models\";\n\nexport class CostManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the CostManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: CostManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CostManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-costmanagement/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-10-01\";\n    this.operations = new OperationsImpl(this);\n    this.views = new ViewsImpl(this);\n    this.alerts = new AlertsImpl(this);\n    this.forecast = new ForecastImpl(this);\n    this.dimensions = new DimensionsImpl(this);\n    this.query = new QueryImpl(this);\n    this.generateReservationDetailsReport = new GenerateReservationDetailsReportImpl(\n      this\n    );\n    this.exports = new ExportsImpl(this);\n    this.generateCostDetailsReport = new GenerateCostDetailsReportImpl(this);\n    this.generateDetailedCostReport = new GenerateDetailedCostReportImpl(this);\n    this.generateDetailedCostReportOperationResults = new GenerateDetailedCostReportOperationResultsImpl(\n      this\n    );\n    this.generateDetailedCostReportOperationStatus = new GenerateDetailedCostReportOperationStatusImpl(\n      this\n    );\n    this.priceSheet = new PriceSheetImpl(this);\n    this.scheduledActions = new ScheduledActionsImpl(this);\n    this.benefitRecommendations = new BenefitRecommendationsImpl(this);\n    this.benefitUtilizationSummaries = new BenefitUtilizationSummariesImpl(\n      this\n    );\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  views: Views;\n  alerts: Alerts;\n  forecast: Forecast;\n  dimensions: Dimensions;\n  query: Query;\n  generateReservationDetailsReport: GenerateReservationDetailsReport;\n  exports: Exports;\n  generateCostDetailsReport: GenerateCostDetailsReport;\n  generateDetailedCostReport: GenerateDetailedCostReport;\n  generateDetailedCostReportOperationResults: GenerateDetailedCostReportOperationResults;\n  generateDetailedCostReportOperationStatus: GenerateDetailedCostReportOperationStatus;\n  priceSheet: PriceSheet;\n  scheduledActions: ScheduledActions;\n  benefitRecommendations: BenefitRecommendations;\n  benefitUtilizationSummaries: BenefitUtilizationSummaries;\n}\n"],"names":["KnownOrigin","KnownActionType","KnownReportType","KnownReportTimeframeType","KnownReportGranularityType","KnownFunctionType","KnownQueryColumnType","KnownReportConfigSortingType","KnownOperatorType","KnownChartType","KnownAccumulatedType","KnownMetricType","KnownKpiType","KnownPivotType","KnownAlertType","KnownAlertCategory","KnownAlertCriteria","KnownAlertSource","KnownAlertTimeGrainType","KnownAlertOperator","KnownAlertStatus","KnownExternalCloudProviderType","KnownForecastType","KnownForecastTimeframe","KnownGranularityType","KnownFunctionName","KnownForecastOperatorType","KnownExportType","KnownTimeframeType","KnownQueryOperatorType","KnownOperationStatusType","KnownReservationReportSchema","KnownStatusType","KnownRecurrenceType","KnownFormatType","KnownExecutionType","KnownExecutionStatus","KnownCostDetailsMetricType","KnownCostDetailsStatusType","KnownCostDetailsDataFormat","KnownGenerateDetailedCostReportMetricType","KnownReportOperationStatusType","KnownFileFormat","KnownScheduleFrequency","KnownDaysOfWeek","KnownWeeksOfMonth","KnownScheduledActionStatus","KnownScheduledActionKind","KnownCreatedByType","KnownCheckNameAvailabilityReason","KnownLookBackPeriod","KnownGrain","KnownTerm","KnownScope","KnownBenefitKind","KnownGrainParameter","ViewMapper","DismissAlertPayloadMapper","ForecastDefinitionMapper","QueryDefinitionMapper","ExportMapper","GenerateCostDetailsReportRequestDefinitionMapper","GenerateDetailedCostReportDefinitionMapper","ScheduledActionMapper","CheckNameAvailabilityRequestMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","listByScopeOperationSpec","getOperationSpec","createOrUpdateOperationSpec","deleteOperationSpec","getByScopeOperationSpec","createOrUpdateByScopeOperationSpec","deleteByScopeOperationSpec","listByScopeNextOperationSpec","Mappers.ViewListResult","Parameters.scope","Mappers.View","Parameters.viewName","Parameters.parameters","Parameters.contentType","Mappers.AlertsResult","Parameters.scope1","Mappers.Alert","Parameters.alertId","Parameters.parameters1","Parameters.externalCloudProviderType","Parameters.externalCloudProviderId","usageOperationSpec","Mappers.ForecastResult","Parameters.parameters2","Parameters.filter","Mappers.DimensionsListResult","Parameters.expand","Parameters.skiptoken","Parameters.top","Mappers.QueryResult","Parameters.parameters3","__rest","__awaiter","createHttpPoller","Mappers.OperationStatus","Parameters.startDate","Parameters.endDate","Parameters.billingAccountId","Parameters.billingProfileId","Mappers.ExportListResult","Mappers.Export","Parameters.exportName","Parameters.parameters4","Mappers.ExportExecutionListResult","createOperationOperationSpec","Mappers.CostDetailsOperationResults","Mappers.GenerateCostDetailsReportErrorResponse","Parameters.parameters5","Parameters.operationId","Mappers.GenerateDetailedCostReportOperationResult","Mappers.GenerateDetailedCostReportErrorResponse","Parameters.parameters6","Mappers.GenerateDetailedCostReportOperationStatuses","Mappers.DownloadURL","Parameters.billingAccountName","Parameters.billingProfileName","Parameters.invoiceName","Mappers.ScheduledActionListResult","Mappers.ErrorResponseWithNestedDetails","Mappers.ScheduledAction","Parameters.scheduledAction","Parameters.name","Parameters.ifMatch","Mappers.CheckNameAvailabilityResponse","Parameters.checkNameAvailabilityRequest","Mappers.BenefitRecommendationsListResult","Parameters.orderby","Parameters.billingScope","Mappers.BenefitUtilizationSummariesListResult","Parameters.grainParameter","Parameters.filter1","Parameters.savingsPlanOrderId","Parameters.savingsPlanId","coreRestPipeline"],"mappings":"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"}