/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CostManagementClient } from "@azure/arm-costmanagement";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 *
 * @summary Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/GenerateDetailedCostReportByBillingAccountLegacyAndBillingPeriod.json
 */
function generateDetailedCostReportByBillingAccountLegacyAndBillingPeriod() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345";
        const parameters = {
            billingPeriod: "202008",
            metric: "ActualCost"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.generateDetailedCostReport.beginCreateOperationAndWait(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 *
 * @summary Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/GenerateDetailedCostReportByBillingProfileAndInvoiceId.json
 */
function generateDetailedCostReportByBillingProfileAndInvoiceId() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const parameters = {
            invoiceId: "M1234567",
            metric: "ActualCost"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.generateDetailedCostReport.beginCreateOperationAndWait(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 *
 * @summary Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/GenerateDetailedCostReportByBillingProfileAndInvoiceIdAndCustomerId.json
 */
function generateDetailedCostReportByBillingProfileAndInvoiceIdAndCustomerId() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579";
        const parameters = {
            customerId: "456789",
            invoiceId: "M1234567",
            metric: "ActualCost"
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.generateDetailedCostReport.beginCreateOperationAndWait(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 *
 * @summary Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/GenerateDetailedCostReportByCustomerAndTimePeriod.json
 */
function generateDetailedCostReportByCustomerAndTimePeriod() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/13579";
        const parameters = {
            metric: "ActualCost",
            timePeriod: { end: "2020-03-15", start: "2020-03-01" }
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.generateDetailedCostReport.beginCreateOperationAndWait(scope, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 *
 * @summary Generates the detailed cost report for provided date range, billing period(only enterprise customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation will provide the status and if the operation is completed the blob file where generated detailed cost report is being stored.
 * x-ms-original-file: specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2022-10-01/examples/GenerateDetailedCostReportBySubscriptionAndTimePeriod.json
 */
function generateDetailedCostReportBySubscriptionAndTimePeriod() {
    return __awaiter(this, void 0, void 0, function* () {
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const parameters = {
            metric: "ActualCost",
            timePeriod: { end: "2020-03-15", start: "2020-03-01" }
        };
        const credential = new DefaultAzureCredential();
        const client = new CostManagementClient(credential);
        const result = yield client.generateDetailedCostReport.beginCreateOperationAndWait(scope, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        generateDetailedCostReportByBillingAccountLegacyAndBillingPeriod();
        generateDetailedCostReportByBillingProfileAndInvoiceId();
        generateDetailedCostReportByBillingProfileAndInvoiceIdAndCustomerId();
        generateDetailedCostReportByCustomerAndTimePeriod();
        generateDetailedCostReportBySubscriptionAndTimePeriod();
    });
}
main().catch(console.error);
//# sourceMappingURL=generateDetailedCostReportCreateOperationSample.js.map